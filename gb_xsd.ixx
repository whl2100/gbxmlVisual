// Copyright (C) 2005-2010 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef SCHEMA_GB_XSD_IXX
#define SCHEMA_GB_XSD_IXX

// Begin prologue.
//
//
// End prologue.

namespace schema
{
  // absorptanceUnitEnum
  // 

  inline
  absorptanceUnitEnum::
  absorptanceUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  absorptanceUnitEnum::
  absorptanceUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_absorptanceUnitEnum_literals_[v])
  {
  }

  inline
  absorptanceUnitEnum::
  absorptanceUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  absorptanceUnitEnum::
  absorptanceUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  absorptanceUnitEnum::
  absorptanceUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  absorptanceUnitEnum::
  absorptanceUnitEnum (const absorptanceUnitEnum& v,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  absorptanceUnitEnum& absorptanceUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_absorptanceUnitEnum_literals_[v]);

    return *this;
  }


  // airTemperatureTypeEnum
  // 

  inline
  airTemperatureTypeEnum::
  airTemperatureTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  airTemperatureTypeEnum::
  airTemperatureTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_airTemperatureTypeEnum_literals_[v])
  {
  }

  inline
  airTemperatureTypeEnum::
  airTemperatureTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  airTemperatureTypeEnum::
  airTemperatureTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  airTemperatureTypeEnum::
  airTemperatureTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  airTemperatureTypeEnum::
  airTemperatureTypeEnum (const airTemperatureTypeEnum& v,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  airTemperatureTypeEnum& airTemperatureTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_airTemperatureTypeEnum_literals_[v]);

    return *this;
  }


  // resetTemperatureTypeEnum
  // 

  inline
  resetTemperatureTypeEnum::
  resetTemperatureTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  resetTemperatureTypeEnum::
  resetTemperatureTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_resetTemperatureTypeEnum_literals_[v])
  {
  }

  inline
  resetTemperatureTypeEnum::
  resetTemperatureTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resetTemperatureTypeEnum::
  resetTemperatureTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resetTemperatureTypeEnum::
  resetTemperatureTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resetTemperatureTypeEnum::
  resetTemperatureTypeEnum (const resetTemperatureTypeEnum& v,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  resetTemperatureTypeEnum& resetTemperatureTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_resetTemperatureTypeEnum_literals_[v]);

    return *this;
  }


  // areaUnitEnum
  // 

  inline
  areaUnitEnum::
  areaUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  areaUnitEnum::
  areaUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_areaUnitEnum_literals_[v])
  {
  }

  inline
  areaUnitEnum::
  areaUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  areaUnitEnum::
  areaUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  areaUnitEnum::
  areaUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  areaUnitEnum::
  areaUnitEnum (const areaUnitEnum& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  areaUnitEnum& areaUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_areaUnitEnum_literals_[v]);

    return *this;
  }


  // blowerDoorUnitEnum
  // 

  inline
  blowerDoorUnitEnum::
  blowerDoorUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  blowerDoorUnitEnum::
  blowerDoorUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_blowerDoorUnitEnum_literals_[v])
  {
  }

  inline
  blowerDoorUnitEnum::
  blowerDoorUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  blowerDoorUnitEnum::
  blowerDoorUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  blowerDoorUnitEnum::
  blowerDoorUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  blowerDoorUnitEnum::
  blowerDoorUnitEnum (const blowerDoorUnitEnum& v,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  blowerDoorUnitEnum& blowerDoorUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_blowerDoorUnitEnum_literals_[v]);

    return *this;
  }


  // buildingTypeEnum
  // 

  inline
  buildingTypeEnum::
  buildingTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  buildingTypeEnum::
  buildingTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_buildingTypeEnum_literals_[v])
  {
  }

  inline
  buildingTypeEnum::
  buildingTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  buildingTypeEnum::
  buildingTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  buildingTypeEnum::
  buildingTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  buildingTypeEnum::
  buildingTypeEnum (const buildingTypeEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  buildingTypeEnum& buildingTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_buildingTypeEnum_literals_[v]);

    return *this;
  }


  // capacityTypeEnum
  // 

  inline
  capacityTypeEnum::
  capacityTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  capacityTypeEnum::
  capacityTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_capacityTypeEnum_literals_[v])
  {
  }

  inline
  capacityTypeEnum::
  capacityTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  capacityTypeEnum::
  capacityTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  capacityTypeEnum::
  capacityTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  capacityTypeEnum::
  capacityTypeEnum (const capacityTypeEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  capacityTypeEnum& capacityTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_capacityTypeEnum_literals_[v]);

    return *this;
  }


  // capacityUnitEnum
  // 

  inline
  capacityUnitEnum::
  capacityUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  capacityUnitEnum::
  capacityUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_capacityUnitEnum_literals_[v])
  {
  }

  inline
  capacityUnitEnum::
  capacityUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  capacityUnitEnum::
  capacityUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  capacityUnitEnum::
  capacityUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  capacityUnitEnum::
  capacityUnitEnum (const capacityUnitEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  capacityUnitEnum& capacityUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_capacityUnitEnum_literals_[v]);

    return *this;
  }


  // conditioningUnitEnum
  // 

  inline
  conditioningUnitEnum::
  conditioningUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  conditioningUnitEnum::
  conditioningUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_conditioningUnitEnum_literals_[v])
  {
  }

  inline
  conditioningUnitEnum::
  conditioningUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conditioningUnitEnum::
  conditioningUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conditioningUnitEnum::
  conditioningUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conditioningUnitEnum::
  conditioningUnitEnum (const conditioningUnitEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  conditioningUnitEnum& conditioningUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_conditioningUnitEnum_literals_[v]);

    return *this;
  }


  // conditionTypeEnum
  // 

  inline
  conditionTypeEnum::
  conditionTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  conditionTypeEnum::
  conditionTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_conditionTypeEnum_literals_[v])
  {
  }

  inline
  conditionTypeEnum::
  conditionTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conditionTypeEnum::
  conditionTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conditionTypeEnum::
  conditionTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conditionTypeEnum::
  conditionTypeEnum (const conditionTypeEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  conditionTypeEnum& conditionTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_conditionTypeEnum_literals_[v]);

    return *this;
  }


  // conditioningTypeEnum
  // 

  inline
  conditioningTypeEnum::
  conditioningTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  conditioningTypeEnum::
  conditioningTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_conditioningTypeEnum_literals_[v])
  {
  }

  inline
  conditioningTypeEnum::
  conditioningTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conditioningTypeEnum::
  conditioningTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conditioningTypeEnum::
  conditioningTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conditioningTypeEnum::
  conditioningTypeEnum (const conditioningTypeEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  conditioningTypeEnum& conditioningTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_conditioningTypeEnum_literals_[v]);

    return *this;
  }


  // conductivityFofTUnitEnum
  // 

  inline
  conductivityFofTUnitEnum::
  conductivityFofTUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  conductivityFofTUnitEnum::
  conductivityFofTUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_conductivityFofTUnitEnum_literals_[v])
  {
  }

  inline
  conductivityFofTUnitEnum::
  conductivityFofTUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conductivityFofTUnitEnum::
  conductivityFofTUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conductivityFofTUnitEnum::
  conductivityFofTUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conductivityFofTUnitEnum::
  conductivityFofTUnitEnum (const conductivityFofTUnitEnum& v,
                            ::xml_schema::flags f,
                            ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  conductivityFofTUnitEnum& conductivityFofTUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_conductivityFofTUnitEnum_literals_[v]);

    return *this;
  }


  // conductivityUnitEnum
  // 

  inline
  conductivityUnitEnum::
  conductivityUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  conductivityUnitEnum::
  conductivityUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_conductivityUnitEnum_literals_[v])
  {
  }

  inline
  conductivityUnitEnum::
  conductivityUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conductivityUnitEnum::
  conductivityUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conductivityUnitEnum::
  conductivityUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  conductivityUnitEnum::
  conductivityUnitEnum (const conductivityUnitEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  conductivityUnitEnum& conductivityUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_conductivityUnitEnum_literals_[v]);

    return *this;
  }


  // controlTypeEnum
  // 

  inline
  controlTypeEnum::
  controlTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  controlTypeEnum::
  controlTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_controlTypeEnum_literals_[v])
  {
  }

  inline
  controlTypeEnum::
  controlTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  controlTypeEnum::
  controlTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  controlTypeEnum::
  controlTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  controlTypeEnum::
  controlTypeEnum (const controlTypeEnum& v,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  controlTypeEnum& controlTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_controlTypeEnum_literals_[v]);

    return *this;
  }


  // costTypeEnum
  // 

  inline
  costTypeEnum::
  costTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  costTypeEnum::
  costTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_costTypeEnum_literals_[v])
  {
  }

  inline
  costTypeEnum::
  costTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  costTypeEnum::
  costTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  costTypeEnum::
  costTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  costTypeEnum::
  costTypeEnum (const costTypeEnum& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  costTypeEnum& costTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_costTypeEnum_literals_[v]);

    return *this;
  }


  // currencyTypeEnum
  // 

  inline
  currencyTypeEnum::
  currencyTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  currencyTypeEnum::
  currencyTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_currencyTypeEnum_literals_[v])
  {
  }

  inline
  currencyTypeEnum::
  currencyTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  currencyTypeEnum::
  currencyTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  currencyTypeEnum::
  currencyTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  currencyTypeEnum::
  currencyTypeEnum (const currencyTypeEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  currencyTypeEnum& currencyTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_currencyTypeEnum_literals_[v]);

    return *this;
  }


  // dayTypeEnum
  // 

  inline
  dayTypeEnum::
  dayTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  dayTypeEnum::
  dayTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_dayTypeEnum_literals_[v])
  {
  }

  inline
  dayTypeEnum::
  dayTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  dayTypeEnum::
  dayTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  dayTypeEnum::
  dayTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  dayTypeEnum::
  dayTypeEnum (const dayTypeEnum& v,
               ::xml_schema::flags f,
               ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  dayTypeEnum& dayTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_dayTypeEnum_literals_[v]);

    return *this;
  }


  // deltaPUnitEnum
  // 

  inline
  deltaPUnitEnum::
  deltaPUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  deltaPUnitEnum::
  deltaPUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_deltaPUnitEnum_literals_[v])
  {
  }

  inline
  deltaPUnitEnum::
  deltaPUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  deltaPUnitEnum::
  deltaPUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  deltaPUnitEnum::
  deltaPUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  deltaPUnitEnum::
  deltaPUnitEnum (const deltaPUnitEnum& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  deltaPUnitEnum& deltaPUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_deltaPUnitEnum_literals_[v]);

    return *this;
  }


  // densityUnitEnum
  // 

  inline
  densityUnitEnum::
  densityUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  densityUnitEnum::
  densityUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_densityUnitEnum_literals_[v])
  {
  }

  inline
  densityUnitEnum::
  densityUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  densityUnitEnum::
  densityUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  densityUnitEnum::
  densityUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  densityUnitEnum::
  densityUnitEnum (const densityUnitEnum& v,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  densityUnitEnum& densityUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_densityUnitEnum_literals_[v]);

    return *this;
  }


  // densityFofTUnitEnum
  // 

  inline
  densityFofTUnitEnum::
  densityFofTUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  densityFofTUnitEnum::
  densityFofTUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_densityFofTUnitEnum_literals_[v])
  {
  }

  inline
  densityFofTUnitEnum::
  densityFofTUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  densityFofTUnitEnum::
  densityFofTUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  densityFofTUnitEnum::
  densityFofTUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  densityFofTUnitEnum::
  densityFofTUnitEnum (const densityFofTUnitEnum& v,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  densityFofTUnitEnum& densityFofTUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_densityFofTUnitEnum_literals_[v]);

    return *this;
  }


  // directionUnitEnum
  // 

  inline
  directionUnitEnum::
  directionUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  directionUnitEnum::
  directionUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_directionUnitEnum_literals_[v])
  {
  }

  inline
  directionUnitEnum::
  directionUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  directionUnitEnum::
  directionUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  directionUnitEnum::
  directionUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  directionUnitEnum::
  directionUnitEnum (const directionUnitEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  directionUnitEnum& directionUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_directionUnitEnum_literals_[v]);

    return *this;
  }


  // enthalpyUnitEnum
  // 

  inline
  enthalpyUnitEnum::
  enthalpyUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  enthalpyUnitEnum::
  enthalpyUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_enthalpyUnitEnum_literals_[v])
  {
  }

  inline
  enthalpyUnitEnum::
  enthalpyUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  enthalpyUnitEnum::
  enthalpyUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  enthalpyUnitEnum::
  enthalpyUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  enthalpyUnitEnum::
  enthalpyUnitEnum (const enthalpyUnitEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  enthalpyUnitEnum& enthalpyUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_enthalpyUnitEnum_literals_[v]);

    return *this;
  }


  // equipmentTypeEnum
  // 

  inline
  equipmentTypeEnum::
  equipmentTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  equipmentTypeEnum::
  equipmentTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_equipmentTypeEnum_literals_[v])
  {
  }

  inline
  equipmentTypeEnum::
  equipmentTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  equipmentTypeEnum::
  equipmentTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  equipmentTypeEnum::
  equipmentTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  equipmentTypeEnum::
  equipmentTypeEnum (const equipmentTypeEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  equipmentTypeEnum& equipmentTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_equipmentTypeEnum_literals_[v]);

    return *this;
  }


  // efficiencyTypeEnum
  // 

  inline
  efficiencyTypeEnum::
  efficiencyTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  efficiencyTypeEnum::
  efficiencyTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_efficiencyTypeEnum_literals_[v])
  {
  }

  inline
  efficiencyTypeEnum::
  efficiencyTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  efficiencyTypeEnum::
  efficiencyTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  efficiencyTypeEnum::
  efficiencyTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  efficiencyTypeEnum::
  efficiencyTypeEnum (const efficiencyTypeEnum& v,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  efficiencyTypeEnum& efficiencyTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_efficiencyTypeEnum_literals_[v]);

    return *this;
  }


  // emissionUnitEnum
  // 

  inline
  emissionUnitEnum::
  emissionUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  emissionUnitEnum::
  emissionUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_emissionUnitEnum_literals_[v])
  {
  }

  inline
  emissionUnitEnum::
  emissionUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  emissionUnitEnum::
  emissionUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  emissionUnitEnum::
  emissionUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  emissionUnitEnum::
  emissionUnitEnum (const emissionUnitEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  emissionUnitEnum& emissionUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_emissionUnitEnum_literals_[v]);

    return *this;
  }


  // emittanceTypeEnum
  // 

  inline
  emittanceTypeEnum::
  emittanceTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  emittanceTypeEnum::
  emittanceTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_emittanceTypeEnum_literals_[v])
  {
  }

  inline
  emittanceTypeEnum::
  emittanceTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  emittanceTypeEnum::
  emittanceTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  emittanceTypeEnum::
  emittanceTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  emittanceTypeEnum::
  emittanceTypeEnum (const emittanceTypeEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  emittanceTypeEnum& emittanceTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_emittanceTypeEnum_literals_[v]);

    return *this;
  }


  // energyUnitEnum
  // 

  inline
  energyUnitEnum::
  energyUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  energyUnitEnum::
  energyUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_energyUnitEnum_literals_[v])
  {
  }

  inline
  energyUnitEnum::
  energyUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  energyUnitEnum::
  energyUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  energyUnitEnum::
  energyUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  energyUnitEnum::
  energyUnitEnum (const energyUnitEnum& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  energyUnitEnum& energyUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_energyUnitEnum_literals_[v]);

    return *this;
  }


  // entityTypeEnum
  // 

  inline
  entityTypeEnum::
  entityTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  entityTypeEnum::
  entityTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_entityTypeEnum_literals_[v])
  {
  }

  inline
  entityTypeEnum::
  entityTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  entityTypeEnum::
  entityTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  entityTypeEnum::
  entityTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  entityTypeEnum::
  entityTypeEnum (const entityTypeEnum& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  entityTypeEnum& entityTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_entityTypeEnum_literals_[v]);

    return *this;
  }


  // extEquipTypeEnum
  // 

  inline
  extEquipTypeEnum::
  extEquipTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  extEquipTypeEnum::
  extEquipTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_extEquipTypeEnum_literals_[v])
  {
  }

  inline
  extEquipTypeEnum::
  extEquipTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  extEquipTypeEnum::
  extEquipTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  extEquipTypeEnum::
  extEquipTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  extEquipTypeEnum::
  extEquipTypeEnum (const extEquipTypeEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  extEquipTypeEnum& extEquipTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_extEquipTypeEnum_literals_[v]);

    return *this;
  }


  // floorCategoryEnum
  // 

  inline
  floorCategoryEnum::
  floorCategoryEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  floorCategoryEnum::
  floorCategoryEnum (value v)
  : ::xml_schema::nmtoken (_xsd_floorCategoryEnum_literals_[v])
  {
  }

  inline
  floorCategoryEnum::
  floorCategoryEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  floorCategoryEnum::
  floorCategoryEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  floorCategoryEnum::
  floorCategoryEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  floorCategoryEnum::
  floorCategoryEnum (const floorCategoryEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  floorCategoryEnum& floorCategoryEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_floorCategoryEnum_literals_[v]);

    return *this;
  }


  // floorSlabPerimeterHeatLossCoefficientUnitTypeEnum
  // 

  inline
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_literals_[v])
  {
  }

  inline
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum (const floorSlabPerimeterHeatLossCoefficientUnitTypeEnum& v,
                                                     ::xml_schema::flags f,
                                                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum& floorSlabPerimeterHeatLossCoefficientUnitTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_literals_[v]);

    return *this;
  }


  // flowUnitEnum
  // 

  inline
  flowUnitEnum::
  flowUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  flowUnitEnum::
  flowUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_flowUnitEnum_literals_[v])
  {
  }

  inline
  flowUnitEnum::
  flowUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  flowUnitEnum::
  flowUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  flowUnitEnum::
  flowUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  flowUnitEnum::
  flowUnitEnum (const flowUnitEnum& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  flowUnitEnum& flowUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_flowUnitEnum_literals_[v]);

    return *this;
  }


  // flowPerAreaUnitEnum
  // 

  inline
  flowPerAreaUnitEnum::
  flowPerAreaUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  flowPerAreaUnitEnum::
  flowPerAreaUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_flowPerAreaUnitEnum_literals_[v])
  {
  }

  inline
  flowPerAreaUnitEnum::
  flowPerAreaUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  flowPerAreaUnitEnum::
  flowPerAreaUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  flowPerAreaUnitEnum::
  flowPerAreaUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  flowPerAreaUnitEnum::
  flowPerAreaUnitEnum (const flowPerAreaUnitEnum& v,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  flowPerAreaUnitEnum& flowPerAreaUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_flowPerAreaUnitEnum_literals_[v]);

    return *this;
  }


  // fluidTypeEnum
  // 

  inline
  fluidTypeEnum::
  fluidTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  fluidTypeEnum::
  fluidTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_fluidTypeEnum_literals_[v])
  {
  }

  inline
  fluidTypeEnum::
  fluidTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  fluidTypeEnum::
  fluidTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  fluidTypeEnum::
  fluidTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  fluidTypeEnum::
  fluidTypeEnum (const fluidTypeEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  fluidTypeEnum& fluidTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_fluidTypeEnum_literals_[v]);

    return *this;
  }


  // frameTypeEnum
  // 

  inline
  frameTypeEnum::
  frameTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  frameTypeEnum::
  frameTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_frameTypeEnum_literals_[v])
  {
  }

  inline
  frameTypeEnum::
  frameTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  frameTypeEnum::
  frameTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  frameTypeEnum::
  frameTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  frameTypeEnum::
  frameTypeEnum (const frameTypeEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  frameTypeEnum& frameTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_frameTypeEnum_literals_[v]);

    return *this;
  }


  // fuelLoadUnitEnum
  // 

  inline
  fuelLoadUnitEnum::
  fuelLoadUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  fuelLoadUnitEnum::
  fuelLoadUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_fuelLoadUnitEnum_literals_[v])
  {
  }

  inline
  fuelLoadUnitEnum::
  fuelLoadUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  fuelLoadUnitEnum::
  fuelLoadUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  fuelLoadUnitEnum::
  fuelLoadUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  fuelLoadUnitEnum::
  fuelLoadUnitEnum (const fuelLoadUnitEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  fuelLoadUnitEnum& fuelLoadUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_fuelLoadUnitEnum_literals_[v]);

    return *this;
  }


  // gasTypeEnum
  // 

  inline
  gasTypeEnum::
  gasTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  gasTypeEnum::
  gasTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_gasTypeEnum_literals_[v])
  {
  }

  inline
  gasTypeEnum::
  gasTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  gasTypeEnum::
  gasTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  gasTypeEnum::
  gasTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  gasTypeEnum::
  gasTypeEnum (const gasTypeEnum& v,
               ::xml_schema::flags f,
               ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  gasTypeEnum& gasTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_gasTypeEnum_literals_[v]);

    return *this;
  }


  // hOutsideUnitTypeEnum
  // 

  inline
  hOutsideUnitTypeEnum::
  hOutsideUnitTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  hOutsideUnitTypeEnum::
  hOutsideUnitTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_hOutsideUnitTypeEnum_literals_[v])
  {
  }

  inline
  hOutsideUnitTypeEnum::
  hOutsideUnitTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  hOutsideUnitTypeEnum::
  hOutsideUnitTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  hOutsideUnitTypeEnum::
  hOutsideUnitTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  hOutsideUnitTypeEnum::
  hOutsideUnitTypeEnum (const hOutsideUnitTypeEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  hOutsideUnitTypeEnum& hOutsideUnitTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_hOutsideUnitTypeEnum_literals_[v]);

    return *this;
  }


  // hydronicEquipTypeEnum
  // 

  inline
  hydronicEquipTypeEnum::
  hydronicEquipTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  hydronicEquipTypeEnum::
  hydronicEquipTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_hydronicEquipTypeEnum_literals_[v])
  {
  }

  inline
  hydronicEquipTypeEnum::
  hydronicEquipTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  hydronicEquipTypeEnum::
  hydronicEquipTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  hydronicEquipTypeEnum::
  hydronicEquipTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  hydronicEquipTypeEnum::
  hydronicEquipTypeEnum (const hydronicEquipTypeEnum& v,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  hydronicEquipTypeEnum& hydronicEquipTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_hydronicEquipTypeEnum_literals_[v]);

    return *this;
  }


  // illuminanceUnitEnum
  // 

  inline
  illuminanceUnitEnum::
  illuminanceUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  illuminanceUnitEnum::
  illuminanceUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_illuminanceUnitEnum_literals_[v])
  {
  }

  inline
  illuminanceUnitEnum::
  illuminanceUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  illuminanceUnitEnum::
  illuminanceUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  illuminanceUnitEnum::
  illuminanceUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  illuminanceUnitEnum::
  illuminanceUnitEnum (const illuminanceUnitEnum& v,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  illuminanceUnitEnum& illuminanceUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_illuminanceUnitEnum_literals_[v]);

    return *this;
  }


  // infiltrationTypeEnum
  // 

  inline
  infiltrationTypeEnum::
  infiltrationTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  infiltrationTypeEnum::
  infiltrationTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_infiltrationTypeEnum_literals_[v])
  {
  }

  inline
  infiltrationTypeEnum::
  infiltrationTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  infiltrationTypeEnum::
  infiltrationTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  infiltrationTypeEnum::
  infiltrationTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  infiltrationTypeEnum::
  infiltrationTypeEnum (const infiltrationTypeEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  infiltrationTypeEnum& infiltrationTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_infiltrationTypeEnum_literals_[v]);

    return *this;
  }


  // intEquipTypeEnum
  // 

  inline
  intEquipTypeEnum::
  intEquipTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  intEquipTypeEnum::
  intEquipTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_intEquipTypeEnum_literals_[v])
  {
  }

  inline
  intEquipTypeEnum::
  intEquipTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  intEquipTypeEnum::
  intEquipTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  intEquipTypeEnum::
  intEquipTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  intEquipTypeEnum::
  intEquipTypeEnum (const intEquipTypeEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  intEquipTypeEnum& intEquipTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_intEquipTypeEnum_literals_[v]);

    return *this;
  }


  // inverseTempUnitEnum
  // 

  inline
  inverseTempUnitEnum::
  inverseTempUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  inverseTempUnitEnum::
  inverseTempUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_inverseTempUnitEnum_literals_[v])
  {
  }

  inline
  inverseTempUnitEnum::
  inverseTempUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  inverseTempUnitEnum::
  inverseTempUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  inverseTempUnitEnum::
  inverseTempUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  inverseTempUnitEnum::
  inverseTempUnitEnum (const inverseTempUnitEnum& v,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  inverseTempUnitEnum& inverseTempUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_inverseTempUnitEnum_literals_[v]);

    return *this;
  }


  // lengthUnitEnum
  // 

  inline
  lengthUnitEnum::
  lengthUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  lengthUnitEnum::
  lengthUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_lengthUnitEnum_literals_[v])
  {
  }

  inline
  lengthUnitEnum::
  lengthUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  lengthUnitEnum::
  lengthUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  lengthUnitEnum::
  lengthUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  lengthUnitEnum::
  lengthUnitEnum (const lengthUnitEnum& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  lengthUnitEnum& lengthUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_lengthUnitEnum_literals_[v]);

    return *this;
  }


  // lifeUnitEnum
  // 

  inline
  lifeUnitEnum::
  lifeUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  lifeUnitEnum::
  lifeUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_lifeUnitEnum_literals_[v])
  {
  }

  inline
  lifeUnitEnum::
  lifeUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  lifeUnitEnum::
  lifeUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  lifeUnitEnum::
  lifeUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  lifeUnitEnum::
  lifeUnitEnum (const lifeUnitEnum& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  lifeUnitEnum& lifeUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_lifeUnitEnum_literals_[v]);

    return *this;
  }


  // lightControlTypeEnum
  // 

  inline
  lightControlTypeEnum::
  lightControlTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  lightControlTypeEnum::
  lightControlTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_lightControlTypeEnum_literals_[v])
  {
  }

  inline
  lightControlTypeEnum::
  lightControlTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  lightControlTypeEnum::
  lightControlTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  lightControlTypeEnum::
  lightControlTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  lightControlTypeEnum::
  lightControlTypeEnum (const lightControlTypeEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  lightControlTypeEnum& lightControlTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_lightControlTypeEnum_literals_[v]);

    return *this;
  }


  // loadUnitEnum
  // 

  inline
  loadUnitEnum::
  loadUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  loadUnitEnum::
  loadUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_loadUnitEnum_literals_[v])
  {
  }

  inline
  loadUnitEnum::
  loadUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  loadUnitEnum::
  loadUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  loadUnitEnum::
  loadUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  loadUnitEnum::
  loadUnitEnum (const loadUnitEnum& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  loadUnitEnum& loadUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_loadUnitEnum_literals_[v]);

    return *this;
  }


  // loopTypeEnum
  // 

  inline
  loopTypeEnum::
  loopTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  loopTypeEnum::
  loopTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_loopTypeEnum_literals_[v])
  {
  }

  inline
  loopTypeEnum::
  loopTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  loopTypeEnum::
  loopTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  loopTypeEnum::
  loopTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  loopTypeEnum::
  loopTypeEnum (const loopTypeEnum& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  loopTypeEnum& loopTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_loopTypeEnum_literals_[v]);

    return *this;
  }


  // openingTypeEnum
  // 

  inline
  openingTypeEnum::
  openingTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  openingTypeEnum::
  openingTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_openingTypeEnum_literals_[v])
  {
  }

  inline
  openingTypeEnum::
  openingTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  openingTypeEnum::
  openingTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  openingTypeEnum::
  openingTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  openingTypeEnum::
  openingTypeEnum (const openingTypeEnum& v,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  openingTypeEnum& openingTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_openingTypeEnum_literals_[v]);

    return *this;
  }


  // operationTypeEnum
  // 

  inline
  operationTypeEnum::
  operationTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  operationTypeEnum::
  operationTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_operationTypeEnum_literals_[v])
  {
  }

  inline
  operationTypeEnum::
  operationTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  operationTypeEnum::
  operationTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  operationTypeEnum::
  operationTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  operationTypeEnum::
  operationTypeEnum (const operationTypeEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  operationTypeEnum& operationTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_operationTypeEnum_literals_[v]);

    return *this;
  }


  // peopleHeatGainUnitEnum
  // 

  inline
  peopleHeatGainUnitEnum::
  peopleHeatGainUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  peopleHeatGainUnitEnum::
  peopleHeatGainUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_peopleHeatGainUnitEnum_literals_[v])
  {
  }

  inline
  peopleHeatGainUnitEnum::
  peopleHeatGainUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  peopleHeatGainUnitEnum::
  peopleHeatGainUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  peopleHeatGainUnitEnum::
  peopleHeatGainUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  peopleHeatGainUnitEnum::
  peopleHeatGainUnitEnum (const peopleHeatGainUnitEnum& v,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  peopleHeatGainUnitEnum& peopleHeatGainUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_peopleHeatGainUnitEnum_literals_[v]);

    return *this;
  }


  // peopleHeatGainTypeEnum
  // 

  inline
  peopleHeatGainTypeEnum::
  peopleHeatGainTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  peopleHeatGainTypeEnum::
  peopleHeatGainTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_peopleHeatGainTypeEnum_literals_[v])
  {
  }

  inline
  peopleHeatGainTypeEnum::
  peopleHeatGainTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  peopleHeatGainTypeEnum::
  peopleHeatGainTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  peopleHeatGainTypeEnum::
  peopleHeatGainTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  peopleHeatGainTypeEnum::
  peopleHeatGainTypeEnum (const peopleHeatGainTypeEnum& v,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  peopleHeatGainTypeEnum& peopleHeatGainTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_peopleHeatGainTypeEnum_literals_[v]);

    return *this;
  }


  // peopleNumberUnitEnum
  // 

  inline
  peopleNumberUnitEnum::
  peopleNumberUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  peopleNumberUnitEnum::
  peopleNumberUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_peopleNumberUnitEnum_literals_[v])
  {
  }

  inline
  peopleNumberUnitEnum::
  peopleNumberUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  peopleNumberUnitEnum::
  peopleNumberUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  peopleNumberUnitEnum::
  peopleNumberUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  peopleNumberUnitEnum::
  peopleNumberUnitEnum (const peopleNumberUnitEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  peopleNumberUnitEnum& peopleNumberUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_peopleNumberUnitEnum_literals_[v]);

    return *this;
  }


  // permUnitEnum
  // 

  inline
  permUnitEnum::
  permUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  permUnitEnum::
  permUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_permUnitEnum_literals_[v])
  {
  }

  inline
  permUnitEnum::
  permUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  permUnitEnum::
  permUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  permUnitEnum::
  permUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  permUnitEnum::
  permUnitEnum (const permUnitEnum& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  permUnitEnum& permUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_permUnitEnum_literals_[v]);

    return *this;
  }


  // powerTypeEnum
  // 

  inline
  powerTypeEnum::
  powerTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  powerTypeEnum::
  powerTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_powerTypeEnum_literals_[v])
  {
  }

  inline
  powerTypeEnum::
  powerTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerTypeEnum::
  powerTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerTypeEnum::
  powerTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerTypeEnum::
  powerTypeEnum (const powerTypeEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  powerTypeEnum& powerTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_powerTypeEnum_literals_[v]);

    return *this;
  }


  // powerUnitEnum
  // 

  inline
  powerUnitEnum::
  powerUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  powerUnitEnum::
  powerUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_powerUnitEnum_literals_[v])
  {
  }

  inline
  powerUnitEnum::
  powerUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerUnitEnum::
  powerUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerUnitEnum::
  powerUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerUnitEnum::
  powerUnitEnum (const powerUnitEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  powerUnitEnum& powerUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_powerUnitEnum_literals_[v]);

    return *this;
  }


  // powerUseTypeEnum
  // 

  inline
  powerUseTypeEnum::
  powerUseTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  powerUseTypeEnum::
  powerUseTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_powerUseTypeEnum_literals_[v])
  {
  }

  inline
  powerUseTypeEnum::
  powerUseTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerUseTypeEnum::
  powerUseTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerUseTypeEnum::
  powerUseTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerUseTypeEnum::
  powerUseTypeEnum (const powerUseTypeEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  powerUseTypeEnum& powerUseTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_powerUseTypeEnum_literals_[v]);

    return *this;
  }


  // powerPerAreaUnitEnum
  // 

  inline
  powerPerAreaUnitEnum::
  powerPerAreaUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  powerPerAreaUnitEnum::
  powerPerAreaUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_powerPerAreaUnitEnum_literals_[v])
  {
  }

  inline
  powerPerAreaUnitEnum::
  powerPerAreaUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerPerAreaUnitEnum::
  powerPerAreaUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerPerAreaUnitEnum::
  powerPerAreaUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  powerPerAreaUnitEnum::
  powerPerAreaUnitEnum (const powerPerAreaUnitEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  powerPerAreaUnitEnum& powerPerAreaUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_powerPerAreaUnitEnum_literals_[v]);

    return *this;
  }


  // pressureUnitEnum
  // 

  inline
  pressureUnitEnum::
  pressureUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  pressureUnitEnum::
  pressureUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_pressureUnitEnum_literals_[v])
  {
  }

  inline
  pressureUnitEnum::
  pressureUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  pressureUnitEnum::
  pressureUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  pressureUnitEnum::
  pressureUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  pressureUnitEnum::
  pressureUnitEnum (const pressureUnitEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  pressureUnitEnum& pressureUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_pressureUnitEnum_literals_[v]);

    return *this;
  }


  // radiationWavelengthTypeEnum
  // 

  inline
  radiationWavelengthTypeEnum::
  radiationWavelengthTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  radiationWavelengthTypeEnum::
  radiationWavelengthTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_radiationWavelengthTypeEnum_literals_[v])
  {
  }

  inline
  radiationWavelengthTypeEnum::
  radiationWavelengthTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  radiationWavelengthTypeEnum::
  radiationWavelengthTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  radiationWavelengthTypeEnum::
  radiationWavelengthTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  radiationWavelengthTypeEnum::
  radiationWavelengthTypeEnum (const radiationWavelengthTypeEnum& v,
                               ::xml_schema::flags f,
                               ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  radiationWavelengthTypeEnum& radiationWavelengthTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_radiationWavelengthTypeEnum_literals_[v]);

    return *this;
  }


  // reflectanceTypeEnum
  // 

  inline
  reflectanceTypeEnum::
  reflectanceTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  reflectanceTypeEnum::
  reflectanceTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_reflectanceTypeEnum_literals_[v])
  {
  }

  inline
  reflectanceTypeEnum::
  reflectanceTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  reflectanceTypeEnum::
  reflectanceTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  reflectanceTypeEnum::
  reflectanceTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  reflectanceTypeEnum::
  reflectanceTypeEnum (const reflectanceTypeEnum& v,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  reflectanceTypeEnum& reflectanceTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_reflectanceTypeEnum_literals_[v]);

    return *this;
  }


  // resistanceUnitEnum
  // 

  inline
  resistanceUnitEnum::
  resistanceUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  resistanceUnitEnum::
  resistanceUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_resistanceUnitEnum_literals_[v])
  {
  }

  inline
  resistanceUnitEnum::
  resistanceUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resistanceUnitEnum::
  resistanceUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resistanceUnitEnum::
  resistanceUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resistanceUnitEnum::
  resistanceUnitEnum (const resistanceUnitEnum& v,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  resistanceUnitEnum& resistanceUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_resistanceUnitEnum_literals_[v]);

    return *this;
  }


  // uValueUnitEnum
  // 

  inline
  uValueUnitEnum::
  uValueUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  uValueUnitEnum::
  uValueUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_uValueUnitEnum_literals_[v])
  {
  }

  inline
  uValueUnitEnum::
  uValueUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  uValueUnitEnum::
  uValueUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  uValueUnitEnum::
  uValueUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  uValueUnitEnum::
  uValueUnitEnum (const uValueUnitEnum& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  uValueUnitEnum& uValueUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_uValueUnitEnum_literals_[v]);

    return *this;
  }


  // resourceTypeEnum
  // 

  inline
  resourceTypeEnum::
  resourceTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  resourceTypeEnum::
  resourceTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_resourceTypeEnum_literals_[v])
  {
  }

  inline
  resourceTypeEnum::
  resourceTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resourceTypeEnum::
  resourceTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resourceTypeEnum::
  resourceTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resourceTypeEnum::
  resourceTypeEnum (const resourceTypeEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  resourceTypeEnum& resourceTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_resourceTypeEnum_literals_[v]);

    return *this;
  }


  // resultsExtraResourceTypeEnum
  // 

  inline
  resultsExtraResourceTypeEnum::
  resultsExtraResourceTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  resultsExtraResourceTypeEnum::
  resultsExtraResourceTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_resultsExtraResourceTypeEnum_literals_[v])
  {
  }

  inline
  resultsExtraResourceTypeEnum::
  resultsExtraResourceTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resultsExtraResourceTypeEnum::
  resultsExtraResourceTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resultsExtraResourceTypeEnum::
  resultsExtraResourceTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resultsExtraResourceTypeEnum::
  resultsExtraResourceTypeEnum (const resultsExtraResourceTypeEnum& v,
                                ::xml_schema::flags f,
                                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  resultsExtraResourceTypeEnum& resultsExtraResourceTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_resultsExtraResourceTypeEnum_literals_[v]);

    return *this;
  }


  // resultsTypeEnum
  // 

  inline
  resultsTypeEnum::
  resultsTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  resultsTypeEnum::
  resultsTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_resultsTypeEnum_literals_[v])
  {
  }

  inline
  resultsTypeEnum::
  resultsTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resultsTypeEnum::
  resultsTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resultsTypeEnum::
  resultsTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  resultsTypeEnum::
  resultsTypeEnum (const resultsTypeEnum& v,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  resultsTypeEnum& resultsTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_resultsTypeEnum_literals_[v]);

    return *this;
  }


  // roofASHRAENumberEnum
  // 

  inline
  roofASHRAENumberEnum::
  roofASHRAENumberEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  roofASHRAENumberEnum::
  roofASHRAENumberEnum (value v)
  : ::xml_schema::nmtoken (_xsd_roofASHRAENumberEnum_literals_[v])
  {
  }

  inline
  roofASHRAENumberEnum::
  roofASHRAENumberEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofASHRAENumberEnum::
  roofASHRAENumberEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofASHRAENumberEnum::
  roofASHRAENumberEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofASHRAENumberEnum::
  roofASHRAENumberEnum (const roofASHRAENumberEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  roofASHRAENumberEnum& roofASHRAENumberEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_roofASHRAENumberEnum_literals_[v]);

    return *this;
  }


  // roofCLTDIndexEnum
  // 

  inline
  roofCLTDIndexEnum::
  roofCLTDIndexEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  roofCLTDIndexEnum::
  roofCLTDIndexEnum (value v)
  : ::xml_schema::nmtoken (_xsd_roofCLTDIndexEnum_literals_[v])
  {
  }

  inline
  roofCLTDIndexEnum::
  roofCLTDIndexEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofCLTDIndexEnum::
  roofCLTDIndexEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofCLTDIndexEnum::
  roofCLTDIndexEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofCLTDIndexEnum::
  roofCLTDIndexEnum (const roofCLTDIndexEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  roofCLTDIndexEnum& roofCLTDIndexEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_roofCLTDIndexEnum_literals_[v]);

    return *this;
  }


  // roofColorEnum
  // 

  inline
  roofColorEnum::
  roofColorEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  roofColorEnum::
  roofColorEnum (value v)
  : ::xml_schema::nmtoken (_xsd_roofColorEnum_literals_[v])
  {
  }

  inline
  roofColorEnum::
  roofColorEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofColorEnum::
  roofColorEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofColorEnum::
  roofColorEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofColorEnum::
  roofColorEnum (const roofColorEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  roofColorEnum& roofColorEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_roofColorEnum_literals_[v]);

    return *this;
  }


  // roofCTSTypeEnum
  // 

  inline
  roofCTSTypeEnum::
  roofCTSTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  roofCTSTypeEnum::
  roofCTSTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_roofCTSTypeEnum_literals_[v])
  {
  }

  inline
  roofCTSTypeEnum::
  roofCTSTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofCTSTypeEnum::
  roofCTSTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofCTSTypeEnum::
  roofCTSTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roofCTSTypeEnum::
  roofCTSTypeEnum (const roofCTSTypeEnum& v,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  roofCTSTypeEnum& roofCTSTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_roofCTSTypeEnum_literals_[v]);

    return *this;
  }


  // roughnessValueEnum
  // 

  inline
  roughnessValueEnum::
  roughnessValueEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  roughnessValueEnum::
  roughnessValueEnum (value v)
  : ::xml_schema::nmtoken (_xsd_roughnessValueEnum_literals_[v])
  {
  }

  inline
  roughnessValueEnum::
  roughnessValueEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roughnessValueEnum::
  roughnessValueEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roughnessValueEnum::
  roughnessValueEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  roughnessValueEnum::
  roughnessValueEnum (const roughnessValueEnum& v,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  roughnessValueEnum& roughnessValueEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_roughnessValueEnum_literals_[v]);

    return *this;
  }


  // scheduleTypeEnum
  // 

  inline
  scheduleTypeEnum::
  scheduleTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  scheduleTypeEnum::
  scheduleTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_scheduleTypeEnum_literals_[v])
  {
  }

  inline
  scheduleTypeEnum::
  scheduleTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  scheduleTypeEnum::
  scheduleTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  scheduleTypeEnum::
  scheduleTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  scheduleTypeEnum::
  scheduleTypeEnum (const scheduleTypeEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  scheduleTypeEnum& scheduleTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_scheduleTypeEnum_literals_[v]);

    return *this;
  }


  // shadeTypeEnum
  // 

  inline
  shadeTypeEnum::
  shadeTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  shadeTypeEnum::
  shadeTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_shadeTypeEnum_literals_[v])
  {
  }

  inline
  shadeTypeEnum::
  shadeTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  shadeTypeEnum::
  shadeTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  shadeTypeEnum::
  shadeTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  shadeTypeEnum::
  shadeTypeEnum (const shadeTypeEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  shadeTypeEnum& shadeTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_shadeTypeEnum_literals_[v]);

    return *this;
  }


  // shadeOperationEnum
  // 

  inline
  shadeOperationEnum::
  shadeOperationEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  shadeOperationEnum::
  shadeOperationEnum (value v)
  : ::xml_schema::nmtoken (_xsd_shadeOperationEnum_literals_[v])
  {
  }

  inline
  shadeOperationEnum::
  shadeOperationEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  shadeOperationEnum::
  shadeOperationEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  shadeOperationEnum::
  shadeOperationEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  shadeOperationEnum::
  shadeOperationEnum (const shadeOperationEnum& v,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  shadeOperationEnum& shadeOperationEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_shadeOperationEnum_literals_[v]);

    return *this;
  }


  // shadeScheduleTypeEnum
  // 

  inline
  shadeScheduleTypeEnum::
  shadeScheduleTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  shadeScheduleTypeEnum::
  shadeScheduleTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_shadeScheduleTypeEnum_literals_[v])
  {
  }

  inline
  shadeScheduleTypeEnum::
  shadeScheduleTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  shadeScheduleTypeEnum::
  shadeScheduleTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  shadeScheduleTypeEnum::
  shadeScheduleTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  shadeScheduleTypeEnum::
  shadeScheduleTypeEnum (const shadeScheduleTypeEnum& v,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  shadeScheduleTypeEnum& shadeScheduleTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_shadeScheduleTypeEnum_literals_[v]);

    return *this;
  }


  // sinkRateUnitEnum
  // 

  inline
  sinkRateUnitEnum::
  sinkRateUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  sinkRateUnitEnum::
  sinkRateUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_sinkRateUnitEnum_literals_[v])
  {
  }

  inline
  sinkRateUnitEnum::
  sinkRateUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  sinkRateUnitEnum::
  sinkRateUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  sinkRateUnitEnum::
  sinkRateUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  sinkRateUnitEnum::
  sinkRateUnitEnum (const sinkRateUnitEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  sinkRateUnitEnum& sinkRateUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_sinkRateUnitEnum_literals_[v]);

    return *this;
  }


  // spaceTypeEnum
  // 

  inline
  spaceTypeEnum::
  spaceTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  spaceTypeEnum::
  spaceTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_spaceTypeEnum_literals_[v])
  {
  }

  inline
  spaceTypeEnum::
  spaceTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  spaceTypeEnum::
  spaceTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  spaceTypeEnum::
  spaceTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  spaceTypeEnum::
  spaceTypeEnum (const spaceTypeEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  spaceTypeEnum& spaceTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_spaceTypeEnum_literals_[v]);

    return *this;
  }


  // specificHeatUnitEnum
  // 

  inline
  specificHeatUnitEnum::
  specificHeatUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  specificHeatUnitEnum::
  specificHeatUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_specificHeatUnitEnum_literals_[v])
  {
  }

  inline
  specificHeatUnitEnum::
  specificHeatUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  specificHeatUnitEnum::
  specificHeatUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  specificHeatUnitEnum::
  specificHeatUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  specificHeatUnitEnum::
  specificHeatUnitEnum (const specificHeatUnitEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  specificHeatUnitEnum& specificHeatUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_specificHeatUnitEnum_literals_[v]);

    return *this;
  }


  // stageTypeEnum
  // 

  inline
  stageTypeEnum::
  stageTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  stageTypeEnum::
  stageTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_stageTypeEnum_literals_[v])
  {
  }

  inline
  stageTypeEnum::
  stageTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  stageTypeEnum::
  stageTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  stageTypeEnum::
  stageTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  stageTypeEnum::
  stageTypeEnum (const stageTypeEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  stageTypeEnum& stageTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_stageTypeEnum_literals_[v]);

    return *this;
  }


  // standardsTypeEnum
  // 

  inline
  standardsTypeEnum::
  standardsTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  standardsTypeEnum::
  standardsTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_standardsTypeEnum_literals_[v])
  {
  }

  inline
  standardsTypeEnum::
  standardsTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  standardsTypeEnum::
  standardsTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  standardsTypeEnum::
  standardsTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  standardsTypeEnum::
  standardsTypeEnum (const standardsTypeEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  standardsTypeEnum& standardsTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_standardsTypeEnum_literals_[v]);

    return *this;
  }


  // stationIdTypeEnum
  // 

  inline
  stationIdTypeEnum::
  stationIdTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  stationIdTypeEnum::
  stationIdTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_stationIdTypeEnum_literals_[v])
  {
  }

  inline
  stationIdTypeEnum::
  stationIdTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  stationIdTypeEnum::
  stationIdTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  stationIdTypeEnum::
  stationIdTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  stationIdTypeEnum::
  stationIdTypeEnum (const stationIdTypeEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  stationIdTypeEnum& stationIdTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_stationIdTypeEnum_literals_[v]);

    return *this;
  }


  // surfaceTypeEnum
  // 

  inline
  surfaceTypeEnum::
  surfaceTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  surfaceTypeEnum::
  surfaceTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_surfaceTypeEnum_literals_[v])
  {
  }

  inline
  surfaceTypeEnum::
  surfaceTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  surfaceTypeEnum::
  surfaceTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  surfaceTypeEnum::
  surfaceTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  surfaceTypeEnum::
  surfaceTypeEnum (const surfaceTypeEnum& v,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  surfaceTypeEnum& surfaceTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_surfaceTypeEnum_literals_[v]);

    return *this;
  }


  // systemTypeEnum
  // 

  inline
  systemTypeEnum::
  systemTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  systemTypeEnum::
  systemTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_systemTypeEnum_literals_[v])
  {
  }

  inline
  systemTypeEnum::
  systemTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  systemTypeEnum::
  systemTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  systemTypeEnum::
  systemTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  systemTypeEnum::
  systemTypeEnum (const systemTypeEnum& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  systemTypeEnum& systemTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_systemTypeEnum_literals_[v]);

    return *this;
  }


  // temperatureUnitEnum
  // 

  inline
  temperatureUnitEnum::
  temperatureUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  temperatureUnitEnum::
  temperatureUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_temperatureUnitEnum_literals_[v])
  {
  }

  inline
  temperatureUnitEnum::
  temperatureUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  temperatureUnitEnum::
  temperatureUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  temperatureUnitEnum::
  temperatureUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  temperatureUnitEnum::
  temperatureUnitEnum (const temperatureUnitEnum& v,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  temperatureUnitEnum& temperatureUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_temperatureUnitEnum_literals_[v]);

    return *this;
  }


  // tempTypeEnum
  // 

  inline
  tempTypeEnum::
  tempTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  tempTypeEnum::
  tempTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_tempTypeEnum_literals_[v])
  {
  }

  inline
  tempTypeEnum::
  tempTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  tempTypeEnum::
  tempTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  tempTypeEnum::
  tempTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  tempTypeEnum::
  tempTypeEnum (const tempTypeEnum& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  tempTypeEnum& tempTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_tempTypeEnum_literals_[v]);

    return *this;
  }


  // timePeriodEnum
  // 

  inline
  timePeriodEnum::
  timePeriodEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  timePeriodEnum::
  timePeriodEnum (value v)
  : ::xml_schema::nmtoken (_xsd_timePeriodEnum_literals_[v])
  {
  }

  inline
  timePeriodEnum::
  timePeriodEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  timePeriodEnum::
  timePeriodEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  timePeriodEnum::
  timePeriodEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  timePeriodEnum::
  timePeriodEnum (const timePeriodEnum& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  timePeriodEnum& timePeriodEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_timePeriodEnum_literals_[v]);

    return *this;
  }


  // timeUnitEnum
  // 

  inline
  timeUnitEnum::
  timeUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  timeUnitEnum::
  timeUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_timeUnitEnum_literals_[v])
  {
  }

  inline
  timeUnitEnum::
  timeUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  timeUnitEnum::
  timeUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  timeUnitEnum::
  timeUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  timeUnitEnum::
  timeUnitEnum (const timeUnitEnum& v,
                ::xml_schema::flags f,
                ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  timeUnitEnum& timeUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_timeUnitEnum_literals_[v]);

    return *this;
  }


  // transportationTypeEnum
  // 

  inline
  transportationTypeEnum::
  transportationTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  transportationTypeEnum::
  transportationTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_transportationTypeEnum_literals_[v])
  {
  }

  inline
  transportationTypeEnum::
  transportationTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  transportationTypeEnum::
  transportationTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  transportationTypeEnum::
  transportationTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  transportationTypeEnum::
  transportationTypeEnum (const transportationTypeEnum& v,
                          ::xml_schema::flags f,
                          ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  transportationTypeEnum& transportationTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_transportationTypeEnum_literals_[v]);

    return *this;
  }


  // unitlessSmallUnitEnum
  // 

  inline
  unitlessSmallUnitEnum::
  unitlessSmallUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  unitlessSmallUnitEnum::
  unitlessSmallUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_unitlessSmallUnitEnum_literals_[v])
  {
  }

  inline
  unitlessSmallUnitEnum::
  unitlessSmallUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unitlessSmallUnitEnum::
  unitlessSmallUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unitlessSmallUnitEnum::
  unitlessSmallUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unitlessSmallUnitEnum::
  unitlessSmallUnitEnum (const unitlessSmallUnitEnum& v,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  unitlessSmallUnitEnum& unitlessSmallUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_unitlessSmallUnitEnum_literals_[v]);

    return *this;
  }


  // unitlessUnitEnum
  // 

  inline
  unitlessUnitEnum::
  unitlessUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  unitlessUnitEnum::
  unitlessUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_unitlessUnitEnum_literals_[v])
  {
  }

  inline
  unitlessUnitEnum::
  unitlessUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unitlessUnitEnum::
  unitlessUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unitlessUnitEnum::
  unitlessUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unitlessUnitEnum::
  unitlessUnitEnum (const unitlessUnitEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  unitlessUnitEnum& unitlessUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_unitlessUnitEnum_literals_[v]);

    return *this;
  }


  // valueTypeEnum
  // 

  inline
  valueTypeEnum::
  valueTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  valueTypeEnum::
  valueTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_valueTypeEnum_literals_[v])
  {
  }

  inline
  valueTypeEnum::
  valueTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  valueTypeEnum::
  valueTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  valueTypeEnum::
  valueTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  valueTypeEnum::
  valueTypeEnum (const valueTypeEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  valueTypeEnum& valueTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_valueTypeEnum_literals_[v]);

    return *this;
  }


  // vegetationTypeEnum
  // 

  inline
  vegetationTypeEnum::
  vegetationTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  vegetationTypeEnum::
  vegetationTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_vegetationTypeEnum_literals_[v])
  {
  }

  inline
  vegetationTypeEnum::
  vegetationTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  vegetationTypeEnum::
  vegetationTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  vegetationTypeEnum::
  vegetationTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  vegetationTypeEnum::
  vegetationTypeEnum (const vegetationTypeEnum& v,
                      ::xml_schema::flags f,
                      ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  vegetationTypeEnum& vegetationTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_vegetationTypeEnum_literals_[v]);

    return *this;
  }


  // velocityUnitEnum
  // 

  inline
  velocityUnitEnum::
  velocityUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  velocityUnitEnum::
  velocityUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_velocityUnitEnum_literals_[v])
  {
  }

  inline
  velocityUnitEnum::
  velocityUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  velocityUnitEnum::
  velocityUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  velocityUnitEnum::
  velocityUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  velocityUnitEnum::
  velocityUnitEnum (const velocityUnitEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  velocityUnitEnum& velocityUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_velocityUnitEnum_literals_[v]);

    return *this;
  }


  // windSpeedEnum
  // 

  inline
  windSpeedEnum::
  windSpeedEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  windSpeedEnum::
  windSpeedEnum (value v)
  : ::xml_schema::nmtoken (_xsd_windSpeedEnum_literals_[v])
  {
  }

  inline
  windSpeedEnum::
  windSpeedEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  windSpeedEnum::
  windSpeedEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  windSpeedEnum::
  windSpeedEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  windSpeedEnum::
  windSpeedEnum (const windSpeedEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  windSpeedEnum& windSpeedEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_windSpeedEnum_literals_[v]);

    return *this;
  }


  // versionEnum
  // 

  inline
  versionEnum::
  versionEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  versionEnum::
  versionEnum (value v)
  : ::xml_schema::nmtoken (_xsd_versionEnum_literals_[v])
  {
  }

  inline
  versionEnum::
  versionEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  versionEnum::
  versionEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  versionEnum::
  versionEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  versionEnum::
  versionEnum (const versionEnum& v,
               ::xml_schema::flags f,
               ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  versionEnum& versionEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_versionEnum_literals_[v]);

    return *this;
  }


  // viscosityUnitEnum
  // 

  inline
  viscosityUnitEnum::
  viscosityUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  viscosityUnitEnum::
  viscosityUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_viscosityUnitEnum_literals_[v])
  {
  }

  inline
  viscosityUnitEnum::
  viscosityUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  viscosityUnitEnum::
  viscosityUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  viscosityUnitEnum::
  viscosityUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  viscosityUnitEnum::
  viscosityUnitEnum (const viscosityUnitEnum& v,
                     ::xml_schema::flags f,
                     ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  viscosityUnitEnum& viscosityUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_viscosityUnitEnum_literals_[v]);

    return *this;
  }


  // viscosityFofTUnitEnum
  // 

  inline
  viscosityFofTUnitEnum::
  viscosityFofTUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  viscosityFofTUnitEnum::
  viscosityFofTUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_viscosityFofTUnitEnum_literals_[v])
  {
  }

  inline
  viscosityFofTUnitEnum::
  viscosityFofTUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  viscosityFofTUnitEnum::
  viscosityFofTUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  viscosityFofTUnitEnum::
  viscosityFofTUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  viscosityFofTUnitEnum::
  viscosityFofTUnitEnum (const viscosityFofTUnitEnum& v,
                         ::xml_schema::flags f,
                         ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  viscosityFofTUnitEnum& viscosityFofTUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_viscosityFofTUnitEnum_literals_[v]);

    return *this;
  }


  // volumeUnitEnum
  // 

  inline
  volumeUnitEnum::
  volumeUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  volumeUnitEnum::
  volumeUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_volumeUnitEnum_literals_[v])
  {
  }

  inline
  volumeUnitEnum::
  volumeUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  volumeUnitEnum::
  volumeUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  volumeUnitEnum::
  volumeUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  volumeUnitEnum::
  volumeUnitEnum (const volumeUnitEnum& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  volumeUnitEnum& volumeUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_volumeUnitEnum_literals_[v]);

    return *this;
  }


  // wallASHRAEGroupEnum
  // 

  inline
  wallASHRAEGroupEnum::
  wallASHRAEGroupEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  wallASHRAEGroupEnum::
  wallASHRAEGroupEnum (value v)
  : ::xml_schema::nmtoken (_xsd_wallASHRAEGroupEnum_literals_[v])
  {
  }

  inline
  wallASHRAEGroupEnum::
  wallASHRAEGroupEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallASHRAEGroupEnum::
  wallASHRAEGroupEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallASHRAEGroupEnum::
  wallASHRAEGroupEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallASHRAEGroupEnum::
  wallASHRAEGroupEnum (const wallASHRAEGroupEnum& v,
                       ::xml_schema::flags f,
                       ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  wallASHRAEGroupEnum& wallASHRAEGroupEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_wallASHRAEGroupEnum_literals_[v]);

    return *this;
  }


  // wallColorEnum
  // 

  inline
  wallColorEnum::
  wallColorEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  wallColorEnum::
  wallColorEnum (value v)
  : ::xml_schema::nmtoken (_xsd_wallColorEnum_literals_[v])
  {
  }

  inline
  wallColorEnum::
  wallColorEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallColorEnum::
  wallColorEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallColorEnum::
  wallColorEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallColorEnum::
  wallColorEnum (const wallColorEnum& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  wallColorEnum& wallColorEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_wallColorEnum_literals_[v]);

    return *this;
  }


  // wallCTSTypeEnum
  // 

  inline
  wallCTSTypeEnum::
  wallCTSTypeEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  wallCTSTypeEnum::
  wallCTSTypeEnum (value v)
  : ::xml_schema::nmtoken (_xsd_wallCTSTypeEnum_literals_[v])
  {
  }

  inline
  wallCTSTypeEnum::
  wallCTSTypeEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallCTSTypeEnum::
  wallCTSTypeEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallCTSTypeEnum::
  wallCTSTypeEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallCTSTypeEnum::
  wallCTSTypeEnum (const wallCTSTypeEnum& v,
                   ::xml_schema::flags f,
                   ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  wallCTSTypeEnum& wallCTSTypeEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_wallCTSTypeEnum_literals_[v]);

    return *this;
  }


  // wallGroupManualJEnum
  // 

  inline
  wallGroupManualJEnum::
  wallGroupManualJEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  wallGroupManualJEnum::
  wallGroupManualJEnum (value v)
  : ::xml_schema::nmtoken (_xsd_wallGroupManualJEnum_literals_[v])
  {
  }

  inline
  wallGroupManualJEnum::
  wallGroupManualJEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallGroupManualJEnum::
  wallGroupManualJEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallGroupManualJEnum::
  wallGroupManualJEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  wallGroupManualJEnum::
  wallGroupManualJEnum (const wallGroupManualJEnum& v,
                        ::xml_schema::flags f,
                        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  wallGroupManualJEnum& wallGroupManualJEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_wallGroupManualJEnum_literals_[v]);

    return *this;
  }


  // waterUseUnitEnum
  // 

  inline
  waterUseUnitEnum::
  waterUseUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  waterUseUnitEnum::
  waterUseUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_waterUseUnitEnum_literals_[v])
  {
  }

  inline
  waterUseUnitEnum::
  waterUseUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  waterUseUnitEnum::
  waterUseUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  waterUseUnitEnum::
  waterUseUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  waterUseUnitEnum::
  waterUseUnitEnum (const waterUseUnitEnum& v,
                    ::xml_schema::flags f,
                    ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  waterUseUnitEnum& waterUseUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_waterUseUnitEnum_literals_[v]);

    return *this;
  }


  // weightUnitEnum
  // 

  inline
  weightUnitEnum::
  weightUnitEnum ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  weightUnitEnum::
  weightUnitEnum (value v)
  : ::xml_schema::nmtoken (_xsd_weightUnitEnum_literals_[v])
  {
  }

  inline
  weightUnitEnum::
  weightUnitEnum (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  weightUnitEnum::
  weightUnitEnum (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  weightUnitEnum::
  weightUnitEnum (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  weightUnitEnum::
  weightUnitEnum (const weightUnitEnum& v,
                  ::xml_schema::flags f,
                  ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  weightUnitEnum& weightUnitEnum::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_weightUnitEnum_literals_[v]);

    return *this;
  }


  // gbXML
  // 

  inline
  const gbXML::aecXML_sequence& gbXML::
  aecXML () const
  {
    return this->aecXML_;
  }

  inline
  gbXML::aecXML_sequence& gbXML::
  aecXML ()
  {
    return this->aecXML_;
  }

  inline
  void gbXML::
  aecXML (const aecXML_sequence& s)
  {
    this->aecXML_ = s;
  }

  inline
  const gbXML::Campus_sequence& gbXML::
  Campus () const
  {
    return this->Campus_;
  }

  inline
  gbXML::Campus_sequence& gbXML::
  Campus ()
  {
    return this->Campus_;
  }

  inline
  void gbXML::
  Campus (const Campus_sequence& s)
  {
    this->Campus_ = s;
  }

  inline
  const gbXML::LightingSystem_sequence& gbXML::
  LightingSystem () const
  {
    return this->LightingSystem_;
  }

  inline
  gbXML::LightingSystem_sequence& gbXML::
  LightingSystem ()
  {
    return this->LightingSystem_;
  }

  inline
  void gbXML::
  LightingSystem (const LightingSystem_sequence& s)
  {
    this->LightingSystem_ = s;
  }

  inline
  const gbXML::LightingControl_sequence& gbXML::
  LightingControl () const
  {
    return this->LightingControl_;
  }

  inline
  gbXML::LightingControl_sequence& gbXML::
  LightingControl ()
  {
    return this->LightingControl_;
  }

  inline
  void gbXML::
  LightingControl (const LightingControl_sequence& s)
  {
    this->LightingControl_ = s;
  }

  inline
  const gbXML::Construction_sequence& gbXML::
  Construction () const
  {
    return this->Construction_;
  }

  inline
  gbXML::Construction_sequence& gbXML::
  Construction ()
  {
    return this->Construction_;
  }

  inline
  void gbXML::
  Construction (const Construction_sequence& s)
  {
    this->Construction_ = s;
  }

  inline
  const gbXML::Layer_sequence& gbXML::
  Layer () const
  {
    return this->Layer_;
  }

  inline
  gbXML::Layer_sequence& gbXML::
  Layer ()
  {
    return this->Layer_;
  }

  inline
  void gbXML::
  Layer (const Layer_sequence& s)
  {
    this->Layer_ = s;
  }

  inline
  const gbXML::Material_sequence& gbXML::
  Material () const
  {
    return this->Material_;
  }

  inline
  gbXML::Material_sequence& gbXML::
  Material ()
  {
    return this->Material_;
  }

  inline
  void gbXML::
  Material (const Material_sequence& s)
  {
    this->Material_ = s;
  }

  inline
  const gbXML::WindowType_sequence& gbXML::
  WindowType () const
  {
    return this->WindowType_;
  }

  inline
  gbXML::WindowType_sequence& gbXML::
  WindowType ()
  {
    return this->WindowType_;
  }

  inline
  void gbXML::
  WindowType (const WindowType_sequence& s)
  {
    this->WindowType_ = s;
  }

  inline
  const gbXML::Schedule_sequence& gbXML::
  Schedule () const
  {
    return this->Schedule_;
  }

  inline
  gbXML::Schedule_sequence& gbXML::
  Schedule ()
  {
    return this->Schedule_;
  }

  inline
  void gbXML::
  Schedule (const Schedule_sequence& s)
  {
    this->Schedule_ = s;
  }

  inline
  const gbXML::WeekSchedule_sequence& gbXML::
  WeekSchedule () const
  {
    return this->WeekSchedule_;
  }

  inline
  gbXML::WeekSchedule_sequence& gbXML::
  WeekSchedule ()
  {
    return this->WeekSchedule_;
  }

  inline
  void gbXML::
  WeekSchedule (const WeekSchedule_sequence& s)
  {
    this->WeekSchedule_ = s;
  }

  inline
  const gbXML::DaySchedule_sequence& gbXML::
  DaySchedule () const
  {
    return this->DaySchedule_;
  }

  inline
  gbXML::DaySchedule_sequence& gbXML::
  DaySchedule ()
  {
    return this->DaySchedule_;
  }

  inline
  void gbXML::
  DaySchedule (const DaySchedule_sequence& s)
  {
    this->DaySchedule_ = s;
  }

  inline
  const gbXML::Zone_sequence& gbXML::
  Zone () const
  {
    return this->Zone_;
  }

  inline
  gbXML::Zone_sequence& gbXML::
  Zone ()
  {
    return this->Zone_;
  }

  inline
  void gbXML::
  Zone (const Zone_sequence& s)
  {
    this->Zone_ = s;
  }

  inline
  const gbXML::AirLoop_sequence& gbXML::
  AirLoop () const
  {
    return this->AirLoop_;
  }

  inline
  gbXML::AirLoop_sequence& gbXML::
  AirLoop ()
  {
    return this->AirLoop_;
  }

  inline
  void gbXML::
  AirLoop (const AirLoop_sequence& s)
  {
    this->AirLoop_ = s;
  }

  inline
  const gbXML::HydronicLoop_sequence& gbXML::
  HydronicLoop () const
  {
    return this->HydronicLoop_;
  }

  inline
  gbXML::HydronicLoop_sequence& gbXML::
  HydronicLoop ()
  {
    return this->HydronicLoop_;
  }

  inline
  void gbXML::
  HydronicLoop (const HydronicLoop_sequence& s)
  {
    this->HydronicLoop_ = s;
  }

  inline
  const gbXML::IntEquip_sequence& gbXML::
  IntEquip () const
  {
    return this->IntEquip_;
  }

  inline
  gbXML::IntEquip_sequence& gbXML::
  IntEquip ()
  {
    return this->IntEquip_;
  }

  inline
  void gbXML::
  IntEquip (const IntEquip_sequence& s)
  {
    this->IntEquip_ = s;
  }

  inline
  const gbXML::ExtEquip_sequence& gbXML::
  ExtEquip () const
  {
    return this->ExtEquip_;
  }

  inline
  gbXML::ExtEquip_sequence& gbXML::
  ExtEquip ()
  {
    return this->ExtEquip_;
  }

  inline
  void gbXML::
  ExtEquip (const ExtEquip_sequence& s)
  {
    this->ExtEquip_ = s;
  }

  inline
  const gbXML::Weather_sequence& gbXML::
  Weather () const
  {
    return this->Weather_;
  }

  inline
  gbXML::Weather_sequence& gbXML::
  Weather ()
  {
    return this->Weather_;
  }

  inline
  void gbXML::
  Weather (const Weather_sequence& s)
  {
    this->Weather_ = s;
  }

  inline
  const gbXML::Meter_sequence& gbXML::
  Meter () const
  {
    return this->Meter_;
  }

  inline
  gbXML::Meter_sequence& gbXML::
  Meter ()
  {
    return this->Meter_;
  }

  inline
  void gbXML::
  Meter (const Meter_sequence& s)
  {
    this->Meter_ = s;
  }

  inline
  const gbXML::Results_sequence& gbXML::
  Results () const
  {
    return this->Results_;
  }

  inline
  gbXML::Results_sequence& gbXML::
  Results ()
  {
    return this->Results_;
  }

  inline
  void gbXML::
  Results (const Results_sequence& s)
  {
    this->Results_ = s;
  }

  inline
  const gbXML::DocumentHistory_sequence& gbXML::
  DocumentHistory () const
  {
    return this->DocumentHistory_;
  }

  inline
  gbXML::DocumentHistory_sequence& gbXML::
  DocumentHistory ()
  {
    return this->DocumentHistory_;
  }

  inline
  void gbXML::
  DocumentHistory (const DocumentHistory_sequence& s)
  {
    this->DocumentHistory_ = s;
  }

  inline
  const gbXML::id_optional& gbXML::
  id () const
  {
    return this->id_;
  }

  inline
  gbXML::id_optional& gbXML::
  id ()
  {
    return this->id_;
  }

  inline
  void gbXML::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void gbXML::
  id (const id_optional& x)
  {
    this->id_ = x;
  }

  inline
  void gbXML::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const gbXML::engine_optional& gbXML::
  engine () const
  {
    return this->engine_;
  }

  inline
  gbXML::engine_optional& gbXML::
  engine ()
  {
    return this->engine_;
  }

  inline
  void gbXML::
  engine (const engine_type& x)
  {
    this->engine_.set (x);
  }

  inline
  void gbXML::
  engine (const engine_optional& x)
  {
    this->engine_ = x;
  }

  inline
  void gbXML::
  engine (::std::auto_ptr< engine_type > x)
  {
    this->engine_.set (x);
  }

  inline
  const gbXML::temperatureUnit_type& gbXML::
  temperatureUnit () const
  {
    return this->temperatureUnit_.get ();
  }

  inline
  gbXML::temperatureUnit_type& gbXML::
  temperatureUnit ()
  {
    return this->temperatureUnit_.get ();
  }

  inline
  void gbXML::
  temperatureUnit (const temperatureUnit_type& x)
  {
    this->temperatureUnit_.set (x);
  }

  inline
  void gbXML::
  temperatureUnit (::std::auto_ptr< temperatureUnit_type > x)
  {
    this->temperatureUnit_.set (x);
  }

  inline
  const gbXML::lengthUnit_type& gbXML::
  lengthUnit () const
  {
    return this->lengthUnit_.get ();
  }

  inline
  gbXML::lengthUnit_type& gbXML::
  lengthUnit ()
  {
    return this->lengthUnit_.get ();
  }

  inline
  void gbXML::
  lengthUnit (const lengthUnit_type& x)
  {
    this->lengthUnit_.set (x);
  }

  inline
  void gbXML::
  lengthUnit (::std::auto_ptr< lengthUnit_type > x)
  {
    this->lengthUnit_.set (x);
  }

  inline
  const gbXML::areaUnit_type& gbXML::
  areaUnit () const
  {
    return this->areaUnit_.get ();
  }

  inline
  gbXML::areaUnit_type& gbXML::
  areaUnit ()
  {
    return this->areaUnit_.get ();
  }

  inline
  void gbXML::
  areaUnit (const areaUnit_type& x)
  {
    this->areaUnit_.set (x);
  }

  inline
  void gbXML::
  areaUnit (::std::auto_ptr< areaUnit_type > x)
  {
    this->areaUnit_.set (x);
  }

  inline
  const gbXML::volumeUnit_type& gbXML::
  volumeUnit () const
  {
    return this->volumeUnit_.get ();
  }

  inline
  gbXML::volumeUnit_type& gbXML::
  volumeUnit ()
  {
    return this->volumeUnit_.get ();
  }

  inline
  void gbXML::
  volumeUnit (const volumeUnit_type& x)
  {
    this->volumeUnit_.set (x);
  }

  inline
  void gbXML::
  volumeUnit (::std::auto_ptr< volumeUnit_type > x)
  {
    this->volumeUnit_.set (x);
  }

  inline
  const gbXML::useSIUnitsForResults_type& gbXML::
  useSIUnitsForResults () const
  {
    return this->useSIUnitsForResults_.get ();
  }

  inline
  gbXML::useSIUnitsForResults_type& gbXML::
  useSIUnitsForResults ()
  {
    return this->useSIUnitsForResults_.get ();
  }

  inline
  void gbXML::
  useSIUnitsForResults (const useSIUnitsForResults_type& x)
  {
    this->useSIUnitsForResults_.set (x);
  }

  inline
  const gbXML::version_type& gbXML::
  version () const
  {
    return this->version_.get ();
  }

  inline
  gbXML::version_type& gbXML::
  version ()
  {
    return this->version_.get ();
  }

  inline
  void gbXML::
  version (const version_type& x)
  {
    this->version_.set (x);
  }

  inline
  void gbXML::
  version (::std::auto_ptr< version_type > x)
  {
    this->version_.set (x);
  }


  // Absorptance
  // 

  inline
  const Absorptance::unit_type& Absorptance::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Absorptance::unit_type& Absorptance::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Absorptance::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Absorptance::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Absorptance::type_type& Absorptance::
  type () const
  {
    return this->type_.get ();
  }

  inline
  Absorptance::type_type& Absorptance::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void Absorptance::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void Absorptance::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }


  // AdjacentSpaceId
  // 

  inline
  const AdjacentSpaceId::spaceIdRef_type& AdjacentSpaceId::
  spaceIdRef () const
  {
    return this->spaceIdRef_.get ();
  }

  inline
  AdjacentSpaceId::spaceIdRef_type& AdjacentSpaceId::
  spaceIdRef ()
  {
    return this->spaceIdRef_.get ();
  }

  inline
  void AdjacentSpaceId::
  spaceIdRef (const spaceIdRef_type& x)
  {
    this->spaceIdRef_.set (x);
  }

  inline
  void AdjacentSpaceId::
  spaceIdRef (::std::auto_ptr< spaceIdRef_type > x)
  {
    this->spaceIdRef_.set (x);
  }

  inline
  const AdjacentSpaceId::surfaceType_optional& AdjacentSpaceId::
  surfaceType () const
  {
    return this->surfaceType_;
  }

  inline
  AdjacentSpaceId::surfaceType_optional& AdjacentSpaceId::
  surfaceType ()
  {
    return this->surfaceType_;
  }

  inline
  void AdjacentSpaceId::
  surfaceType (const surfaceType_type& x)
  {
    this->surfaceType_.set (x);
  }

  inline
  void AdjacentSpaceId::
  surfaceType (const surfaceType_optional& x)
  {
    this->surfaceType_ = x;
  }

  inline
  void AdjacentSpaceId::
  surfaceType (::std::auto_ptr< surfaceType_type > x)
  {
    this->surfaceType_.set (x);
  }


  // Age
  // 

  inline
  const Age::unit_type& Age::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Age::unit_type& Age::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Age::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Age::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // AirLoop
  // 

  inline
  const AirLoop::Name_sequence& AirLoop::
  Name () const
  {
    return this->Name_;
  }

  inline
  AirLoop::Name_sequence& AirLoop::
  Name ()
  {
    return this->Name_;
  }

  inline
  void AirLoop::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const AirLoop::Description_sequence& AirLoop::
  Description () const
  {
    return this->Description_;
  }

  inline
  AirLoop::Description_sequence& AirLoop::
  Description ()
  {
    return this->Description_;
  }

  inline
  void AirLoop::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const AirLoop::Reference_sequence& AirLoop::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  AirLoop::Reference_sequence& AirLoop::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void AirLoop::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const AirLoop::AirLoopEquipment_sequence& AirLoop::
  AirLoopEquipment () const
  {
    return this->AirLoopEquipment_;
  }

  inline
  AirLoop::AirLoopEquipment_sequence& AirLoop::
  AirLoopEquipment ()
  {
    return this->AirLoopEquipment_;
  }

  inline
  void AirLoop::
  AirLoopEquipment (const AirLoopEquipment_sequence& s)
  {
    this->AirLoopEquipment_ = s;
  }

  inline
  const AirLoop::TemperatureControl_sequence& AirLoop::
  TemperatureControl () const
  {
    return this->TemperatureControl_;
  }

  inline
  AirLoop::TemperatureControl_sequence& AirLoop::
  TemperatureControl ()
  {
    return this->TemperatureControl_;
  }

  inline
  void AirLoop::
  TemperatureControl (const TemperatureControl_sequence& s)
  {
    this->TemperatureControl_ = s;
  }

  inline
  const AirLoop::PressureControl_sequence& AirLoop::
  PressureControl () const
  {
    return this->PressureControl_;
  }

  inline
  AirLoop::PressureControl_sequence& AirLoop::
  PressureControl ()
  {
    return this->PressureControl_;
  }

  inline
  void AirLoop::
  PressureControl (const PressureControl_sequence& s)
  {
    this->PressureControl_ = s;
  }

  inline
  const AirLoop::id_type& AirLoop::
  id () const
  {
    return this->id_.get ();
  }

  inline
  AirLoop::id_type& AirLoop::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void AirLoop::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void AirLoop::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const AirLoop::controlZoneIdRef_optional& AirLoop::
  controlZoneIdRef () const
  {
    return this->controlZoneIdRef_;
  }

  inline
  AirLoop::controlZoneIdRef_optional& AirLoop::
  controlZoneIdRef ()
  {
    return this->controlZoneIdRef_;
  }

  inline
  void AirLoop::
  controlZoneIdRef (const controlZoneIdRef_type& x)
  {
    this->controlZoneIdRef_.set (x);
  }

  inline
  void AirLoop::
  controlZoneIdRef (const controlZoneIdRef_optional& x)
  {
    this->controlZoneIdRef_ = x;
  }

  inline
  void AirLoop::
  controlZoneIdRef (::std::auto_ptr< controlZoneIdRef_type > x)
  {
    this->controlZoneIdRef_.set (x);
  }

  inline
  const AirLoop::systemType_optional& AirLoop::
  systemType () const
  {
    return this->systemType_;
  }

  inline
  AirLoop::systemType_optional& AirLoop::
  systemType ()
  {
    return this->systemType_;
  }

  inline
  void AirLoop::
  systemType (const systemType_type& x)
  {
    this->systemType_.set (x);
  }

  inline
  void AirLoop::
  systemType (const systemType_optional& x)
  {
    this->systemType_ = x;
  }

  inline
  void AirLoop::
  systemType (::std::auto_ptr< systemType_type > x)
  {
    this->systemType_.set (x);
  }

  inline
  const AirLoop::programId_optional& AirLoop::
  programId () const
  {
    return this->programId_;
  }

  inline
  AirLoop::programId_optional& AirLoop::
  programId ()
  {
    return this->programId_;
  }

  inline
  void AirLoop::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void AirLoop::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void AirLoop::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // AirLoopEquipment
  // 

  inline
  const AirLoopEquipment::Name_sequence& AirLoopEquipment::
  Name () const
  {
    return this->Name_;
  }

  inline
  AirLoopEquipment::Name_sequence& AirLoopEquipment::
  Name ()
  {
    return this->Name_;
  }

  inline
  void AirLoopEquipment::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const AirLoopEquipment::Description_sequence& AirLoopEquipment::
  Description () const
  {
    return this->Description_;
  }

  inline
  AirLoopEquipment::Description_sequence& AirLoopEquipment::
  Description ()
  {
    return this->Description_;
  }

  inline
  void AirLoopEquipment::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const AirLoopEquipment::Model_sequence& AirLoopEquipment::
  Model () const
  {
    return this->Model_;
  }

  inline
  AirLoopEquipment::Model_sequence& AirLoopEquipment::
  Model ()
  {
    return this->Model_;
  }

  inline
  void AirLoopEquipment::
  Model (const Model_sequence& s)
  {
    this->Model_ = s;
  }

  inline
  const AirLoopEquipment::Manufacturer_sequence& AirLoopEquipment::
  Manufacturer () const
  {
    return this->Manufacturer_;
  }

  inline
  AirLoopEquipment::Manufacturer_sequence& AirLoopEquipment::
  Manufacturer ()
  {
    return this->Manufacturer_;
  }

  inline
  void AirLoopEquipment::
  Manufacturer (const Manufacturer_sequence& s)
  {
    this->Manufacturer_ = s;
  }

  inline
  const AirLoopEquipment::RatedFlow_sequence& AirLoopEquipment::
  RatedFlow () const
  {
    return this->RatedFlow_;
  }

  inline
  AirLoopEquipment::RatedFlow_sequence& AirLoopEquipment::
  RatedFlow ()
  {
    return this->RatedFlow_;
  }

  inline
  void AirLoopEquipment::
  RatedFlow (const RatedFlow_sequence& s)
  {
    this->RatedFlow_ = s;
  }

  inline
  const AirLoopEquipment::MinFlow_sequence& AirLoopEquipment::
  MinFlow () const
  {
    return this->MinFlow_;
  }

  inline
  AirLoopEquipment::MinFlow_sequence& AirLoopEquipment::
  MinFlow ()
  {
    return this->MinFlow_;
  }

  inline
  void AirLoopEquipment::
  MinFlow (const MinFlow_sequence& s)
  {
    this->MinFlow_ = s;
  }

  inline
  const AirLoopEquipment::OperationSchedule_sequence& AirLoopEquipment::
  OperationSchedule () const
  {
    return this->OperationSchedule_;
  }

  inline
  AirLoopEquipment::OperationSchedule_sequence& AirLoopEquipment::
  OperationSchedule ()
  {
    return this->OperationSchedule_;
  }

  inline
  void AirLoopEquipment::
  OperationSchedule (const OperationSchedule_sequence& s)
  {
    this->OperationSchedule_ = s;
  }

  inline
  const AirLoopEquipment::MotorInAirstream_sequence& AirLoopEquipment::
  MotorInAirstream () const
  {
    return this->MotorInAirstream_;
  }

  inline
  AirLoopEquipment::MotorInAirstream_sequence& AirLoopEquipment::
  MotorInAirstream ()
  {
    return this->MotorInAirstream_;
  }

  inline
  void AirLoopEquipment::
  MotorInAirstream (const MotorInAirstream_sequence& s)
  {
    this->MotorInAirstream_ = s;
  }

  inline
  const AirLoopEquipment::Temp_sequence& AirLoopEquipment::
  Temp () const
  {
    return this->Temp_;
  }

  inline
  AirLoopEquipment::Temp_sequence& AirLoopEquipment::
  Temp ()
  {
    return this->Temp_;
  }

  inline
  void AirLoopEquipment::
  Temp (const Temp_sequence& s)
  {
    this->Temp_ = s;
  }

  inline
  const AirLoopEquipment::Enthalpy_sequence& AirLoopEquipment::
  Enthalpy () const
  {
    return this->Enthalpy_;
  }

  inline
  AirLoopEquipment::Enthalpy_sequence& AirLoopEquipment::
  Enthalpy ()
  {
    return this->Enthalpy_;
  }

  inline
  void AirLoopEquipment::
  Enthalpy (const Enthalpy_sequence& s)
  {
    this->Enthalpy_ = s;
  }

  inline
  const AirLoopEquipment::ResetTemperature_sequence& AirLoopEquipment::
  ResetTemperature () const
  {
    return this->ResetTemperature_;
  }

  inline
  AirLoopEquipment::ResetTemperature_sequence& AirLoopEquipment::
  ResetTemperature ()
  {
    return this->ResetTemperature_;
  }

  inline
  void AirLoopEquipment::
  ResetTemperature (const ResetTemperature_sequence& s)
  {
    this->ResetTemperature_ = s;
  }

  inline
  const AirLoopEquipment::DeltaP_sequence& AirLoopEquipment::
  DeltaP () const
  {
    return this->DeltaP_;
  }

  inline
  AirLoopEquipment::DeltaP_sequence& AirLoopEquipment::
  DeltaP ()
  {
    return this->DeltaP_;
  }

  inline
  void AirLoopEquipment::
  DeltaP (const DeltaP_sequence& s)
  {
    this->DeltaP_ = s;
  }

  inline
  const AirLoopEquipment::DeltaT_sequence& AirLoopEquipment::
  DeltaT () const
  {
    return this->DeltaT_;
  }

  inline
  AirLoopEquipment::DeltaT_sequence& AirLoopEquipment::
  DeltaT ()
  {
    return this->DeltaT_;
  }

  inline
  void AirLoopEquipment::
  DeltaT (const DeltaT_sequence& s)
  {
    this->DeltaT_ = s;
  }

  inline
  const AirLoopEquipment::MinRelativeHumidity_sequence& AirLoopEquipment::
  MinRelativeHumidity () const
  {
    return this->MinRelativeHumidity_;
  }

  inline
  AirLoopEquipment::MinRelativeHumidity_sequence& AirLoopEquipment::
  MinRelativeHumidity ()
  {
    return this->MinRelativeHumidity_;
  }

  inline
  void AirLoopEquipment::
  MinRelativeHumidity (const MinRelativeHumidity_sequence& s)
  {
    this->MinRelativeHumidity_ = s;
  }

  inline
  const AirLoopEquipment::MaxRelativeHumidity_sequence& AirLoopEquipment::
  MaxRelativeHumidity () const
  {
    return this->MaxRelativeHumidity_;
  }

  inline
  AirLoopEquipment::MaxRelativeHumidity_sequence& AirLoopEquipment::
  MaxRelativeHumidity ()
  {
    return this->MaxRelativeHumidity_;
  }

  inline
  void AirLoopEquipment::
  MaxRelativeHumidity (const MaxRelativeHumidity_sequence& s)
  {
    this->MaxRelativeHumidity_ = s;
  }

  inline
  const AirLoopEquipment::Power_sequence& AirLoopEquipment::
  Power () const
  {
    return this->Power_;
  }

  inline
  AirLoopEquipment::Power_sequence& AirLoopEquipment::
  Power ()
  {
    return this->Power_;
  }

  inline
  void AirLoopEquipment::
  Power (const Power_sequence& s)
  {
    this->Power_ = s;
  }

  inline
  const AirLoopEquipment::Capacity_sequence& AirLoopEquipment::
  Capacity () const
  {
    return this->Capacity_;
  }

  inline
  AirLoopEquipment::Capacity_sequence& AirLoopEquipment::
  Capacity ()
  {
    return this->Capacity_;
  }

  inline
  void AirLoopEquipment::
  Capacity (const Capacity_sequence& s)
  {
    this->Capacity_ = s;
  }

  inline
  const AirLoopEquipment::Control_sequence& AirLoopEquipment::
  Control () const
  {
    return this->Control_;
  }

  inline
  AirLoopEquipment::Control_sequence& AirLoopEquipment::
  Control ()
  {
    return this->Control_;
  }

  inline
  void AirLoopEquipment::
  Control (const Control_sequence& s)
  {
    this->Control_ = s;
  }

  inline
  const AirLoopEquipment::Efficiency_sequence& AirLoopEquipment::
  Efficiency () const
  {
    return this->Efficiency_;
  }

  inline
  AirLoopEquipment::Efficiency_sequence& AirLoopEquipment::
  Efficiency ()
  {
    return this->Efficiency_;
  }

  inline
  void AirLoopEquipment::
  Efficiency (const Efficiency_sequence& s)
  {
    this->Efficiency_ = s;
  }

  inline
  const AirLoopEquipment::Performance_sequence& AirLoopEquipment::
  Performance () const
  {
    return this->Performance_;
  }

  inline
  AirLoopEquipment::Performance_sequence& AirLoopEquipment::
  Performance ()
  {
    return this->Performance_;
  }

  inline
  void AirLoopEquipment::
  Performance (const Performance_sequence& s)
  {
    this->Performance_ = s;
  }

  inline
  const AirLoopEquipment::Cost_sequence& AirLoopEquipment::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  AirLoopEquipment::Cost_sequence& AirLoopEquipment::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void AirLoopEquipment::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const AirLoopEquipment::Weight_sequence& AirLoopEquipment::
  Weight () const
  {
    return this->Weight_;
  }

  inline
  AirLoopEquipment::Weight_sequence& AirLoopEquipment::
  Weight ()
  {
    return this->Weight_;
  }

  inline
  void AirLoopEquipment::
  Weight (const Weight_sequence& s)
  {
    this->Weight_ = s;
  }

  inline
  const AirLoopEquipment::Life_sequence& AirLoopEquipment::
  Life () const
  {
    return this->Life_;
  }

  inline
  AirLoopEquipment::Life_sequence& AirLoopEquipment::
  Life ()
  {
    return this->Life_;
  }

  inline
  void AirLoopEquipment::
  Life (const Life_sequence& s)
  {
    this->Life_ = s;
  }

  inline
  const AirLoopEquipment::WaterLoss_sequence& AirLoopEquipment::
  WaterLoss () const
  {
    return this->WaterLoss_;
  }

  inline
  AirLoopEquipment::WaterLoss_sequence& AirLoopEquipment::
  WaterLoss ()
  {
    return this->WaterLoss_;
  }

  inline
  void AirLoopEquipment::
  WaterLoss (const WaterLoss_sequence& s)
  {
    this->WaterLoss_ = s;
  }

  inline
  const AirLoopEquipment::Energy_sequence& AirLoopEquipment::
  Energy () const
  {
    return this->Energy_;
  }

  inline
  AirLoopEquipment::Energy_sequence& AirLoopEquipment::
  Energy ()
  {
    return this->Energy_;
  }

  inline
  void AirLoopEquipment::
  Energy (const Energy_sequence& s)
  {
    this->Energy_ = s;
  }

  inline
  const AirLoopEquipment::HydronicLoopId_sequence& AirLoopEquipment::
  HydronicLoopId () const
  {
    return this->HydronicLoopId_;
  }

  inline
  AirLoopEquipment::HydronicLoopId_sequence& AirLoopEquipment::
  HydronicLoopId ()
  {
    return this->HydronicLoopId_;
  }

  inline
  void AirLoopEquipment::
  HydronicLoopId (const HydronicLoopId_sequence& s)
  {
    this->HydronicLoopId_ = s;
  }

  inline
  const AirLoopEquipment::Reference_sequence& AirLoopEquipment::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  AirLoopEquipment::Reference_sequence& AirLoopEquipment::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void AirLoopEquipment::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const AirLoopEquipment::RefrigerantType_sequence& AirLoopEquipment::
  RefrigerantType () const
  {
    return this->RefrigerantType_;
  }

  inline
  AirLoopEquipment::RefrigerantType_sequence& AirLoopEquipment::
  RefrigerantType ()
  {
    return this->RefrigerantType_;
  }

  inline
  void AirLoopEquipment::
  RefrigerantType (const RefrigerantType_sequence& s)
  {
    this->RefrigerantType_ = s;
  }

  inline
  const AirLoopEquipment::CADObjectId_sequence& AirLoopEquipment::
  CADObjectId () const
  {
    return this->CADObjectId_;
  }

  inline
  AirLoopEquipment::CADObjectId_sequence& AirLoopEquipment::
  CADObjectId ()
  {
    return this->CADObjectId_;
  }

  inline
  void AirLoopEquipment::
  CADObjectId (const CADObjectId_sequence& s)
  {
    this->CADObjectId_ = s;
  }

  inline
  const AirLoopEquipment::GeneralGeometry_sequence& AirLoopEquipment::
  GeneralGeometry () const
  {
    return this->GeneralGeometry_;
  }

  inline
  AirLoopEquipment::GeneralGeometry_sequence& AirLoopEquipment::
  GeneralGeometry ()
  {
    return this->GeneralGeometry_;
  }

  inline
  void AirLoopEquipment::
  GeneralGeometry (const GeneralGeometry_sequence& s)
  {
    this->GeneralGeometry_ = s;
  }

  inline
  const AirLoopEquipment::ShellGeometry_sequence& AirLoopEquipment::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  AirLoopEquipment::ShellGeometry_sequence& AirLoopEquipment::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void AirLoopEquipment::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const AirLoopEquipment::id_type& AirLoopEquipment::
  id () const
  {
    return this->id_.get ();
  }

  inline
  AirLoopEquipment::id_type& AirLoopEquipment::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void AirLoopEquipment::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void AirLoopEquipment::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const AirLoopEquipment::equipmentType_type& AirLoopEquipment::
  equipmentType () const
  {
    return this->equipmentType_.get ();
  }

  inline
  AirLoopEquipment::equipmentType_type& AirLoopEquipment::
  equipmentType ()
  {
    return this->equipmentType_.get ();
  }

  inline
  void AirLoopEquipment::
  equipmentType (const equipmentType_type& x)
  {
    this->equipmentType_.set (x);
  }

  inline
  void AirLoopEquipment::
  equipmentType (::std::auto_ptr< equipmentType_type > x)
  {
    this->equipmentType_.set (x);
  }

  inline
  const AirLoopEquipment::programId_optional& AirLoopEquipment::
  programId () const
  {
    return this->programId_;
  }

  inline
  AirLoopEquipment::programId_optional& AirLoopEquipment::
  programId ()
  {
    return this->programId_;
  }

  inline
  void AirLoopEquipment::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void AirLoopEquipment::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void AirLoopEquipment::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // AirLoopEquipmentId
  // 

  inline
  const AirLoopEquipmentId::airLoopEquipIdRef_type& AirLoopEquipmentId::
  airLoopEquipIdRef () const
  {
    return this->airLoopEquipIdRef_.get ();
  }

  inline
  AirLoopEquipmentId::airLoopEquipIdRef_type& AirLoopEquipmentId::
  airLoopEquipIdRef ()
  {
    return this->airLoopEquipIdRef_.get ();
  }

  inline
  void AirLoopEquipmentId::
  airLoopEquipIdRef (const airLoopEquipIdRef_type& x)
  {
    this->airLoopEquipIdRef_.set (x);
  }

  inline
  void AirLoopEquipmentId::
  airLoopEquipIdRef (::std::auto_ptr< airLoopEquipIdRef_type > x)
  {
    this->airLoopEquipIdRef_.set (x);
  }


  // AirLoopId
  // 

  inline
  const AirLoopId::airLoopIdRef_type& AirLoopId::
  airLoopIdRef () const
  {
    return this->airLoopIdRef_.get ();
  }

  inline
  AirLoopId::airLoopIdRef_type& AirLoopId::
  airLoopIdRef ()
  {
    return this->airLoopIdRef_.get ();
  }

  inline
  void AirLoopId::
  airLoopIdRef (const airLoopIdRef_type& x)
  {
    this->airLoopIdRef_.set (x);
  }

  inline
  void AirLoopId::
  airLoopIdRef (::std::auto_ptr< airLoopIdRef_type > x)
  {
    this->airLoopIdRef_.set (x);
  }


  // AirTemperature
  // 

  inline
  const AirTemperature::unit_type& AirTemperature::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  AirTemperature::unit_type& AirTemperature::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void AirTemperature::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void AirTemperature::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const AirTemperature::type_type& AirTemperature::
  type () const
  {
    return this->type_.get ();
  }

  inline
  AirTemperature::type_type& AirTemperature::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void AirTemperature::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void AirTemperature::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }


  // ResetTemperature
  // 

  inline
  const ResetTemperature::unit_type& ResetTemperature::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  ResetTemperature::unit_type& ResetTemperature::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void ResetTemperature::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void ResetTemperature::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const ResetTemperature::type_type& ResetTemperature::
  type () const
  {
    return this->type_.get ();
  }

  inline
  ResetTemperature::type_type& ResetTemperature::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void ResetTemperature::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void ResetTemperature::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }


  // Albedo
  // 

  inline
  const Albedo::unit_type& Albedo::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Albedo::unit_type& Albedo::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Albedo::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Albedo::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // AltEnergySource
  // 

  inline
  const AltEnergySource::MeterId_sequence& AltEnergySource::
  MeterId () const
  {
    return this->MeterId_;
  }

  inline
  AltEnergySource::MeterId_sequence& AltEnergySource::
  MeterId ()
  {
    return this->MeterId_;
  }

  inline
  void AltEnergySource::
  MeterId (const MeterId_sequence& s)
  {
    this->MeterId_ = s;
  }

  inline
  const AltEnergySource::id_type& AltEnergySource::
  id () const
  {
    return this->id_.get ();
  }

  inline
  AltEnergySource::id_type& AltEnergySource::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void AltEnergySource::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void AltEnergySource::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const AltEnergySource::altEnergyType_type& AltEnergySource::
  altEnergyType () const
  {
    return this->altEnergyType_.get ();
  }

  inline
  AltEnergySource::altEnergyType_type& AltEnergySource::
  altEnergyType ()
  {
    return this->altEnergyType_.get ();
  }

  inline
  void AltEnergySource::
  altEnergyType (const altEnergyType_type& x)
  {
    this->altEnergyType_.set (x);
  }

  inline
  void AltEnergySource::
  altEnergyType (::std::auto_ptr< altEnergyType_type > x)
  {
    this->altEnergyType_.set (x);
  }

  inline
  const AltEnergySource::resourceType_type& AltEnergySource::
  resourceType () const
  {
    return this->resourceType_.get ();
  }

  inline
  AltEnergySource::resourceType_type& AltEnergySource::
  resourceType ()
  {
    return this->resourceType_.get ();
  }

  inline
  void AltEnergySource::
  resourceType (const resourceType_type& x)
  {
    this->resourceType_.set (x);
  }

  inline
  void AltEnergySource::
  resourceType (::std::auto_ptr< resourceType_type > x)
  {
    this->resourceType_.set (x);
  }

  inline
  const AltEnergySource::programId_optional& AltEnergySource::
  programId () const
  {
    return this->programId_;
  }

  inline
  AltEnergySource::programId_optional& AltEnergySource::
  programId ()
  {
    return this->programId_;
  }

  inline
  void AltEnergySource::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void AltEnergySource::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void AltEnergySource::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // Area
  // 

  inline
  const Area::unit_optional& Area::
  unit () const
  {
    return this->unit_;
  }

  inline
  Area::unit_optional& Area::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Area::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Area::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Area::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Azimuth
  // 


  // BiomassDensity
  // 

  inline
  const BiomassDensity::unit_type& BiomassDensity::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  BiomassDensity::unit_type& BiomassDensity::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void BiomassDensity::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void BiomassDensity::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Blind
  // 

  inline
  const Blind::Name_sequence& Blind::
  Name () const
  {
    return this->Name_;
  }

  inline
  Blind::Name_sequence& Blind::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Blind::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Blind::Description_sequence& Blind::
  Description () const
  {
    return this->Description_;
  }

  inline
  Blind::Description_sequence& Blind::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Blind::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Blind::Transmittance_sequence& Blind::
  Transmittance () const
  {
    return this->Transmittance_;
  }

  inline
  Blind::Transmittance_sequence& Blind::
  Transmittance ()
  {
    return this->Transmittance_;
  }

  inline
  void Blind::
  Transmittance (const Transmittance_sequence& s)
  {
    this->Transmittance_ = s;
  }

  inline
  const Blind::Reflectance_sequence& Blind::
  Reflectance () const
  {
    return this->Reflectance_;
  }

  inline
  Blind::Reflectance_sequence& Blind::
  Reflectance ()
  {
    return this->Reflectance_;
  }

  inline
  void Blind::
  Reflectance (const Reflectance_sequence& s)
  {
    this->Reflectance_ = s;
  }

  inline
  const Blind::Emittance_sequence& Blind::
  Emittance () const
  {
    return this->Emittance_;
  }

  inline
  Blind::Emittance_sequence& Blind::
  Emittance ()
  {
    return this->Emittance_;
  }

  inline
  void Blind::
  Emittance (const Emittance_sequence& s)
  {
    this->Emittance_ = s;
  }

  inline
  const Blind::Thickness_sequence& Blind::
  Thickness () const
  {
    return this->Thickness_;
  }

  inline
  Blind::Thickness_sequence& Blind::
  Thickness ()
  {
    return this->Thickness_;
  }

  inline
  void Blind::
  Thickness (const Thickness_sequence& s)
  {
    this->Thickness_ = s;
  }

  inline
  const Blind::Conductivity_sequence& Blind::
  Conductivity () const
  {
    return this->Conductivity_;
  }

  inline
  Blind::Conductivity_sequence& Blind::
  Conductivity ()
  {
    return this->Conductivity_;
  }

  inline
  void Blind::
  Conductivity (const Conductivity_sequence& s)
  {
    this->Conductivity_ = s;
  }

  inline
  const Blind::id_type& Blind::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Blind::id_type& Blind::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Blind::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Blind::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }


  // BlowerDoorValue
  // 

  inline
  const BlowerDoorValue::unit_type& BlowerDoorValue::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  BlowerDoorValue::unit_type& BlowerDoorValue::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void BlowerDoorValue::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void BlowerDoorValue::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Building
  // 

  inline
  const Building::Name_sequence& Building::
  Name () const
  {
    return this->Name_;
  }

  inline
  Building::Name_sequence& Building::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Building::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Building::Description_sequence& Building::
  Description () const
  {
    return this->Description_;
  }

  inline
  Building::Description_sequence& Building::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Building::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Building::StreetAddress_sequence& Building::
  StreetAddress () const
  {
    return this->StreetAddress_;
  }

  inline
  Building::StreetAddress_sequence& Building::
  StreetAddress ()
  {
    return this->StreetAddress_;
  }

  inline
  void Building::
  StreetAddress (const StreetAddress_sequence& s)
  {
    this->StreetAddress_ = s;
  }

  inline
  const Building::Area_sequence& Building::
  Area () const
  {
    return this->Area_;
  }

  inline
  Building::Area_sequence& Building::
  Area ()
  {
    return this->Area_;
  }

  inline
  void Building::
  Area (const Area_sequence& s)
  {
    this->Area_ = s;
  }

  inline
  const Building::Space_sequence& Building::
  Space () const
  {
    return this->Space_;
  }

  inline
  Building::Space_sequence& Building::
  Space ()
  {
    return this->Space_;
  }

  inline
  void Building::
  Space (const Space_sequence& s)
  {
    this->Space_ = s;
  }

  inline
  const Building::AverageNumberOfFloors_sequence& Building::
  AverageNumberOfFloors () const
  {
    return this->AverageNumberOfFloors_;
  }

  inline
  Building::AverageNumberOfFloors_sequence& Building::
  AverageNumberOfFloors ()
  {
    return this->AverageNumberOfFloors_;
  }

  inline
  void Building::
  AverageNumberOfFloors (const AverageNumberOfFloors_sequence& s)
  {
    this->AverageNumberOfFloors_ = s;
  }

  inline
  const Building::InfiltrationFlow_sequence& Building::
  InfiltrationFlow () const
  {
    return this->InfiltrationFlow_;
  }

  inline
  Building::InfiltrationFlow_sequence& Building::
  InfiltrationFlow ()
  {
    return this->InfiltrationFlow_;
  }

  inline
  void Building::
  InfiltrationFlow (const InfiltrationFlow_sequence& s)
  {
    this->InfiltrationFlow_ = s;
  }

  inline
  const Building::ShellGeometry_sequence& Building::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  Building::ShellGeometry_sequence& Building::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void Building::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const Building::SpaceBoundary_sequence& Building::
  SpaceBoundary () const
  {
    return this->SpaceBoundary_;
  }

  inline
  Building::SpaceBoundary_sequence& Building::
  SpaceBoundary ()
  {
    return this->SpaceBoundary_;
  }

  inline
  void Building::
  SpaceBoundary (const SpaceBoundary_sequence& s)
  {
    this->SpaceBoundary_ = s;
  }

  inline
  const Building::Lighting_sequence& Building::
  Lighting () const
  {
    return this->Lighting_;
  }

  inline
  Building::Lighting_sequence& Building::
  Lighting ()
  {
    return this->Lighting_;
  }

  inline
  void Building::
  Lighting (const Lighting_sequence& s)
  {
    this->Lighting_ = s;
  }

  inline
  const Building::IntEquipId_sequence& Building::
  IntEquipId () const
  {
    return this->IntEquipId_;
  }

  inline
  Building::IntEquipId_sequence& Building::
  IntEquipId ()
  {
    return this->IntEquipId_;
  }

  inline
  void Building::
  IntEquipId (const IntEquipId_sequence& s)
  {
    this->IntEquipId_ = s;
  }

  inline
  const Building::MeterId_sequence& Building::
  MeterId () const
  {
    return this->MeterId_;
  }

  inline
  Building::MeterId_sequence& Building::
  MeterId ()
  {
    return this->MeterId_;
  }

  inline
  void Building::
  MeterId (const MeterId_sequence& s)
  {
    this->MeterId_ = s;
  }

  inline
  const Building::PeakDomesticHotWaterFlow_sequence& Building::
  PeakDomesticHotWaterFlow () const
  {
    return this->PeakDomesticHotWaterFlow_;
  }

  inline
  Building::PeakDomesticHotWaterFlow_sequence& Building::
  PeakDomesticHotWaterFlow ()
  {
    return this->PeakDomesticHotWaterFlow_;
  }

  inline
  void Building::
  PeakDomesticHotWaterFlow (const PeakDomesticHotWaterFlow_sequence& s)
  {
    this->PeakDomesticHotWaterFlow_ = s;
  }

  inline
  const Building::BuildingStorey_sequence& Building::
  BuildingStorey () const
  {
    return this->BuildingStorey_;
  }

  inline
  Building::BuildingStorey_sequence& Building::
  BuildingStorey ()
  {
    return this->BuildingStorey_;
  }

  inline
  void Building::
  BuildingStorey (const BuildingStorey_sequence& s)
  {
    this->BuildingStorey_ = s;
  }

  inline
  const Building::id_type& Building::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Building::id_type& Building::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Building::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Building::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Building::buildingType_type& Building::
  buildingType () const
  {
    return this->buildingType_.get ();
  }

  inline
  Building::buildingType_type& Building::
  buildingType ()
  {
    return this->buildingType_.get ();
  }

  inline
  void Building::
  buildingType (const buildingType_type& x)
  {
    this->buildingType_.set (x);
  }

  inline
  void Building::
  buildingType (::std::auto_ptr< buildingType_type > x)
  {
    this->buildingType_.set (x);
  }

  inline
  const Building::ifcGUID_optional& Building::
  ifcGUID () const
  {
    return this->ifcGUID_;
  }

  inline
  Building::ifcGUID_optional& Building::
  ifcGUID ()
  {
    return this->ifcGUID_;
  }

  inline
  void Building::
  ifcGUID (const ifcGUID_type& x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  void Building::
  ifcGUID (const ifcGUID_optional& x)
  {
    this->ifcGUID_ = x;
  }

  inline
  void Building::
  ifcGUID (::std::auto_ptr< ifcGUID_type > x)
  {
    this->ifcGUID_.set (x);
  }


  // BuildingStorey
  // 

  inline
  const BuildingStorey::Name_sequence& BuildingStorey::
  Name () const
  {
    return this->Name_;
  }

  inline
  BuildingStorey::Name_sequence& BuildingStorey::
  Name ()
  {
    return this->Name_;
  }

  inline
  void BuildingStorey::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const BuildingStorey::Level_sequence& BuildingStorey::
  Level () const
  {
    return this->Level_;
  }

  inline
  BuildingStorey::Level_sequence& BuildingStorey::
  Level ()
  {
    return this->Level_;
  }

  inline
  void BuildingStorey::
  Level (const Level_sequence& s)
  {
    this->Level_ = s;
  }

  inline
  const BuildingStorey::PlanarGeometry_sequence& BuildingStorey::
  PlanarGeometry () const
  {
    return this->PlanarGeometry_;
  }

  inline
  BuildingStorey::PlanarGeometry_sequence& BuildingStorey::
  PlanarGeometry ()
  {
    return this->PlanarGeometry_;
  }

  inline
  void BuildingStorey::
  PlanarGeometry (const PlanarGeometry_sequence& s)
  {
    this->PlanarGeometry_ = s;
  }

  inline
  const BuildingStorey::id_type& BuildingStorey::
  id () const
  {
    return this->id_.get ();
  }

  inline
  BuildingStorey::id_type& BuildingStorey::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void BuildingStorey::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void BuildingStorey::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const BuildingStorey::ifcGUID_optional& BuildingStorey::
  ifcGUID () const
  {
    return this->ifcGUID_;
  }

  inline
  BuildingStorey::ifcGUID_optional& BuildingStorey::
  ifcGUID ()
  {
    return this->ifcGUID_;
  }

  inline
  void BuildingStorey::
  ifcGUID (const ifcGUID_type& x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  void BuildingStorey::
  ifcGUID (const ifcGUID_optional& x)
  {
    this->ifcGUID_ = x;
  }

  inline
  void BuildingStorey::
  ifcGUID (::std::auto_ptr< ifcGUID_type > x)
  {
    this->ifcGUID_.set (x);
  }


  // CADMaterialId
  // 

  inline
  const CADMaterialId::CADMaterialIdRef_type& CADMaterialId::
  CADMaterialIdRef () const
  {
    return this->CADMaterialIdRef_.get ();
  }

  inline
  CADMaterialId::CADMaterialIdRef_type& CADMaterialId::
  CADMaterialIdRef ()
  {
    return this->CADMaterialIdRef_.get ();
  }

  inline
  void CADMaterialId::
  CADMaterialIdRef (const CADMaterialIdRef_type& x)
  {
    this->CADMaterialIdRef_.set (x);
  }

  inline
  void CADMaterialId::
  CADMaterialIdRef (::std::auto_ptr< CADMaterialIdRef_type > x)
  {
    this->CADMaterialIdRef_.set (x);
  }


  // CADModelId
  // 

  inline
  const CADModelId::programIdRef_optional& CADModelId::
  programIdRef () const
  {
    return this->programIdRef_;
  }

  inline
  CADModelId::programIdRef_optional& CADModelId::
  programIdRef ()
  {
    return this->programIdRef_;
  }

  inline
  void CADModelId::
  programIdRef (const programIdRef_type& x)
  {
    this->programIdRef_.set (x);
  }

  inline
  void CADModelId::
  programIdRef (const programIdRef_optional& x)
  {
    this->programIdRef_ = x;
  }

  inline
  void CADModelId::
  programIdRef (::std::auto_ptr< programIdRef_type > x)
  {
    this->programIdRef_.set (x);
  }


  // CADObjectId
  // 

  inline
  const CADObjectId::programIdRef_optional& CADObjectId::
  programIdRef () const
  {
    return this->programIdRef_;
  }

  inline
  CADObjectId::programIdRef_optional& CADObjectId::
  programIdRef ()
  {
    return this->programIdRef_;
  }

  inline
  void CADObjectId::
  programIdRef (const programIdRef_type& x)
  {
    this->programIdRef_.set (x);
  }

  inline
  void CADObjectId::
  programIdRef (const programIdRef_optional& x)
  {
    this->programIdRef_ = x;
  }

  inline
  void CADObjectId::
  programIdRef (::std::auto_ptr< programIdRef_type > x)
  {
    this->programIdRef_.set (x);
  }


  // Campus
  // 

  inline
  const Campus::Name_sequence& Campus::
  Name () const
  {
    return this->Name_;
  }

  inline
  Campus::Name_sequence& Campus::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Campus::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Campus::Description_sequence& Campus::
  Description () const
  {
    return this->Description_;
  }

  inline
  Campus::Description_sequence& Campus::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Campus::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Campus::Location_sequence& Campus::
  Location () const
  {
    return this->Location_;
  }

  inline
  Campus::Location_sequence& Campus::
  Location ()
  {
    return this->Location_;
  }

  inline
  void Campus::
  Location (const Location_sequence& s)
  {
    this->Location_ = s;
  }

  inline
  const Campus::Building_sequence& Campus::
  Building () const
  {
    return this->Building_;
  }

  inline
  Campus::Building_sequence& Campus::
  Building ()
  {
    return this->Building_;
  }

  inline
  void Campus::
  Building (const Building_sequence& s)
  {
    this->Building_ = s;
  }

  inline
  const Campus::Surface_sequence& Campus::
  Surface () const
  {
    return this->Surface_;
  }

  inline
  Campus::Surface_sequence& Campus::
  Surface ()
  {
    return this->Surface_;
  }

  inline
  void Campus::
  Surface (const Surface_sequence& s)
  {
    this->Surface_ = s;
  }

  inline
  const Campus::YearModeled_sequence& Campus::
  YearModeled () const
  {
    return this->YearModeled_;
  }

  inline
  Campus::YearModeled_sequence& Campus::
  YearModeled ()
  {
    return this->YearModeled_;
  }

  inline
  void Campus::
  YearModeled (const YearModeled_sequence& s)
  {
    this->YearModeled_ = s;
  }

  inline
  const Campus::DaylightSavings_sequence& Campus::
  DaylightSavings () const
  {
    return this->DaylightSavings_;
  }

  inline
  Campus::DaylightSavings_sequence& Campus::
  DaylightSavings ()
  {
    return this->DaylightSavings_;
  }

  inline
  void Campus::
  DaylightSavings (const DaylightSavings_sequence& s)
  {
    this->DaylightSavings_ = s;
  }

  inline
  const Campus::Life_sequence& Campus::
  Life () const
  {
    return this->Life_;
  }

  inline
  Campus::Life_sequence& Campus::
  Life ()
  {
    return this->Life_;
  }

  inline
  void Campus::
  Life (const Life_sequence& s)
  {
    this->Life_ = s;
  }

  inline
  const Campus::AltEnergySource_sequence& Campus::
  AltEnergySource () const
  {
    return this->AltEnergySource_;
  }

  inline
  Campus::AltEnergySource_sequence& Campus::
  AltEnergySource ()
  {
    return this->AltEnergySource_;
  }

  inline
  void Campus::
  AltEnergySource (const AltEnergySource_sequence& s)
  {
    this->AltEnergySource_ = s;
  }

  inline
  const Campus::ShellGeometry_sequence& Campus::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  Campus::ShellGeometry_sequence& Campus::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void Campus::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const Campus::Vegetation_sequence& Campus::
  Vegetation () const
  {
    return this->Vegetation_;
  }

  inline
  Campus::Vegetation_sequence& Campus::
  Vegetation ()
  {
    return this->Vegetation_;
  }

  inline
  void Campus::
  Vegetation (const Vegetation_sequence& s)
  {
    this->Vegetation_ = s;
  }

  inline
  const Campus::Transportation_sequence& Campus::
  Transportation () const
  {
    return this->Transportation_;
  }

  inline
  Campus::Transportation_sequence& Campus::
  Transportation ()
  {
    return this->Transportation_;
  }

  inline
  void Campus::
  Transportation (const Transportation_sequence& s)
  {
    this->Transportation_ = s;
  }

  inline
  const Campus::MeterId_sequence& Campus::
  MeterId () const
  {
    return this->MeterId_;
  }

  inline
  Campus::MeterId_sequence& Campus::
  MeterId ()
  {
    return this->MeterId_;
  }

  inline
  void Campus::
  MeterId (const MeterId_sequence& s)
  {
    this->MeterId_ = s;
  }

  inline
  const Campus::ExtEquipId_sequence& Campus::
  ExtEquipId () const
  {
    return this->ExtEquipId_;
  }

  inline
  Campus::ExtEquipId_sequence& Campus::
  ExtEquipId ()
  {
    return this->ExtEquipId_;
  }

  inline
  void Campus::
  ExtEquipId (const ExtEquipId_sequence& s)
  {
    this->ExtEquipId_ = s;
  }

  inline
  const Campus::Lighting_sequence& Campus::
  Lighting () const
  {
    return this->Lighting_;
  }

  inline
  Campus::Lighting_sequence& Campus::
  Lighting ()
  {
    return this->Lighting_;
  }

  inline
  void Campus::
  Lighting (const Lighting_sequence& s)
  {
    this->Lighting_ = s;
  }

  inline
  const Campus::LightControlId_sequence& Campus::
  LightControlId () const
  {
    return this->LightControlId_;
  }

  inline
  Campus::LightControlId_sequence& Campus::
  LightControlId ()
  {
    return this->LightControlId_;
  }

  inline
  void Campus::
  LightControlId (const LightControlId_sequence& s)
  {
    this->LightControlId_ = s;
  }

  inline
  const Campus::id_type& Campus::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Campus::id_type& Campus::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Campus::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Campus::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Campus::designHeatWeathIdRef_optional& Campus::
  designHeatWeathIdRef () const
  {
    return this->designHeatWeathIdRef_;
  }

  inline
  Campus::designHeatWeathIdRef_optional& Campus::
  designHeatWeathIdRef ()
  {
    return this->designHeatWeathIdRef_;
  }

  inline
  void Campus::
  designHeatWeathIdRef (const designHeatWeathIdRef_type& x)
  {
    this->designHeatWeathIdRef_.set (x);
  }

  inline
  void Campus::
  designHeatWeathIdRef (const designHeatWeathIdRef_optional& x)
  {
    this->designHeatWeathIdRef_ = x;
  }

  inline
  void Campus::
  designHeatWeathIdRef (::std::auto_ptr< designHeatWeathIdRef_type > x)
  {
    this->designHeatWeathIdRef_.set (x);
  }

  inline
  const Campus::designCoolWeathIdRef_optional& Campus::
  designCoolWeathIdRef () const
  {
    return this->designCoolWeathIdRef_;
  }

  inline
  Campus::designCoolWeathIdRef_optional& Campus::
  designCoolWeathIdRef ()
  {
    return this->designCoolWeathIdRef_;
  }

  inline
  void Campus::
  designCoolWeathIdRef (const designCoolWeathIdRef_type& x)
  {
    this->designCoolWeathIdRef_.set (x);
  }

  inline
  void Campus::
  designCoolWeathIdRef (const designCoolWeathIdRef_optional& x)
  {
    this->designCoolWeathIdRef_ = x;
  }

  inline
  void Campus::
  designCoolWeathIdRef (::std::auto_ptr< designCoolWeathIdRef_type > x)
  {
    this->designCoolWeathIdRef_.set (x);
  }

  inline
  const Campus::ifcGUID_optional& Campus::
  ifcGUID () const
  {
    return this->ifcGUID_;
  }

  inline
  Campus::ifcGUID_optional& Campus::
  ifcGUID ()
  {
    return this->ifcGUID_;
  }

  inline
  void Campus::
  ifcGUID (const ifcGUID_type& x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  void Campus::
  ifcGUID (const ifcGUID_optional& x)
  {
    this->ifcGUID_ = x;
  }

  inline
  void Campus::
  ifcGUID (::std::auto_ptr< ifcGUID_type > x)
  {
    this->ifcGUID_.set (x);
  }


  // Capacity
  // 

  inline
  const Capacity::unit_type& Capacity::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Capacity::unit_type& Capacity::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Capacity::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Capacity::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Capacity::capacityType_type& Capacity::
  capacityType () const
  {
    return this->capacityType_.get ();
  }

  inline
  Capacity::capacityType_type& Capacity::
  capacityType ()
  {
    return this->capacityType_.get ();
  }

  inline
  void Capacity::
  capacityType (const capacityType_type& x)
  {
    this->capacityType_.set (x);
  }

  inline
  void Capacity::
  capacityType (::std::auto_ptr< capacityType_type > x)
  {
    this->capacityType_.set (x);
  }


  // CartesianPoint
  // 

  inline
  const CartesianPoint::Coordinate_sequence& CartesianPoint::
  Coordinate () const
  {
    return this->Coordinate_;
  }

  inline
  CartesianPoint::Coordinate_sequence& CartesianPoint::
  Coordinate ()
  {
    return this->Coordinate_;
  }

  inline
  void CartesianPoint::
  Coordinate (const Coordinate_sequence& s)
  {
    this->Coordinate_ = s;
  }


  // CDD
  // 

  inline
  const CDD::Temperature_sequence& CDD::
  Temperature () const
  {
    return this->Temperature_;
  }

  inline
  CDD::Temperature_sequence& CDD::
  Temperature ()
  {
    return this->Temperature_;
  }

  inline
  void CDD::
  Temperature (const Temperature_sequence& s)
  {
    this->Temperature_ = s;
  }

  inline
  const CDD::CDDValue_sequence& CDD::
  CDDValue () const
  {
    return this->CDDValue_;
  }

  inline
  CDD::CDDValue_sequence& CDD::
  CDDValue ()
  {
    return this->CDDValue_;
  }

  inline
  void CDD::
  CDDValue (const CDDValue_sequence& s)
  {
    this->CDDValue_ = s;
  }


  // ClosedShell
  // 

  inline
  const ClosedShell::PolyLoop_sequence& ClosedShell::
  PolyLoop () const
  {
    return this->PolyLoop_;
  }

  inline
  ClosedShell::PolyLoop_sequence& ClosedShell::
  PolyLoop ()
  {
    return this->PolyLoop_;
  }

  inline
  void ClosedShell::
  PolyLoop (const PolyLoop_sequence& s)
  {
    this->PolyLoop_ = s;
  }


  // CLTDParameters
  // 

  inline
  const CLTDParameters::roofASHRAENumber_optional& CLTDParameters::
  roofASHRAENumber () const
  {
    return this->roofASHRAENumber_;
  }

  inline
  CLTDParameters::roofASHRAENumber_optional& CLTDParameters::
  roofASHRAENumber ()
  {
    return this->roofASHRAENumber_;
  }

  inline
  void CLTDParameters::
  roofASHRAENumber (const roofASHRAENumber_type& x)
  {
    this->roofASHRAENumber_.set (x);
  }

  inline
  void CLTDParameters::
  roofASHRAENumber (const roofASHRAENumber_optional& x)
  {
    this->roofASHRAENumber_ = x;
  }

  inline
  void CLTDParameters::
  roofASHRAENumber (::std::auto_ptr< roofASHRAENumber_type > x)
  {
    this->roofASHRAENumber_.set (x);
  }

  inline
  const CLTDParameters::wallASHRAEGroup_optional& CLTDParameters::
  wallASHRAEGroup () const
  {
    return this->wallASHRAEGroup_;
  }

  inline
  CLTDParameters::wallASHRAEGroup_optional& CLTDParameters::
  wallASHRAEGroup ()
  {
    return this->wallASHRAEGroup_;
  }

  inline
  void CLTDParameters::
  wallASHRAEGroup (const wallASHRAEGroup_type& x)
  {
    this->wallASHRAEGroup_.set (x);
  }

  inline
  void CLTDParameters::
  wallASHRAEGroup (const wallASHRAEGroup_optional& x)
  {
    this->wallASHRAEGroup_ = x;
  }

  inline
  void CLTDParameters::
  wallASHRAEGroup (::std::auto_ptr< wallASHRAEGroup_type > x)
  {
    this->wallASHRAEGroup_.set (x);
  }

  inline
  const CLTDParameters::roofColor_optional& CLTDParameters::
  roofColor () const
  {
    return this->roofColor_;
  }

  inline
  CLTDParameters::roofColor_optional& CLTDParameters::
  roofColor ()
  {
    return this->roofColor_;
  }

  inline
  void CLTDParameters::
  roofColor (const roofColor_type& x)
  {
    this->roofColor_.set (x);
  }

  inline
  void CLTDParameters::
  roofColor (const roofColor_optional& x)
  {
    this->roofColor_ = x;
  }

  inline
  void CLTDParameters::
  roofColor (::std::auto_ptr< roofColor_type > x)
  {
    this->roofColor_.set (x);
  }

  inline
  const CLTDParameters::roofHasSuspendedCeiling_optional& CLTDParameters::
  roofHasSuspendedCeiling () const
  {
    return this->roofHasSuspendedCeiling_;
  }

  inline
  CLTDParameters::roofHasSuspendedCeiling_optional& CLTDParameters::
  roofHasSuspendedCeiling ()
  {
    return this->roofHasSuspendedCeiling_;
  }

  inline
  void CLTDParameters::
  roofHasSuspendedCeiling (const roofHasSuspendedCeiling_type& x)
  {
    this->roofHasSuspendedCeiling_.set (x);
  }

  inline
  void CLTDParameters::
  roofHasSuspendedCeiling (const roofHasSuspendedCeiling_optional& x)
  {
    this->roofHasSuspendedCeiling_ = x;
  }

  inline
  const CLTDParameters::wallColor_optional& CLTDParameters::
  wallColor () const
  {
    return this->wallColor_;
  }

  inline
  CLTDParameters::wallColor_optional& CLTDParameters::
  wallColor ()
  {
    return this->wallColor_;
  }

  inline
  void CLTDParameters::
  wallColor (const wallColor_type& x)
  {
    this->wallColor_.set (x);
  }

  inline
  void CLTDParameters::
  wallColor (const wallColor_optional& x)
  {
    this->wallColor_ = x;
  }

  inline
  void CLTDParameters::
  wallColor (::std::auto_ptr< wallColor_type > x)
  {
    this->wallColor_.set (x);
  }


  // CoefficientOfUtilization
  // 

  inline
  const CoefficientOfUtilization::wallReflectance_optional& CoefficientOfUtilization::
  wallReflectance () const
  {
    return this->wallReflectance_;
  }

  inline
  CoefficientOfUtilization::wallReflectance_optional& CoefficientOfUtilization::
  wallReflectance ()
  {
    return this->wallReflectance_;
  }

  inline
  void CoefficientOfUtilization::
  wallReflectance (const wallReflectance_type& x)
  {
    this->wallReflectance_.set (x);
  }

  inline
  void CoefficientOfUtilization::
  wallReflectance (const wallReflectance_optional& x)
  {
    this->wallReflectance_ = x;
  }

  inline
  const CoefficientOfUtilization::ceilingCavityReflectance_optional& CoefficientOfUtilization::
  ceilingCavityReflectance () const
  {
    return this->ceilingCavityReflectance_;
  }

  inline
  CoefficientOfUtilization::ceilingCavityReflectance_optional& CoefficientOfUtilization::
  ceilingCavityReflectance ()
  {
    return this->ceilingCavityReflectance_;
  }

  inline
  void CoefficientOfUtilization::
  ceilingCavityReflectance (const ceilingCavityReflectance_type& x)
  {
    this->ceilingCavityReflectance_.set (x);
  }

  inline
  void CoefficientOfUtilization::
  ceilingCavityReflectance (const ceilingCavityReflectance_optional& x)
  {
    this->ceilingCavityReflectance_ = x;
  }

  inline
  const CoefficientOfUtilization::floorReflectance_optional& CoefficientOfUtilization::
  floorReflectance () const
  {
    return this->floorReflectance_;
  }

  inline
  CoefficientOfUtilization::floorReflectance_optional& CoefficientOfUtilization::
  floorReflectance ()
  {
    return this->floorReflectance_;
  }

  inline
  void CoefficientOfUtilization::
  floorReflectance (const floorReflectance_type& x)
  {
    this->floorReflectance_.set (x);
  }

  inline
  void CoefficientOfUtilization::
  floorReflectance (const floorReflectance_optional& x)
  {
    this->floorReflectance_ = x;
  }

  inline
  const CoefficientOfUtilization::roomCavityRatio_optional& CoefficientOfUtilization::
  roomCavityRatio () const
  {
    return this->roomCavityRatio_;
  }

  inline
  CoefficientOfUtilization::roomCavityRatio_optional& CoefficientOfUtilization::
  roomCavityRatio ()
  {
    return this->roomCavityRatio_;
  }

  inline
  void CoefficientOfUtilization::
  roomCavityRatio (const roomCavityRatio_type& x)
  {
    this->roomCavityRatio_.set (x);
  }

  inline
  void CoefficientOfUtilization::
  roomCavityRatio (const roomCavityRatio_optional& x)
  {
    this->roomCavityRatio_ = x;
  }


  // Conductivity
  // 

  inline
  const Conductivity::unit_type& Conductivity::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Conductivity::unit_type& Conductivity::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Conductivity::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Conductivity::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // ConductivityFofT
  // 

  inline
  const ConductivityFofT::unit_type& ConductivityFofT::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  ConductivityFofT::unit_type& ConductivityFofT::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void ConductivityFofT::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void ConductivityFofT::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Construction
  // 

  inline
  const Construction::Name_sequence& Construction::
  Name () const
  {
    return this->Name_;
  }

  inline
  Construction::Name_sequence& Construction::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Construction::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Construction::Description_sequence& Construction::
  Description () const
  {
    return this->Description_;
  }

  inline
  Construction::Description_sequence& Construction::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Construction::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Construction::U_value_sequence& Construction::
  U_value () const
  {
    return this->U_value_;
  }

  inline
  Construction::U_value_sequence& Construction::
  U_value ()
  {
    return this->U_value_;
  }

  inline
  void Construction::
  U_value (const U_value_sequence& s)
  {
    this->U_value_ = s;
  }

  inline
  const Construction::Absorptance_sequence& Construction::
  Absorptance () const
  {
    return this->Absorptance_;
  }

  inline
  Construction::Absorptance_sequence& Construction::
  Absorptance ()
  {
    return this->Absorptance_;
  }

  inline
  void Construction::
  Absorptance (const Absorptance_sequence& s)
  {
    this->Absorptance_ = s;
  }

  inline
  const Construction::Roughness_sequence& Construction::
  Roughness () const
  {
    return this->Roughness_;
  }

  inline
  Construction::Roughness_sequence& Construction::
  Roughness ()
  {
    return this->Roughness_;
  }

  inline
  void Construction::
  Roughness (const Roughness_sequence& s)
  {
    this->Roughness_ = s;
  }

  inline
  const Construction::Albedo_sequence& Construction::
  Albedo () const
  {
    return this->Albedo_;
  }

  inline
  Construction::Albedo_sequence& Construction::
  Albedo ()
  {
    return this->Albedo_;
  }

  inline
  void Construction::
  Albedo (const Albedo_sequence& s)
  {
    this->Albedo_ = s;
  }

  inline
  const Construction::Reflectance_sequence& Construction::
  Reflectance () const
  {
    return this->Reflectance_;
  }

  inline
  Construction::Reflectance_sequence& Construction::
  Reflectance ()
  {
    return this->Reflectance_;
  }

  inline
  void Construction::
  Reflectance (const Reflectance_sequence& s)
  {
    this->Reflectance_ = s;
  }

  inline
  const Construction::Transmittance_sequence& Construction::
  Transmittance () const
  {
    return this->Transmittance_;
  }

  inline
  Construction::Transmittance_sequence& Construction::
  Transmittance ()
  {
    return this->Transmittance_;
  }

  inline
  void Construction::
  Transmittance (const Transmittance_sequence& s)
  {
    this->Transmittance_ = s;
  }

  inline
  const Construction::Emittance_sequence& Construction::
  Emittance () const
  {
    return this->Emittance_;
  }

  inline
  Construction::Emittance_sequence& Construction::
  Emittance ()
  {
    return this->Emittance_;
  }

  inline
  void Construction::
  Emittance (const Emittance_sequence& s)
  {
    this->Emittance_ = s;
  }

  inline
  const Construction::Cost_sequence& Construction::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  Construction::Cost_sequence& Construction::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void Construction::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const Construction::PercentExisting_sequence& Construction::
  PercentExisting () const
  {
    return this->PercentExisting_;
  }

  inline
  Construction::PercentExisting_sequence& Construction::
  PercentExisting ()
  {
    return this->PercentExisting_;
  }

  inline
  void Construction::
  PercentExisting (const PercentExisting_sequence& s)
  {
    this->PercentExisting_ = s;
  }

  inline
  const Construction::FireFace_sequence& Construction::
  FireFace () const
  {
    return this->FireFace_;
  }

  inline
  Construction::FireFace_sequence& Construction::
  FireFace ()
  {
    return this->FireFace_;
  }

  inline
  void Construction::
  FireFace (const FireFace_sequence& s)
  {
    this->FireFace_ = s;
  }

  inline
  const Construction::LayerId_sequence& Construction::
  LayerId () const
  {
    return this->LayerId_;
  }

  inline
  Construction::LayerId_sequence& Construction::
  LayerId ()
  {
    return this->LayerId_;
  }

  inline
  void Construction::
  LayerId (const LayerId_sequence& s)
  {
    this->LayerId_ = s;
  }

  inline
  const Construction::ExtEquipId_sequence& Construction::
  ExtEquipId () const
  {
    return this->ExtEquipId_;
  }

  inline
  Construction::ExtEquipId_sequence& Construction::
  ExtEquipId ()
  {
    return this->ExtEquipId_;
  }

  inline
  void Construction::
  ExtEquipId (const ExtEquipId_sequence& s)
  {
    this->ExtEquipId_ = s;
  }

  inline
  const Construction::LoadCalcInputParameters_sequence& Construction::
  LoadCalcInputParameters () const
  {
    return this->LoadCalcInputParameters_;
  }

  inline
  Construction::LoadCalcInputParameters_sequence& Construction::
  LoadCalcInputParameters ()
  {
    return this->LoadCalcInputParameters_;
  }

  inline
  void Construction::
  LoadCalcInputParameters (const LoadCalcInputParameters_sequence& s)
  {
    this->LoadCalcInputParameters_ = s;
  }

  inline
  const Construction::id_type& Construction::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Construction::id_type& Construction::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Construction::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Construction::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Construction::DOELibIdRef_optional& Construction::
  DOELibIdRef () const
  {
    return this->DOELibIdRef_;
  }

  inline
  Construction::DOELibIdRef_optional& Construction::
  DOELibIdRef ()
  {
    return this->DOELibIdRef_;
  }

  inline
  void Construction::
  DOELibIdRef (const DOELibIdRef_type& x)
  {
    this->DOELibIdRef_.set (x);
  }

  inline
  void Construction::
  DOELibIdRef (const DOELibIdRef_optional& x)
  {
    this->DOELibIdRef_ = x;
  }

  inline
  void Construction::
  DOELibIdRef (::std::auto_ptr< DOELibIdRef_type > x)
  {
    this->DOELibIdRef_.set (x);
  }

  inline
  const Construction::programId_optional& Construction::
  programId () const
  {
    return this->programId_;
  }

  inline
  Construction::programId_optional& Construction::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Construction::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Construction::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Construction::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // Control
  // 

  inline
  const Control::controlType_optional& Control::
  controlType () const
  {
    return this->controlType_;
  }

  inline
  Control::controlType_optional& Control::
  controlType ()
  {
    return this->controlType_;
  }

  inline
  void Control::
  controlType (const controlType_type& x)
  {
    this->controlType_.set (x);
  }

  inline
  void Control::
  controlType (const controlType_optional& x)
  {
    this->controlType_ = x;
  }

  inline
  void Control::
  controlType (::std::auto_ptr< controlType_type > x)
  {
    this->controlType_.set (x);
  }

  inline
  const Control::stages_optional& Control::
  stages () const
  {
    return this->stages_;
  }

  inline
  Control::stages_optional& Control::
  stages ()
  {
    return this->stages_;
  }

  inline
  void Control::
  stages (const stages_type& x)
  {
    this->stages_.set (x);
  }

  inline
  void Control::
  stages (const stages_optional& x)
  {
    this->stages_ = x;
  }

  inline
  void Control::
  stages (::std::auto_ptr< stages_type > x)
  {
    this->stages_.set (x);
  }

  inline
  const Control::minPowerRatio_optional& Control::
  minPowerRatio () const
  {
    return this->minPowerRatio_;
  }

  inline
  Control::minPowerRatio_optional& Control::
  minPowerRatio ()
  {
    return this->minPowerRatio_;
  }

  inline
  void Control::
  minPowerRatio (const minPowerRatio_type& x)
  {
    this->minPowerRatio_.set (x);
  }

  inline
  void Control::
  minPowerRatio (const minPowerRatio_optional& x)
  {
    this->minPowerRatio_ = x;
  }

  inline
  const Control::operationType_optional& Control::
  operationType () const
  {
    return this->operationType_;
  }

  inline
  Control::operationType_optional& Control::
  operationType ()
  {
    return this->operationType_;
  }

  inline
  void Control::
  operationType (const operationType_type& x)
  {
    this->operationType_.set (x);
  }

  inline
  void Control::
  operationType (const operationType_optional& x)
  {
    this->operationType_ = x;
  }

  inline
  void Control::
  operationType (::std::auto_ptr< operationType_type > x)
  {
    this->operationType_.set (x);
  }

  inline
  const Control::performanceIdRef_optional& Control::
  performanceIdRef () const
  {
    return this->performanceIdRef_;
  }

  inline
  Control::performanceIdRef_optional& Control::
  performanceIdRef ()
  {
    return this->performanceIdRef_;
  }

  inline
  void Control::
  performanceIdRef (const performanceIdRef_type& x)
  {
    this->performanceIdRef_.set (x);
  }

  inline
  void Control::
  performanceIdRef (const performanceIdRef_optional& x)
  {
    this->performanceIdRef_ = x;
  }

  inline
  void Control::
  performanceIdRef (::std::auto_ptr< performanceIdRef_type > x)
  {
    this->performanceIdRef_.set (x);
  }


  // Coordinate
  // 


  // Cost
  // 

  inline
  const Cost::CostValue_sequence& Cost::
  CostValue () const
  {
    return this->CostValue_;
  }

  inline
  Cost::CostValue_sequence& Cost::
  CostValue ()
  {
    return this->CostValue_;
  }

  inline
  void Cost::
  CostValue (const CostValue_sequence& s)
  {
    this->CostValue_ = s;
  }

  inline
  const Cost::Reference_sequence& Cost::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  Cost::Reference_sequence& Cost::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void Cost::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const Cost::costType_type& Cost::
  costType () const
  {
    return this->costType_.get ();
  }

  inline
  Cost::costType_type& Cost::
  costType ()
  {
    return this->costType_.get ();
  }

  inline
  void Cost::
  costType (const costType_type& x)
  {
    this->costType_.set (x);
  }

  inline
  void Cost::
  costType (::std::auto_ptr< costType_type > x)
  {
    this->costType_.set (x);
  }


  // CostValue
  // 

  inline
  const CostValue::currency_optional& CostValue::
  currency () const
  {
    return this->currency_;
  }

  inline
  CostValue::currency_optional& CostValue::
  currency ()
  {
    return this->currency_;
  }

  inline
  void CostValue::
  currency (const currency_type& x)
  {
    this->currency_.set (x);
  }

  inline
  void CostValue::
  currency (const currency_optional& x)
  {
    this->currency_ = x;
  }

  inline
  void CostValue::
  currency (::std::auto_ptr< currency_type > x)
  {
    this->currency_.set (x);
  }

  inline
  const CostValue::unit_optional& CostValue::
  unit () const
  {
    return this->unit_;
  }

  inline
  CostValue::unit_optional& CostValue::
  unit ()
  {
    return this->unit_;
  }

  inline
  void CostValue::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void CostValue::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void CostValue::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // CreatedBy
  // 

  inline
  const CreatedBy::CADModelId_sequence& CreatedBy::
  CADModelId () const
  {
    return this->CADModelId_;
  }

  inline
  CreatedBy::CADModelId_sequence& CreatedBy::
  CADModelId ()
  {
    return this->CADModelId_;
  }

  inline
  void CreatedBy::
  CADModelId (const CADModelId_sequence& s)
  {
    this->CADModelId_ = s;
  }

  inline
  const CreatedBy::personId_type& CreatedBy::
  personId () const
  {
    return this->personId_.get ();
  }

  inline
  CreatedBy::personId_type& CreatedBy::
  personId ()
  {
    return this->personId_.get ();
  }

  inline
  void CreatedBy::
  personId (const personId_type& x)
  {
    this->personId_.set (x);
  }

  inline
  void CreatedBy::
  personId (::std::auto_ptr< personId_type > x)
  {
    this->personId_.set (x);
  }

  inline
  const CreatedBy::programId_type& CreatedBy::
  programId () const
  {
    return this->programId_.get ();
  }

  inline
  CreatedBy::programId_type& CreatedBy::
  programId ()
  {
    return this->programId_.get ();
  }

  inline
  void CreatedBy::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void CreatedBy::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }

  inline
  const CreatedBy::date_type& CreatedBy::
  date () const
  {
    return this->date_.get ();
  }

  inline
  CreatedBy::date_type& CreatedBy::
  date ()
  {
    return this->date_.get ();
  }

  inline
  void CreatedBy::
  date (const date_type& x)
  {
    this->date_.set (x);
  }

  inline
  void CreatedBy::
  date (::std::auto_ptr< date_type > x)
  {
    this->date_.set (x);
  }


  // Data
  // 

  inline
  const Data::IndependentValue_sequence& Data::
  IndependentValue () const
  {
    return this->IndependentValue_;
  }

  inline
  Data::IndependentValue_sequence& Data::
  IndependentValue ()
  {
    return this->IndependentValue_;
  }

  inline
  void Data::
  IndependentValue (const IndependentValue_sequence& s)
  {
    this->IndependentValue_ = s;
  }

  inline
  const Data::DependentValue_sequence& Data::
  DependentValue () const
  {
    return this->DependentValue_;
  }

  inline
  Data::DependentValue_sequence& Data::
  DependentValue ()
  {
    return this->DependentValue_;
  }

  inline
  void Data::
  DependentValue (const DependentValue_sequence& s)
  {
    this->DependentValue_ = s;
  }


  // Day
  // 

  inline
  const Day::dayScheduleIdRef_type& Day::
  dayScheduleIdRef () const
  {
    return this->dayScheduleIdRef_.get ();
  }

  inline
  Day::dayScheduleIdRef_type& Day::
  dayScheduleIdRef ()
  {
    return this->dayScheduleIdRef_.get ();
  }

  inline
  void Day::
  dayScheduleIdRef (const dayScheduleIdRef_type& x)
  {
    this->dayScheduleIdRef_.set (x);
  }

  inline
  void Day::
  dayScheduleIdRef (::std::auto_ptr< dayScheduleIdRef_type > x)
  {
    this->dayScheduleIdRef_.set (x);
  }

  inline
  const Day::dayType_type& Day::
  dayType () const
  {
    return this->dayType_.get ();
  }

  inline
  Day::dayType_type& Day::
  dayType ()
  {
    return this->dayType_.get ();
  }

  inline
  void Day::
  dayType (const dayType_type& x)
  {
    this->dayType_.set (x);
  }

  inline
  void Day::
  dayType (::std::auto_ptr< dayType_type > x)
  {
    this->dayType_.set (x);
  }


  // DaySchedule
  // 

  inline
  const DaySchedule::Name_sequence& DaySchedule::
  Name () const
  {
    return this->Name_;
  }

  inline
  DaySchedule::Name_sequence& DaySchedule::
  Name ()
  {
    return this->Name_;
  }

  inline
  void DaySchedule::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const DaySchedule::Description_sequence& DaySchedule::
  Description () const
  {
    return this->Description_;
  }

  inline
  DaySchedule::Description_sequence& DaySchedule::
  Description ()
  {
    return this->Description_;
  }

  inline
  void DaySchedule::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const DaySchedule::ScheduleValue_sequence& DaySchedule::
  ScheduleValue () const
  {
    return this->ScheduleValue_;
  }

  inline
  DaySchedule::ScheduleValue_sequence& DaySchedule::
  ScheduleValue ()
  {
    return this->ScheduleValue_;
  }

  inline
  void DaySchedule::
  ScheduleValue (const ScheduleValue_sequence& s)
  {
    this->ScheduleValue_ = s;
  }

  inline
  const DaySchedule::id_type& DaySchedule::
  id () const
  {
    return this->id_.get ();
  }

  inline
  DaySchedule::id_type& DaySchedule::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void DaySchedule::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void DaySchedule::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const DaySchedule::type_type& DaySchedule::
  type () const
  {
    return this->type_.get ();
  }

  inline
  DaySchedule::type_type& DaySchedule::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void DaySchedule::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void DaySchedule::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }


  // DDDBCool
  // 

  inline
  const DDDBCool::unit_optional& DDDBCool::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDDBCool::unit_optional& DDDBCool::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDDBCool::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDDBCool::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDDBCool::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDDBHeat
  // 

  inline
  const DDDBHeat::unit_optional& DDDBHeat::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDDBHeat::unit_optional& DDDBHeat::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDDBHeat::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDDBHeat::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDDBHeat::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDDBRangeCool
  // 

  inline
  const DDDBRangeCool::unit_optional& DDDBRangeCool::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDDBRangeCool::unit_optional& DDDBRangeCool::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDDBRangeCool::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDDBRangeCool::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDDBRangeCool::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDDBRangeHeat
  // 

  inline
  const DDDBRangeHeat::unit_optional& DDDBRangeHeat::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDDBRangeHeat::unit_optional& DDDBRangeHeat::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDDBRangeHeat::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDDBRangeHeat::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDDBRangeHeat::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDGroundTCool
  // 

  inline
  const DDGroundTCool::unit_optional& DDGroundTCool::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDGroundTCool::unit_optional& DDGroundTCool::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDGroundTCool::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDGroundTCool::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDGroundTCool::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDGroundTHeat
  // 

  inline
  const DDGroundTHeat::unit_optional& DDGroundTHeat::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDGroundTHeat::unit_optional& DDGroundTHeat::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDGroundTHeat::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDGroundTHeat::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDGroundTHeat::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDPressureCool
  // 

  inline
  const DDPressureCool::unit_optional& DDPressureCool::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDPressureCool::unit_optional& DDPressureCool::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDPressureCool::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDPressureCool::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDPressureCool::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDPressureHeat
  // 

  inline
  const DDPressureHeat::unit_optional& DDPressureHeat::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDPressureHeat::unit_optional& DDPressureHeat::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDPressureHeat::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDPressureHeat::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDPressureHeat::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDSkyClearnessCool
  // 

  inline
  const DDSkyClearnessCool::unit_type& DDSkyClearnessCool::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  DDSkyClearnessCool::unit_type& DDSkyClearnessCool::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void DDSkyClearnessCool::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDSkyClearnessCool::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDSkyClearnessHeat
  // 

  inline
  const DDSkyClearnessHeat::unit_type& DDSkyClearnessHeat::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  DDSkyClearnessHeat::unit_type& DDSkyClearnessHeat::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void DDSkyClearnessHeat::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDSkyClearnessHeat::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDWBCool
  // 

  inline
  const DDWBCool::unit_optional& DDWBCool::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDWBCool::unit_optional& DDWBCool::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDWBCool::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDWBCool::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDWBCool::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDWBHeat
  // 

  inline
  const DDWBHeat::unit_optional& DDWBHeat::
  unit () const
  {
    return this->unit_;
  }

  inline
  DDWBHeat::unit_optional& DDWBHeat::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DDWBHeat::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDWBHeat::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DDWBHeat::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDWindDirCool
  // 

  inline
  const DDWindDirCool::unit_type& DDWindDirCool::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  DDWindDirCool::unit_type& DDWindDirCool::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void DDWindDirCool::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDWindDirCool::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDWindDirHeat
  // 

  inline
  const DDWindDirHeat::unit_type& DDWindDirHeat::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  DDWindDirHeat::unit_type& DDWindDirHeat::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void DDWindDirHeat::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDWindDirHeat::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDWindSpeedCool
  // 

  inline
  const DDWindSpeedCool::unit_type& DDWindSpeedCool::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  DDWindSpeedCool::unit_type& DDWindSpeedCool::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void DDWindSpeedCool::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDWindSpeedCool::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DDWindSpeedHeat
  // 

  inline
  const DDWindSpeedHeat::unit_type& DDWindSpeedHeat::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  DDWindSpeedHeat::unit_type& DDWindSpeedHeat::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void DDWindSpeedHeat::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DDWindSpeedHeat::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DeltaP
  // 

  inline
  const DeltaP::unit_type& DeltaP::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  DeltaP::unit_type& DeltaP::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void DeltaP::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DeltaP::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const DeltaP::hydronicLoopType_optional& DeltaP::
  hydronicLoopType () const
  {
    return this->hydronicLoopType_;
  }

  inline
  DeltaP::hydronicLoopType_optional& DeltaP::
  hydronicLoopType ()
  {
    return this->hydronicLoopType_;
  }

  inline
  void DeltaP::
  hydronicLoopType (const hydronicLoopType_type& x)
  {
    this->hydronicLoopType_.set (x);
  }

  inline
  void DeltaP::
  hydronicLoopType (const hydronicLoopType_optional& x)
  {
    this->hydronicLoopType_ = x;
  }

  inline
  void DeltaP::
  hydronicLoopType (::std::auto_ptr< hydronicLoopType_type > x)
  {
    this->hydronicLoopType_.set (x);
  }

  inline
  const DeltaP::hydronicLoopIdRef_optional& DeltaP::
  hydronicLoopIdRef () const
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  DeltaP::hydronicLoopIdRef_optional& DeltaP::
  hydronicLoopIdRef ()
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  void DeltaP::
  hydronicLoopIdRef (const hydronicLoopIdRef_type& x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  void DeltaP::
  hydronicLoopIdRef (const hydronicLoopIdRef_optional& x)
  {
    this->hydronicLoopIdRef_ = x;
  }

  inline
  void DeltaP::
  hydronicLoopIdRef (::std::auto_ptr< hydronicLoopIdRef_type > x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  const DeltaP::conditioningType_optional& DeltaP::
  conditioningType () const
  {
    return this->conditioningType_;
  }

  inline
  DeltaP::conditioningType_optional& DeltaP::
  conditioningType ()
  {
    return this->conditioningType_;
  }

  inline
  void DeltaP::
  conditioningType (const conditioningType_type& x)
  {
    this->conditioningType_.set (x);
  }

  inline
  void DeltaP::
  conditioningType (const conditioningType_optional& x)
  {
    this->conditioningType_ = x;
  }

  inline
  void DeltaP::
  conditioningType (::std::auto_ptr< conditioningType_type > x)
  {
    this->conditioningType_.set (x);
  }

  inline
  const DeltaP::performanceId_optional& DeltaP::
  performanceId () const
  {
    return this->performanceId_;
  }

  inline
  DeltaP::performanceId_optional& DeltaP::
  performanceId ()
  {
    return this->performanceId_;
  }

  inline
  void DeltaP::
  performanceId (const performanceId_type& x)
  {
    this->performanceId_.set (x);
  }

  inline
  void DeltaP::
  performanceId (const performanceId_optional& x)
  {
    this->performanceId_ = x;
  }

  inline
  void DeltaP::
  performanceId (::std::auto_ptr< performanceId_type > x)
  {
    this->performanceId_.set (x);
  }


  // DeltaT
  // 

  inline
  const DeltaT::unit_optional& DeltaT::
  unit () const
  {
    return this->unit_;
  }

  inline
  DeltaT::unit_optional& DeltaT::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DeltaT::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DeltaT::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DeltaT::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const DeltaT::conditioningType_optional& DeltaT::
  conditioningType () const
  {
    return this->conditioningType_;
  }

  inline
  DeltaT::conditioningType_optional& DeltaT::
  conditioningType ()
  {
    return this->conditioningType_;
  }

  inline
  void DeltaT::
  conditioningType (const conditioningType_type& x)
  {
    this->conditioningType_.set (x);
  }

  inline
  void DeltaT::
  conditioningType (const conditioningType_optional& x)
  {
    this->conditioningType_ = x;
  }

  inline
  void DeltaT::
  conditioningType (::std::auto_ptr< conditioningType_type > x)
  {
    this->conditioningType_.set (x);
  }


  // Density
  // 

  inline
  const Density::unit_type& Density::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Density::unit_type& Density::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Density::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Density::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DensityFofT
  // 

  inline
  const DensityFofT::unit_type& DensityFofT::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  DensityFofT::unit_type& DensityFofT::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void DensityFofT::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DensityFofT::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DependentVariable
  // 

  inline
  const DependentVariable::Name_sequence& DependentVariable::
  Name () const
  {
    return this->Name_;
  }

  inline
  DependentVariable::Name_sequence& DependentVariable::
  Name ()
  {
    return this->Name_;
  }

  inline
  void DependentVariable::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const DependentVariable::Description_sequence& DependentVariable::
  Description () const
  {
    return this->Description_;
  }

  inline
  DependentVariable::Description_sequence& DependentVariable::
  Description ()
  {
    return this->Description_;
  }

  inline
  void DependentVariable::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const DependentVariable::unit_type& DependentVariable::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  DependentVariable::unit_type& DependentVariable::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void DependentVariable::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DependentVariable::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const DependentVariable::dataType_type& DependentVariable::
  dataType () const
  {
    return this->dataType_.get ();
  }

  inline
  DependentVariable::dataType_type& DependentVariable::
  dataType ()
  {
    return this->dataType_.get ();
  }

  inline
  void DependentVariable::
  dataType (const dataType_type& x)
  {
    this->dataType_.set (x);
  }

  inline
  void DependentVariable::
  dataType (::std::auto_ptr< dataType_type > x)
  {
    this->dataType_.set (x);
  }

  inline
  const DependentVariable::minValue_optional& DependentVariable::
  minValue () const
  {
    return this->minValue_;
  }

  inline
  DependentVariable::minValue_optional& DependentVariable::
  minValue ()
  {
    return this->minValue_;
  }

  inline
  void DependentVariable::
  minValue (const minValue_type& x)
  {
    this->minValue_.set (x);
  }

  inline
  void DependentVariable::
  minValue (const minValue_optional& x)
  {
    this->minValue_ = x;
  }

  inline
  const DependentVariable::maxValue_optional& DependentVariable::
  maxValue () const
  {
    return this->maxValue_;
  }

  inline
  DependentVariable::maxValue_optional& DependentVariable::
  maxValue ()
  {
    return this->maxValue_;
  }

  inline
  void DependentVariable::
  maxValue (const maxValue_type& x)
  {
    this->maxValue_.set (x);
  }

  inline
  void DependentVariable::
  maxValue (const maxValue_optional& x)
  {
    this->maxValue_ = x;
  }


  // DesignCoolT
  // 

  inline
  const DesignCoolT::unit_optional& DesignCoolT::
  unit () const
  {
    return this->unit_;
  }

  inline
  DesignCoolT::unit_optional& DesignCoolT::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DesignCoolT::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DesignCoolT::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DesignCoolT::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const DesignCoolT::programId_optional& DesignCoolT::
  programId () const
  {
    return this->programId_;
  }

  inline
  DesignCoolT::programId_optional& DesignCoolT::
  programId ()
  {
    return this->programId_;
  }

  inline
  void DesignCoolT::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void DesignCoolT::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void DesignCoolT::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // DesignFlow
  // 

  inline
  const DesignFlow::unit_optional& DesignFlow::
  unit () const
  {
    return this->unit_;
  }

  inline
  DesignFlow::unit_optional& DesignFlow::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DesignFlow::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DesignFlow::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DesignFlow::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DesignHeatT
  // 

  inline
  const DesignHeatT::unit_optional& DesignHeatT::
  unit () const
  {
    return this->unit_;
  }

  inline
  DesignHeatT::unit_optional& DesignHeatT::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DesignHeatT::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DesignHeatT::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DesignHeatT::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const DesignHeatT::programId_optional& DesignHeatT::
  programId () const
  {
    return this->programId_;
  }

  inline
  DesignHeatT::programId_optional& DesignHeatT::
  programId ()
  {
    return this->programId_;
  }

  inline
  void DesignHeatT::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void DesignHeatT::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void DesignHeatT::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // DesignPressure
  // 

  inline
  const DesignPressure::unit_optional& DesignPressure::
  unit () const
  {
    return this->unit_;
  }

  inline
  DesignPressure::unit_optional& DesignPressure::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DesignPressure::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DesignPressure::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DesignPressure::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // DesignTemp
  // 

  inline
  const DesignTemp::unit_optional& DesignTemp::
  unit () const
  {
    return this->unit_;
  }

  inline
  DesignTemp::unit_optional& DesignTemp::
  unit ()
  {
    return this->unit_;
  }

  inline
  void DesignTemp::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void DesignTemp::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void DesignTemp::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Dimensions
  // 

  inline
  const Dimensions::Height_sequence& Dimensions::
  Height () const
  {
    return this->Height_;
  }

  inline
  Dimensions::Height_sequence& Dimensions::
  Height ()
  {
    return this->Height_;
  }

  inline
  void Dimensions::
  Height (const Height_sequence& s)
  {
    this->Height_ = s;
  }

  inline
  const Dimensions::Width_sequence& Dimensions::
  Width () const
  {
    return this->Width_;
  }

  inline
  Dimensions::Width_sequence& Dimensions::
  Width ()
  {
    return this->Width_;
  }

  inline
  void Dimensions::
  Width (const Width_sequence& s)
  {
    this->Width_ = s;
  }

  inline
  const Dimensions::Length_sequence& Dimensions::
  Length () const
  {
    return this->Length_;
  }

  inline
  Dimensions::Length_sequence& Dimensions::
  Length ()
  {
    return this->Length_;
  }

  inline
  void Dimensions::
  Length (const Length_sequence& s)
  {
    this->Length_ = s;
  }


  // DocumentHistory
  // 

  inline
  const DocumentHistory::CreatedBy_sequence& DocumentHistory::
  CreatedBy () const
  {
    return this->CreatedBy_;
  }

  inline
  DocumentHistory::CreatedBy_sequence& DocumentHistory::
  CreatedBy ()
  {
    return this->CreatedBy_;
  }

  inline
  void DocumentHistory::
  CreatedBy (const CreatedBy_sequence& s)
  {
    this->CreatedBy_ = s;
  }

  inline
  const DocumentHistory::ProgramInfo_sequence& DocumentHistory::
  ProgramInfo () const
  {
    return this->ProgramInfo_;
  }

  inline
  DocumentHistory::ProgramInfo_sequence& DocumentHistory::
  ProgramInfo ()
  {
    return this->ProgramInfo_;
  }

  inline
  void DocumentHistory::
  ProgramInfo (const ProgramInfo_sequence& s)
  {
    this->ProgramInfo_ = s;
  }

  inline
  const DocumentHistory::PersonInfo_sequence& DocumentHistory::
  PersonInfo () const
  {
    return this->PersonInfo_;
  }

  inline
  DocumentHistory::PersonInfo_sequence& DocumentHistory::
  PersonInfo ()
  {
    return this->PersonInfo_;
  }

  inline
  void DocumentHistory::
  PersonInfo (const PersonInfo_sequence& s)
  {
    this->PersonInfo_ = s;
  }

  inline
  const DocumentHistory::ModifiedBy_sequence& DocumentHistory::
  ModifiedBy () const
  {
    return this->ModifiedBy_;
  }

  inline
  DocumentHistory::ModifiedBy_sequence& DocumentHistory::
  ModifiedBy ()
  {
    return this->ModifiedBy_;
  }

  inline
  void DocumentHistory::
  ModifiedBy (const ModifiedBy_sequence& s)
  {
    this->ModifiedBy_ = s;
  }


  // Efficiency
  // 

  inline
  const Efficiency::standardsType_optional& Efficiency::
  standardsType () const
  {
    return this->standardsType_;
  }

  inline
  Efficiency::standardsType_optional& Efficiency::
  standardsType ()
  {
    return this->standardsType_;
  }

  inline
  void Efficiency::
  standardsType (const standardsType_type& x)
  {
    this->standardsType_.set (x);
  }

  inline
  void Efficiency::
  standardsType (const standardsType_optional& x)
  {
    this->standardsType_ = x;
  }

  inline
  void Efficiency::
  standardsType (::std::auto_ptr< standardsType_type > x)
  {
    this->standardsType_.set (x);
  }

  inline
  const Efficiency::efficiencyType_type& Efficiency::
  efficiencyType () const
  {
    return this->efficiencyType_.get ();
  }

  inline
  Efficiency::efficiencyType_type& Efficiency::
  efficiencyType ()
  {
    return this->efficiencyType_.get ();
  }

  inline
  void Efficiency::
  efficiencyType (const efficiencyType_type& x)
  {
    this->efficiencyType_.set (x);
  }

  inline
  void Efficiency::
  efficiencyType (::std::auto_ptr< efficiencyType_type > x)
  {
    this->efficiencyType_.set (x);
  }

  inline
  const Efficiency::operationType_optional& Efficiency::
  operationType () const
  {
    return this->operationType_;
  }

  inline
  Efficiency::operationType_optional& Efficiency::
  operationType ()
  {
    return this->operationType_;
  }

  inline
  void Efficiency::
  operationType (const operationType_type& x)
  {
    this->operationType_.set (x);
  }

  inline
  void Efficiency::
  operationType (const operationType_optional& x)
  {
    this->operationType_ = x;
  }

  inline
  void Efficiency::
  operationType (::std::auto_ptr< operationType_type > x)
  {
    this->operationType_.set (x);
  }

  inline
  const Efficiency::performanceId_optional& Efficiency::
  performanceId () const
  {
    return this->performanceId_;
  }

  inline
  Efficiency::performanceId_optional& Efficiency::
  performanceId ()
  {
    return this->performanceId_;
  }

  inline
  void Efficiency::
  performanceId (const performanceId_type& x)
  {
    this->performanceId_.set (x);
  }

  inline
  void Efficiency::
  performanceId (const performanceId_optional& x)
  {
    this->performanceId_ = x;
  }

  inline
  void Efficiency::
  performanceId (::std::auto_ptr< performanceId_type > x)
  {
    this->performanceId_.set (x);
  }


  // ElecLoad
  // 

  inline
  const ElecLoad::unit_type& ElecLoad::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  ElecLoad::unit_type& ElecLoad::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void ElecLoad::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void ElecLoad::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Elevation
  // 

  inline
  const Elevation::unit_optional& Elevation::
  unit () const
  {
    return this->unit_;
  }

  inline
  Elevation::unit_optional& Elevation::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Elevation::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Elevation::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Elevation::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // EmissionRate
  // 

  inline
  const EmissionRate::unit_type& EmissionRate::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  EmissionRate::unit_type& EmissionRate::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void EmissionRate::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void EmissionRate::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Emittance
  // 

  inline
  const Emittance::unit_type& Emittance::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Emittance::unit_type& Emittance::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Emittance::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Emittance::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Emittance::type_type& Emittance::
  type () const
  {
    return this->type_.get ();
  }

  inline
  Emittance::type_type& Emittance::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void Emittance::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void Emittance::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }


  // Energy
  // 

  inline
  const Energy::unit_type& Energy::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Energy::unit_type& Energy::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Energy::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Energy::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Energy::valueType_type& Energy::
  valueType () const
  {
    return this->valueType_.get ();
  }

  inline
  Energy::valueType_type& Energy::
  valueType ()
  {
    return this->valueType_.get ();
  }

  inline
  void Energy::
  valueType (const valueType_type& x)
  {
    this->valueType_.set (x);
  }

  inline
  void Energy::
  valueType (::std::auto_ptr< valueType_type > x)
  {
    this->valueType_.set (x);
  }

  inline
  const Energy::timePeriod_type& Energy::
  timePeriod () const
  {
    return this->timePeriod_.get ();
  }

  inline
  Energy::timePeriod_type& Energy::
  timePeriod ()
  {
    return this->timePeriod_.get ();
  }

  inline
  void Energy::
  timePeriod (const timePeriod_type& x)
  {
    this->timePeriod_.set (x);
  }

  inline
  void Energy::
  timePeriod (::std::auto_ptr< timePeriod_type > x)
  {
    this->timePeriod_.set (x);
  }

  inline
  const Energy::resourceType_type& Energy::
  resourceType () const
  {
    return this->resourceType_.get ();
  }

  inline
  Energy::resourceType_type& Energy::
  resourceType ()
  {
    return this->resourceType_.get ();
  }

  inline
  void Energy::
  resourceType (const resourceType_type& x)
  {
    this->resourceType_.set (x);
  }

  inline
  void Energy::
  resourceType (::std::auto_ptr< resourceType_type > x)
  {
    this->resourceType_.set (x);
  }

  inline
  const Energy::meterIdRef_optional& Energy::
  meterIdRef () const
  {
    return this->meterIdRef_;
  }

  inline
  Energy::meterIdRef_optional& Energy::
  meterIdRef ()
  {
    return this->meterIdRef_;
  }

  inline
  void Energy::
  meterIdRef (const meterIdRef_type& x)
  {
    this->meterIdRef_.set (x);
  }

  inline
  void Energy::
  meterIdRef (const meterIdRef_optional& x)
  {
    this->meterIdRef_ = x;
  }

  inline
  void Energy::
  meterIdRef (::std::auto_ptr< meterIdRef_type > x)
  {
    this->meterIdRef_.set (x);
  }


  // Enthalpy
  // 

  inline
  const Enthalpy::unit_type& Enthalpy::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Enthalpy::unit_type& Enthalpy::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Enthalpy::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Enthalpy::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Equation
  // 

  inline
  const Equation::Expression_sequence& Equation::
  Expression () const
  {
    return this->Expression_;
  }

  inline
  Equation::Expression_sequence& Equation::
  Expression ()
  {
    return this->Expression_;
  }

  inline
  void Equation::
  Expression (const Expression_sequence& s)
  {
    this->Expression_ = s;
  }

  inline
  const Equation::IndependentVariable_sequence& Equation::
  IndependentVariable () const
  {
    return this->IndependentVariable_;
  }

  inline
  Equation::IndependentVariable_sequence& Equation::
  IndependentVariable ()
  {
    return this->IndependentVariable_;
  }

  inline
  void Equation::
  IndependentVariable (const IndependentVariable_sequence& s)
  {
    this->IndependentVariable_ = s;
  }

  inline
  const Equation::DependentVariable_sequence& Equation::
  DependentVariable () const
  {
    return this->DependentVariable_;
  }

  inline
  Equation::DependentVariable_sequence& Equation::
  DependentVariable ()
  {
    return this->DependentVariable_;
  }

  inline
  void Equation::
  DependentVariable (const DependentVariable_sequence& s)
  {
    this->DependentVariable_ = s;
  }


  // EquipPowerPerArea
  // 

  inline
  const EquipPowerPerArea::unit_type& EquipPowerPerArea::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  EquipPowerPerArea::unit_type& EquipPowerPerArea::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void EquipPowerPerArea::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void EquipPowerPerArea::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const EquipPowerPerArea::programId_optional& EquipPowerPerArea::
  programId () const
  {
    return this->programId_;
  }

  inline
  EquipPowerPerArea::programId_optional& EquipPowerPerArea::
  programId ()
  {
    return this->programId_;
  }

  inline
  void EquipPowerPerArea::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void EquipPowerPerArea::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void EquipPowerPerArea::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // ExtEquip
  // 

  inline
  const ExtEquip::Name_sequence& ExtEquip::
  Name () const
  {
    return this->Name_;
  }

  inline
  ExtEquip::Name_sequence& ExtEquip::
  Name ()
  {
    return this->Name_;
  }

  inline
  void ExtEquip::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const ExtEquip::Description_sequence& ExtEquip::
  Description () const
  {
    return this->Description_;
  }

  inline
  ExtEquip::Description_sequence& ExtEquip::
  Description ()
  {
    return this->Description_;
  }

  inline
  void ExtEquip::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const ExtEquip::Manufacturer_sequence& ExtEquip::
  Manufacturer () const
  {
    return this->Manufacturer_;
  }

  inline
  ExtEquip::Manufacturer_sequence& ExtEquip::
  Manufacturer ()
  {
    return this->Manufacturer_;
  }

  inline
  void ExtEquip::
  Manufacturer (const Manufacturer_sequence& s)
  {
    this->Manufacturer_ = s;
  }

  inline
  const ExtEquip::Model_sequence& ExtEquip::
  Model () const
  {
    return this->Model_;
  }

  inline
  ExtEquip::Model_sequence& ExtEquip::
  Model ()
  {
    return this->Model_;
  }

  inline
  void ExtEquip::
  Model (const Model_sequence& s)
  {
    this->Model_ = s;
  }

  inline
  const ExtEquip::ElecLoad_sequence& ExtEquip::
  ElecLoad () const
  {
    return this->ElecLoad_;
  }

  inline
  ExtEquip::ElecLoad_sequence& ExtEquip::
  ElecLoad ()
  {
    return this->ElecLoad_;
  }

  inline
  void ExtEquip::
  ElecLoad (const ElecLoad_sequence& s)
  {
    this->ElecLoad_ = s;
  }

  inline
  const ExtEquip::FuelLoad_sequence& ExtEquip::
  FuelLoad () const
  {
    return this->FuelLoad_;
  }

  inline
  ExtEquip::FuelLoad_sequence& ExtEquip::
  FuelLoad ()
  {
    return this->FuelLoad_;
  }

  inline
  void ExtEquip::
  FuelLoad (const FuelLoad_sequence& s)
  {
    this->FuelLoad_ = s;
  }

  inline
  const ExtEquip::LatentLoad_sequence& ExtEquip::
  LatentLoad () const
  {
    return this->LatentLoad_;
  }

  inline
  ExtEquip::LatentLoad_sequence& ExtEquip::
  LatentLoad ()
  {
    return this->LatentLoad_;
  }

  inline
  void ExtEquip::
  LatentLoad (const LatentLoad_sequence& s)
  {
    this->LatentLoad_ = s;
  }

  inline
  const ExtEquip::WindSpeed_sequence& ExtEquip::
  WindSpeed () const
  {
    return this->WindSpeed_;
  }

  inline
  ExtEquip::WindSpeed_sequence& ExtEquip::
  WindSpeed ()
  {
    return this->WindSpeed_;
  }

  inline
  void ExtEquip::
  WindSpeed (const WindSpeed_sequence& s)
  {
    this->WindSpeed_ = s;
  }

  inline
  const ExtEquip::Efficiency_sequence& ExtEquip::
  Efficiency () const
  {
    return this->Efficiency_;
  }

  inline
  ExtEquip::Efficiency_sequence& ExtEquip::
  Efficiency ()
  {
    return this->Efficiency_;
  }

  inline
  void ExtEquip::
  Efficiency (const Efficiency_sequence& s)
  {
    this->Efficiency_ = s;
  }

  inline
  const ExtEquip::Performance_sequence& ExtEquip::
  Performance () const
  {
    return this->Performance_;
  }

  inline
  ExtEquip::Performance_sequence& ExtEquip::
  Performance ()
  {
    return this->Performance_;
  }

  inline
  void ExtEquip::
  Performance (const Performance_sequence& s)
  {
    this->Performance_ = s;
  }

  inline
  const ExtEquip::Cost_sequence& ExtEquip::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  ExtEquip::Cost_sequence& ExtEquip::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void ExtEquip::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const ExtEquip::Weight_sequence& ExtEquip::
  Weight () const
  {
    return this->Weight_;
  }

  inline
  ExtEquip::Weight_sequence& ExtEquip::
  Weight ()
  {
    return this->Weight_;
  }

  inline
  void ExtEquip::
  Weight (const Weight_sequence& s)
  {
    this->Weight_ = s;
  }

  inline
  const ExtEquip::WasteWaterHREff_sequence& ExtEquip::
  WasteWaterHREff () const
  {
    return this->WasteWaterHREff_;
  }

  inline
  ExtEquip::WasteWaterHREff_sequence& ExtEquip::
  WasteWaterHREff ()
  {
    return this->WasteWaterHREff_;
  }

  inline
  void ExtEquip::
  WasteWaterHREff (const WasteWaterHREff_sequence& s)
  {
    this->WasteWaterHREff_ = s;
  }

  inline
  const ExtEquip::WaterUsePerCycle_sequence& ExtEquip::
  WaterUsePerCycle () const
  {
    return this->WaterUsePerCycle_;
  }

  inline
  ExtEquip::WaterUsePerCycle_sequence& ExtEquip::
  WaterUsePerCycle ()
  {
    return this->WaterUsePerCycle_;
  }

  inline
  void ExtEquip::
  WaterUsePerCycle (const WaterUsePerCycle_sequence& s)
  {
    this->WaterUsePerCycle_ = s;
  }

  inline
  const ExtEquip::RatedFlow_sequence& ExtEquip::
  RatedFlow () const
  {
    return this->RatedFlow_;
  }

  inline
  ExtEquip::RatedFlow_sequence& ExtEquip::
  RatedFlow ()
  {
    return this->RatedFlow_;
  }

  inline
  void ExtEquip::
  RatedFlow (const RatedFlow_sequence& s)
  {
    this->RatedFlow_ = s;
  }

  inline
  const ExtEquip::Power_sequence& ExtEquip::
  Power () const
  {
    return this->Power_;
  }

  inline
  ExtEquip::Power_sequence& ExtEquip::
  Power ()
  {
    return this->Power_;
  }

  inline
  void ExtEquip::
  Power (const Power_sequence& s)
  {
    this->Power_ = s;
  }

  inline
  const ExtEquip::CyclesPerWeek_sequence& ExtEquip::
  CyclesPerWeek () const
  {
    return this->CyclesPerWeek_;
  }

  inline
  ExtEquip::CyclesPerWeek_sequence& ExtEquip::
  CyclesPerWeek ()
  {
    return this->CyclesPerWeek_;
  }

  inline
  void ExtEquip::
  CyclesPerWeek (const CyclesPerWeek_sequence& s)
  {
    this->CyclesPerWeek_ = s;
  }

  inline
  const ExtEquip::Energy_sequence& ExtEquip::
  Energy () const
  {
    return this->Energy_;
  }

  inline
  ExtEquip::Energy_sequence& ExtEquip::
  Energy ()
  {
    return this->Energy_;
  }

  inline
  void ExtEquip::
  Energy (const Energy_sequence& s)
  {
    this->Energy_ = s;
  }

  inline
  const ExtEquip::GeneralGeometry_sequence& ExtEquip::
  GeneralGeometry () const
  {
    return this->GeneralGeometry_;
  }

  inline
  ExtEquip::GeneralGeometry_sequence& ExtEquip::
  GeneralGeometry ()
  {
    return this->GeneralGeometry_;
  }

  inline
  void ExtEquip::
  GeneralGeometry (const GeneralGeometry_sequence& s)
  {
    this->GeneralGeometry_ = s;
  }

  inline
  const ExtEquip::ShellGeometry_sequence& ExtEquip::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  ExtEquip::ShellGeometry_sequence& ExtEquip::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void ExtEquip::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const ExtEquip::IndoorAirQuality_sequence& ExtEquip::
  IndoorAirQuality () const
  {
    return this->IndoorAirQuality_;
  }

  inline
  ExtEquip::IndoorAirQuality_sequence& ExtEquip::
  IndoorAirQuality ()
  {
    return this->IndoorAirQuality_;
  }

  inline
  void ExtEquip::
  IndoorAirQuality (const IndoorAirQuality_sequence& s)
  {
    this->IndoorAirQuality_ = s;
  }

  inline
  const ExtEquip::Age_sequence& ExtEquip::
  Age () const
  {
    return this->Age_;
  }

  inline
  ExtEquip::Age_sequence& ExtEquip::
  Age ()
  {
    return this->Age_;
  }

  inline
  void ExtEquip::
  Age (const Age_sequence& s)
  {
    this->Age_ = s;
  }

  inline
  const ExtEquip::Reference_sequence& ExtEquip::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  ExtEquip::Reference_sequence& ExtEquip::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void ExtEquip::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const ExtEquip::CADObjectId_sequence& ExtEquip::
  CADObjectId () const
  {
    return this->CADObjectId_;
  }

  inline
  ExtEquip::CADObjectId_sequence& ExtEquip::
  CADObjectId ()
  {
    return this->CADObjectId_;
  }

  inline
  void ExtEquip::
  CADObjectId (const CADObjectId_sequence& s)
  {
    this->CADObjectId_ = s;
  }

  inline
  const ExtEquip::id_type& ExtEquip::
  id () const
  {
    return this->id_.get ();
  }

  inline
  ExtEquip::id_type& ExtEquip::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void ExtEquip::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void ExtEquip::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const ExtEquip::scheduleIdRef_optional& ExtEquip::
  scheduleIdRef () const
  {
    return this->scheduleIdRef_;
  }

  inline
  ExtEquip::scheduleIdRef_optional& ExtEquip::
  scheduleIdRef ()
  {
    return this->scheduleIdRef_;
  }

  inline
  void ExtEquip::
  scheduleIdRef (const scheduleIdRef_type& x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  void ExtEquip::
  scheduleIdRef (const scheduleIdRef_optional& x)
  {
    this->scheduleIdRef_ = x;
  }

  inline
  void ExtEquip::
  scheduleIdRef (::std::auto_ptr< scheduleIdRef_type > x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  const ExtEquip::waterTempScheduleIdRef_optional& ExtEquip::
  waterTempScheduleIdRef () const
  {
    return this->waterTempScheduleIdRef_;
  }

  inline
  ExtEquip::waterTempScheduleIdRef_optional& ExtEquip::
  waterTempScheduleIdRef ()
  {
    return this->waterTempScheduleIdRef_;
  }

  inline
  void ExtEquip::
  waterTempScheduleIdRef (const waterTempScheduleIdRef_type& x)
  {
    this->waterTempScheduleIdRef_.set (x);
  }

  inline
  void ExtEquip::
  waterTempScheduleIdRef (const waterTempScheduleIdRef_optional& x)
  {
    this->waterTempScheduleIdRef_ = x;
  }

  inline
  void ExtEquip::
  waterTempScheduleIdRef (::std::auto_ptr< waterTempScheduleIdRef_type > x)
  {
    this->waterTempScheduleIdRef_.set (x);
  }

  inline
  const ExtEquip::hydronicLoopIdRef_optional& ExtEquip::
  hydronicLoopIdRef () const
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  ExtEquip::hydronicLoopIdRef_optional& ExtEquip::
  hydronicLoopIdRef ()
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  void ExtEquip::
  hydronicLoopIdRef (const hydronicLoopIdRef_type& x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  void ExtEquip::
  hydronicLoopIdRef (const hydronicLoopIdRef_optional& x)
  {
    this->hydronicLoopIdRef_ = x;
  }

  inline
  void ExtEquip::
  hydronicLoopIdRef (::std::auto_ptr< hydronicLoopIdRef_type > x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  const ExtEquip::waterScheduleIdRef_optional& ExtEquip::
  waterScheduleIdRef () const
  {
    return this->waterScheduleIdRef_;
  }

  inline
  ExtEquip::waterScheduleIdRef_optional& ExtEquip::
  waterScheduleIdRef ()
  {
    return this->waterScheduleIdRef_;
  }

  inline
  void ExtEquip::
  waterScheduleIdRef (const waterScheduleIdRef_type& x)
  {
    this->waterScheduleIdRef_.set (x);
  }

  inline
  void ExtEquip::
  waterScheduleIdRef (const waterScheduleIdRef_optional& x)
  {
    this->waterScheduleIdRef_ = x;
  }

  inline
  void ExtEquip::
  waterScheduleIdRef (::std::auto_ptr< waterScheduleIdRef_type > x)
  {
    this->waterScheduleIdRef_.set (x);
  }

  inline
  const ExtEquip::waterMeterIdRef_optional& ExtEquip::
  waterMeterIdRef () const
  {
    return this->waterMeterIdRef_;
  }

  inline
  ExtEquip::waterMeterIdRef_optional& ExtEquip::
  waterMeterIdRef ()
  {
    return this->waterMeterIdRef_;
  }

  inline
  void ExtEquip::
  waterMeterIdRef (const waterMeterIdRef_type& x)
  {
    this->waterMeterIdRef_.set (x);
  }

  inline
  void ExtEquip::
  waterMeterIdRef (const waterMeterIdRef_optional& x)
  {
    this->waterMeterIdRef_ = x;
  }

  inline
  void ExtEquip::
  waterMeterIdRef (::std::auto_ptr< waterMeterIdRef_type > x)
  {
    this->waterMeterIdRef_.set (x);
  }

  inline
  const ExtEquip::type_type& ExtEquip::
  type () const
  {
    return this->type_.get ();
  }

  inline
  ExtEquip::type_type& ExtEquip::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void ExtEquip::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void ExtEquip::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }

  inline
  const ExtEquip::airLoopIdRef_optional& ExtEquip::
  airLoopIdRef () const
  {
    return this->airLoopIdRef_;
  }

  inline
  ExtEquip::airLoopIdRef_optional& ExtEquip::
  airLoopIdRef ()
  {
    return this->airLoopIdRef_;
  }

  inline
  void ExtEquip::
  airLoopIdRef (const airLoopIdRef_type& x)
  {
    this->airLoopIdRef_.set (x);
  }

  inline
  void ExtEquip::
  airLoopIdRef (const airLoopIdRef_optional& x)
  {
    this->airLoopIdRef_ = x;
  }

  inline
  void ExtEquip::
  airLoopIdRef (::std::auto_ptr< airLoopIdRef_type > x)
  {
    this->airLoopIdRef_.set (x);
  }

  inline
  const ExtEquip::programId_optional& ExtEquip::
  programId () const
  {
    return this->programId_;
  }

  inline
  ExtEquip::programId_optional& ExtEquip::
  programId ()
  {
    return this->programId_;
  }

  inline
  void ExtEquip::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void ExtEquip::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void ExtEquip::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // ExtEquipId
  // 

  inline
  const ExtEquipId::extEquipIdRef_optional& ExtEquipId::
  extEquipIdRef () const
  {
    return this->extEquipIdRef_;
  }

  inline
  ExtEquipId::extEquipIdRef_optional& ExtEquipId::
  extEquipIdRef ()
  {
    return this->extEquipIdRef_;
  }

  inline
  void ExtEquipId::
  extEquipIdRef (const extEquipIdRef_type& x)
  {
    this->extEquipIdRef_.set (x);
  }

  inline
  void ExtEquipId::
  extEquipIdRef (const extEquipIdRef_optional& x)
  {
    this->extEquipIdRef_ = x;
  }

  inline
  void ExtEquipId::
  extEquipIdRef (::std::auto_ptr< extEquipIdRef_type > x)
  {
    this->extEquipIdRef_.set (x);
  }


  // Fire
  // 

  inline
  const Fire::Thickness_optional& Fire::
  Thickness () const
  {
    return this->Thickness_;
  }

  inline
  Fire::Thickness_optional& Fire::
  Thickness ()
  {
    return this->Thickness_;
  }

  inline
  void Fire::
  Thickness (const Thickness_type& x)
  {
    this->Thickness_.set (x);
  }

  inline
  void Fire::
  Thickness (const Thickness_optional& x)
  {
    this->Thickness_ = x;
  }

  inline
  void Fire::
  Thickness (::std::auto_ptr< Thickness_type > x)
  {
    this->Thickness_.set (x);
  }

  inline
  const Fire::Conductivity_optional& Fire::
  Conductivity () const
  {
    return this->Conductivity_;
  }

  inline
  Fire::Conductivity_optional& Fire::
  Conductivity ()
  {
    return this->Conductivity_;
  }

  inline
  void Fire::
  Conductivity (const Conductivity_type& x)
  {
    this->Conductivity_.set (x);
  }

  inline
  void Fire::
  Conductivity (const Conductivity_optional& x)
  {
    this->Conductivity_ = x;
  }

  inline
  void Fire::
  Conductivity (::std::auto_ptr< Conductivity_type > x)
  {
    this->Conductivity_.set (x);
  }

  inline
  const Fire::Density_optional& Fire::
  Density () const
  {
    return this->Density_;
  }

  inline
  Fire::Density_optional& Fire::
  Density ()
  {
    return this->Density_;
  }

  inline
  void Fire::
  Density (const Density_type& x)
  {
    this->Density_.set (x);
  }

  inline
  void Fire::
  Density (const Density_optional& x)
  {
    this->Density_ = x;
  }

  inline
  void Fire::
  Density (::std::auto_ptr< Density_type > x)
  {
    this->Density_.set (x);
  }

  inline
  const Fire::SpecificHeat_optional& Fire::
  SpecificHeat () const
  {
    return this->SpecificHeat_;
  }

  inline
  Fire::SpecificHeat_optional& Fire::
  SpecificHeat ()
  {
    return this->SpecificHeat_;
  }

  inline
  void Fire::
  SpecificHeat (const SpecificHeat_type& x)
  {
    this->SpecificHeat_.set (x);
  }

  inline
  void Fire::
  SpecificHeat (const SpecificHeat_optional& x)
  {
    this->SpecificHeat_ = x;
  }

  inline
  void Fire::
  SpecificHeat (::std::auto_ptr< SpecificHeat_type > x)
  {
    this->SpecificHeat_.set (x);
  }


  // FireFace
  // 

  inline
  const FireFace::Absorptance_sequence& FireFace::
  Absorptance () const
  {
    return this->Absorptance_;
  }

  inline
  FireFace::Absorptance_sequence& FireFace::
  Absorptance ()
  {
    return this->Absorptance_;
  }

  inline
  void FireFace::
  Absorptance (const Absorptance_sequence& s)
  {
    this->Absorptance_ = s;
  }

  inline
  const FireFace::Reflectance_sequence& FireFace::
  Reflectance () const
  {
    return this->Reflectance_;
  }

  inline
  FireFace::Reflectance_sequence& FireFace::
  Reflectance ()
  {
    return this->Reflectance_;
  }

  inline
  void FireFace::
  Reflectance (const Reflectance_sequence& s)
  {
    this->Reflectance_ = s;
  }

  inline
  const FireFace::Emittance_sequence& FireFace::
  Emittance () const
  {
    return this->Emittance_;
  }

  inline
  FireFace::Emittance_sequence& FireFace::
  Emittance ()
  {
    return this->Emittance_;
  }

  inline
  void FireFace::
  Emittance (const Emittance_sequence& s)
  {
    this->Emittance_ = s;
  }


  // FloorSlabHeatLossCoefficient
  // 

  inline
  const FloorSlabHeatLossCoefficient::floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_optional& FloorSlabHeatLossCoefficient::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum () const
  {
    return this->floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_;
  }

  inline
  FloorSlabHeatLossCoefficient::floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_optional& FloorSlabHeatLossCoefficient::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum ()
  {
    return this->floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_;
  }

  inline
  void FloorSlabHeatLossCoefficient::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum (const floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_type& x)
  {
    this->floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_.set (x);
  }

  inline
  void FloorSlabHeatLossCoefficient::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum (const floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_optional& x)
  {
    this->floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_ = x;
  }

  inline
  void FloorSlabHeatLossCoefficient::
  floorSlabPerimeterHeatLossCoefficientUnitTypeEnum (::std::auto_ptr< floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_type > x)
  {
    this->floorSlabPerimeterHeatLossCoefficientUnitTypeEnum_.set (x);
  }


  // Flow
  // 

  inline
  const Flow::unit_type& Flow::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Flow::unit_type& Flow::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Flow::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Flow::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Flow::programId_optional& Flow::
  programId () const
  {
    return this->programId_;
  }

  inline
  Flow::programId_optional& Flow::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Flow::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Flow::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Flow::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // FlowControl
  // 

  inline
  const FlowControl::DesignFlow_sequence& FlowControl::
  DesignFlow () const
  {
    return this->DesignFlow_;
  }

  inline
  FlowControl::DesignFlow_sequence& FlowControl::
  DesignFlow ()
  {
    return this->DesignFlow_;
  }

  inline
  void FlowControl::
  DesignFlow (const DesignFlow_sequence& s)
  {
    this->DesignFlow_ = s;
  }

  inline
  const FlowControl::MinimumFlow_sequence& FlowControl::
  MinimumFlow () const
  {
    return this->MinimumFlow_;
  }

  inline
  FlowControl::MinimumFlow_sequence& FlowControl::
  MinimumFlow ()
  {
    return this->MinimumFlow_;
  }

  inline
  void FlowControl::
  MinimumFlow (const MinimumFlow_sequence& s)
  {
    this->MinimumFlow_ = s;
  }

  inline
  const FlowControl::MaximumFlow_sequence& FlowControl::
  MaximumFlow () const
  {
    return this->MaximumFlow_;
  }

  inline
  FlowControl::MaximumFlow_sequence& FlowControl::
  MaximumFlow ()
  {
    return this->MaximumFlow_;
  }

  inline
  void FlowControl::
  MaximumFlow (const MaximumFlow_sequence& s)
  {
    this->MaximumFlow_ = s;
  }

  inline
  const FlowControl::processScheduleId_optional& FlowControl::
  processScheduleId () const
  {
    return this->processScheduleId_;
  }

  inline
  FlowControl::processScheduleId_optional& FlowControl::
  processScheduleId ()
  {
    return this->processScheduleId_;
  }

  inline
  void FlowControl::
  processScheduleId (const processScheduleId_type& x)
  {
    this->processScheduleId_.set (x);
  }

  inline
  void FlowControl::
  processScheduleId (const processScheduleId_optional& x)
  {
    this->processScheduleId_ = x;
  }

  inline
  void FlowControl::
  processScheduleId (::std::auto_ptr< processScheduleId_type > x)
  {
    this->processScheduleId_.set (x);
  }


  // FlowPerArea
  // 

  inline
  const FlowPerArea::unit_type& FlowPerArea::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  FlowPerArea::unit_type& FlowPerArea::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void FlowPerArea::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void FlowPerArea::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const FlowPerArea::programId_optional& FlowPerArea::
  programId () const
  {
    return this->programId_;
  }

  inline
  FlowPerArea::programId_optional& FlowPerArea::
  programId ()
  {
    return this->programId_;
  }

  inline
  void FlowPerArea::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void FlowPerArea::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void FlowPerArea::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // FlowPerPerson
  // 

  inline
  const FlowPerPerson::unit_type& FlowPerPerson::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  FlowPerPerson::unit_type& FlowPerPerson::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void FlowPerPerson::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void FlowPerPerson::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const FlowPerPerson::programId_optional& FlowPerPerson::
  programId () const
  {
    return this->programId_;
  }

  inline
  FlowPerPerson::programId_optional& FlowPerPerson::
  programId ()
  {
    return this->programId_;
  }

  inline
  void FlowPerPerson::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void FlowPerPerson::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void FlowPerPerson::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // Frame
  // 

  inline
  const Frame::Name_sequence& Frame::
  Name () const
  {
    return this->Name_;
  }

  inline
  Frame::Name_sequence& Frame::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Frame::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Frame::Description_sequence& Frame::
  Description () const
  {
    return this->Description_;
  }

  inline
  Frame::Description_sequence& Frame::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Frame::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Frame::Width_sequence& Frame::
  Width () const
  {
    return this->Width_;
  }

  inline
  Frame::Width_sequence& Frame::
  Width ()
  {
    return this->Width_;
  }

  inline
  void Frame::
  Width (const Width_sequence& s)
  {
    this->Width_ = s;
  }

  inline
  const Frame::id_type& Frame::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Frame::id_type& Frame::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Frame::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Frame::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Frame::type_type& Frame::
  type () const
  {
    return this->type_.get ();
  }

  inline
  Frame::type_type& Frame::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void Frame::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void Frame::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }

  inline
  const Frame::DOELibIdRef_optional& Frame::
  DOELibIdRef () const
  {
    return this->DOELibIdRef_;
  }

  inline
  Frame::DOELibIdRef_optional& Frame::
  DOELibIdRef ()
  {
    return this->DOELibIdRef_;
  }

  inline
  void Frame::
  DOELibIdRef (const DOELibIdRef_type& x)
  {
    this->DOELibIdRef_.set (x);
  }

  inline
  void Frame::
  DOELibIdRef (const DOELibIdRef_optional& x)
  {
    this->DOELibIdRef_ = x;
  }

  inline
  void Frame::
  DOELibIdRef (::std::auto_ptr< DOELibIdRef_type > x)
  {
    this->DOELibIdRef_.set (x);
  }


  // FuelLoad
  // 

  inline
  const FuelLoad::unit_type& FuelLoad::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  FuelLoad::unit_type& FuelLoad::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void FuelLoad::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void FuelLoad::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Gap
  // 

  inline
  const Gap::Name_sequence& Gap::
  Name () const
  {
    return this->Name_;
  }

  inline
  Gap::Name_sequence& Gap::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Gap::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Gap::Description_sequence& Gap::
  Description () const
  {
    return this->Description_;
  }

  inline
  Gap::Description_sequence& Gap::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Gap::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Gap::Thickness_sequence& Gap::
  Thickness () const
  {
    return this->Thickness_;
  }

  inline
  Gap::Thickness_sequence& Gap::
  Thickness ()
  {
    return this->Thickness_;
  }

  inline
  void Gap::
  Thickness (const Thickness_sequence& s)
  {
    this->Thickness_ = s;
  }

  inline
  const Gap::Density_sequence& Gap::
  Density () const
  {
    return this->Density_;
  }

  inline
  Gap::Density_sequence& Gap::
  Density ()
  {
    return this->Density_;
  }

  inline
  void Gap::
  Density (const Density_sequence& s)
  {
    this->Density_ = s;
  }

  inline
  const Gap::DensityFofT_sequence& Gap::
  DensityFofT () const
  {
    return this->DensityFofT_;
  }

  inline
  Gap::DensityFofT_sequence& Gap::
  DensityFofT ()
  {
    return this->DensityFofT_;
  }

  inline
  void Gap::
  DensityFofT (const DensityFofT_sequence& s)
  {
    this->DensityFofT_ = s;
  }

  inline
  const Gap::Conductivity_sequence& Gap::
  Conductivity () const
  {
    return this->Conductivity_;
  }

  inline
  Gap::Conductivity_sequence& Gap::
  Conductivity ()
  {
    return this->Conductivity_;
  }

  inline
  void Gap::
  Conductivity (const Conductivity_sequence& s)
  {
    this->Conductivity_ = s;
  }

  inline
  const Gap::ConductivityFofT_sequence& Gap::
  ConductivityFofT () const
  {
    return this->ConductivityFofT_;
  }

  inline
  Gap::ConductivityFofT_sequence& Gap::
  ConductivityFofT ()
  {
    return this->ConductivityFofT_;
  }

  inline
  void Gap::
  ConductivityFofT (const ConductivityFofT_sequence& s)
  {
    this->ConductivityFofT_ = s;
  }

  inline
  const Gap::Viscosity_sequence& Gap::
  Viscosity () const
  {
    return this->Viscosity_;
  }

  inline
  Gap::Viscosity_sequence& Gap::
  Viscosity ()
  {
    return this->Viscosity_;
  }

  inline
  void Gap::
  Viscosity (const Viscosity_sequence& s)
  {
    this->Viscosity_ = s;
  }

  inline
  const Gap::ViscosityFofT_sequence& Gap::
  ViscosityFofT () const
  {
    return this->ViscosityFofT_;
  }

  inline
  Gap::ViscosityFofT_sequence& Gap::
  ViscosityFofT ()
  {
    return this->ViscosityFofT_;
  }

  inline
  void Gap::
  ViscosityFofT (const ViscosityFofT_sequence& s)
  {
    this->ViscosityFofT_ = s;
  }

  inline
  const Gap::PrandtlNumber_sequence& Gap::
  PrandtlNumber () const
  {
    return this->PrandtlNumber_;
  }

  inline
  Gap::PrandtlNumber_sequence& Gap::
  PrandtlNumber ()
  {
    return this->PrandtlNumber_;
  }

  inline
  void Gap::
  PrandtlNumber (const PrandtlNumber_sequence& s)
  {
    this->PrandtlNumber_ = s;
  }

  inline
  const Gap::PrandtlNumberFofT_sequence& Gap::
  PrandtlNumberFofT () const
  {
    return this->PrandtlNumberFofT_;
  }

  inline
  Gap::PrandtlNumberFofT_sequence& Gap::
  PrandtlNumberFofT ()
  {
    return this->PrandtlNumberFofT_;
  }

  inline
  void Gap::
  PrandtlNumberFofT (const PrandtlNumberFofT_sequence& s)
  {
    this->PrandtlNumberFofT_ = s;
  }

  inline
  const Gap::id_type& Gap::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Gap::id_type& Gap::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Gap::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Gap::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Gap::gas_type& Gap::
  gas () const
  {
    return this->gas_.get ();
  }

  inline
  Gap::gas_type& Gap::
  gas ()
  {
    return this->gas_.get ();
  }

  inline
  void Gap::
  gas (const gas_type& x)
  {
    this->gas_.set (x);
  }

  inline
  void Gap::
  gas (::std::auto_ptr< gas_type > x)
  {
    this->gas_.set (x);
  }

  inline
  const Gap::DOELibIdRef_optional& Gap::
  DOELibIdRef () const
  {
    return this->DOELibIdRef_;
  }

  inline
  Gap::DOELibIdRef_optional& Gap::
  DOELibIdRef ()
  {
    return this->DOELibIdRef_;
  }

  inline
  void Gap::
  DOELibIdRef (const DOELibIdRef_type& x)
  {
    this->DOELibIdRef_.set (x);
  }

  inline
  void Gap::
  DOELibIdRef (const DOELibIdRef_optional& x)
  {
    this->DOELibIdRef_ = x;
  }

  inline
  void Gap::
  DOELibIdRef (::std::auto_ptr< DOELibIdRef_type > x)
  {
    this->DOELibIdRef_.set (x);
  }


  // GapId
  // 

  inline
  const GapId::gapIdRef_type& GapId::
  gapIdRef () const
  {
    return this->gapIdRef_.get ();
  }

  inline
  GapId::gapIdRef_type& GapId::
  gapIdRef ()
  {
    return this->gapIdRef_.get ();
  }

  inline
  void GapId::
  gapIdRef (const gapIdRef_type& x)
  {
    this->gapIdRef_.set (x);
  }

  inline
  void GapId::
  gapIdRef (::std::auto_ptr< gapIdRef_type > x)
  {
    this->gapIdRef_.set (x);
  }


  // GeneralGeometry
  // 


  // Glare
  // 

  inline
  const Glare::unit_optional& Glare::
  unit () const
  {
    return this->unit_;
  }

  inline
  Glare::unit_optional& Glare::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Glare::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Glare::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Glare::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Glaze
  // 

  inline
  const Glaze::Name_sequence& Glaze::
  Name () const
  {
    return this->Name_;
  }

  inline
  Glaze::Name_sequence& Glaze::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Glaze::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Glaze::Description_sequence& Glaze::
  Description () const
  {
    return this->Description_;
  }

  inline
  Glaze::Description_sequence& Glaze::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Glaze::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Glaze::Transmittance_sequence& Glaze::
  Transmittance () const
  {
    return this->Transmittance_;
  }

  inline
  Glaze::Transmittance_sequence& Glaze::
  Transmittance ()
  {
    return this->Transmittance_;
  }

  inline
  void Glaze::
  Transmittance (const Transmittance_sequence& s)
  {
    this->Transmittance_ = s;
  }

  inline
  const Glaze::Reflectance_sequence& Glaze::
  Reflectance () const
  {
    return this->Reflectance_;
  }

  inline
  Glaze::Reflectance_sequence& Glaze::
  Reflectance ()
  {
    return this->Reflectance_;
  }

  inline
  void Glaze::
  Reflectance (const Reflectance_sequence& s)
  {
    this->Reflectance_ = s;
  }

  inline
  const Glaze::Emittance_sequence& Glaze::
  Emittance () const
  {
    return this->Emittance_;
  }

  inline
  Glaze::Emittance_sequence& Glaze::
  Emittance ()
  {
    return this->Emittance_;
  }

  inline
  void Glaze::
  Emittance (const Emittance_sequence& s)
  {
    this->Emittance_ = s;
  }

  inline
  const Glaze::Thickness_sequence& Glaze::
  Thickness () const
  {
    return this->Thickness_;
  }

  inline
  Glaze::Thickness_sequence& Glaze::
  Thickness ()
  {
    return this->Thickness_;
  }

  inline
  void Glaze::
  Thickness (const Thickness_sequence& s)
  {
    this->Thickness_ = s;
  }

  inline
  const Glaze::Conductivity_sequence& Glaze::
  Conductivity () const
  {
    return this->Conductivity_;
  }

  inline
  Glaze::Conductivity_sequence& Glaze::
  Conductivity ()
  {
    return this->Conductivity_;
  }

  inline
  void Glaze::
  Conductivity (const Conductivity_sequence& s)
  {
    this->Conductivity_ = s;
  }

  inline
  const Glaze::Reference_sequence& Glaze::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  Glaze::Reference_sequence& Glaze::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void Glaze::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const Glaze::id_type& Glaze::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Glaze::id_type& Glaze::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Glaze::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Glaze::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Glaze::DOELibIdRef_optional& Glaze::
  DOELibIdRef () const
  {
    return this->DOELibIdRef_;
  }

  inline
  Glaze::DOELibIdRef_optional& Glaze::
  DOELibIdRef ()
  {
    return this->DOELibIdRef_;
  }

  inline
  void Glaze::
  DOELibIdRef (const DOELibIdRef_type& x)
  {
    this->DOELibIdRef_.set (x);
  }

  inline
  void Glaze::
  DOELibIdRef (const DOELibIdRef_optional& x)
  {
    this->DOELibIdRef_ = x;
  }

  inline
  void Glaze::
  DOELibIdRef (::std::auto_ptr< DOELibIdRef_type > x)
  {
    this->DOELibIdRef_.set (x);
  }


  // GlazeConductivity
  // 

  inline
  const GlazeConductivity::unit_type& GlazeConductivity::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  GlazeConductivity::unit_type& GlazeConductivity::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void GlazeConductivity::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void GlazeConductivity::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // GlazeId
  // 

  inline
  const GlazeId::glazeIdRef_type& GlazeId::
  glazeIdRef () const
  {
    return this->glazeIdRef_.get ();
  }

  inline
  GlazeId::glazeIdRef_type& GlazeId::
  glazeIdRef ()
  {
    return this->glazeIdRef_.get ();
  }

  inline
  void GlazeId::
  glazeIdRef (const glazeIdRef_type& x)
  {
    this->glazeIdRef_.set (x);
  }

  inline
  void GlazeId::
  glazeIdRef (::std::auto_ptr< glazeIdRef_type > x)
  {
    this->glazeIdRef_.set (x);
  }


  // GroundTemp
  // 

  inline
  const GroundTemp::unit_optional& GroundTemp::
  unit () const
  {
    return this->unit_;
  }

  inline
  GroundTemp::unit_optional& GroundTemp::
  unit ()
  {
    return this->unit_;
  }

  inline
  void GroundTemp::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void GroundTemp::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void GroundTemp::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // GUID
  // 

  inline
  const GUID::entity_type& GUID::
  entity () const
  {
    return this->entity_.get ();
  }

  inline
  GUID::entity_type& GUID::
  entity ()
  {
    return this->entity_.get ();
  }

  inline
  void GUID::
  entity (const entity_type& x)
  {
    this->entity_.set (x);
  }

  inline
  void GUID::
  entity (::std::auto_ptr< entity_type > x)
  {
    this->entity_.set (x);
  }


  // HDD
  // 

  inline
  const HDD::Temperature_sequence& HDD::
  Temperature () const
  {
    return this->Temperature_;
  }

  inline
  HDD::Temperature_sequence& HDD::
  Temperature ()
  {
    return this->Temperature_;
  }

  inline
  void HDD::
  Temperature (const Temperature_sequence& s)
  {
    this->Temperature_ = s;
  }

  inline
  const HDD::HDDValue_sequence& HDD::
  HDDValue () const
  {
    return this->HDDValue_;
  }

  inline
  HDD::HDDValue_sequence& HDD::
  HDDValue ()
  {
    return this->HDDValue_;
  }

  inline
  void HDD::
  HDDValue (const HDDValue_sequence& s)
  {
    this->HDDValue_ = s;
  }


  // Height
  // 

  inline
  const Height::unit_optional& Height::
  unit () const
  {
    return this->unit_;
  }

  inline
  Height::unit_optional& Height::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Height::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Height::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Height::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // HighLimit
  // 

  inline
  const HighLimit::unit_type& HighLimit::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  HighLimit::unit_type& HighLimit::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void HighLimit::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void HighLimit::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // HighValue
  // 

  inline
  const HighValue::unit_type& HighValue::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  HighValue::unit_type& HighValue::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void HighValue::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void HighValue::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // HorizontalSolar
  // 

  inline
  const HorizontalSolar::unit_type& HorizontalSolar::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  HorizontalSolar::unit_type& HorizontalSolar::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void HorizontalSolar::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void HorizontalSolar::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // HOutside
  // 

  inline
  const HOutside::hOutsideUnitTypeEnum_optional& HOutside::
  hOutsideUnitTypeEnum () const
  {
    return this->hOutsideUnitTypeEnum_;
  }

  inline
  HOutside::hOutsideUnitTypeEnum_optional& HOutside::
  hOutsideUnitTypeEnum ()
  {
    return this->hOutsideUnitTypeEnum_;
  }

  inline
  void HOutside::
  hOutsideUnitTypeEnum (const hOutsideUnitTypeEnum_type& x)
  {
    this->hOutsideUnitTypeEnum_.set (x);
  }

  inline
  void HOutside::
  hOutsideUnitTypeEnum (const hOutsideUnitTypeEnum_optional& x)
  {
    this->hOutsideUnitTypeEnum_ = x;
  }

  inline
  void HOutside::
  hOutsideUnitTypeEnum (::std::auto_ptr< hOutsideUnitTypeEnum_type > x)
  {
    this->hOutsideUnitTypeEnum_.set (x);
  }


  // HydronicLoop
  // 

  inline
  const HydronicLoop::Name_sequence& HydronicLoop::
  Name () const
  {
    return this->Name_;
  }

  inline
  HydronicLoop::Name_sequence& HydronicLoop::
  Name ()
  {
    return this->Name_;
  }

  inline
  void HydronicLoop::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const HydronicLoop::Description_sequence& HydronicLoop::
  Description () const
  {
    return this->Description_;
  }

  inline
  HydronicLoop::Description_sequence& HydronicLoop::
  Description ()
  {
    return this->Description_;
  }

  inline
  void HydronicLoop::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const HydronicLoop::Cost_sequence& HydronicLoop::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  HydronicLoop::Cost_sequence& HydronicLoop::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void HydronicLoop::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const HydronicLoop::Reference_sequence& HydronicLoop::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  HydronicLoop::Reference_sequence& HydronicLoop::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void HydronicLoop::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const HydronicLoop::HydronicLoopEquipment_sequence& HydronicLoop::
  HydronicLoopEquipment () const
  {
    return this->HydronicLoopEquipment_;
  }

  inline
  HydronicLoop::HydronicLoopEquipment_sequence& HydronicLoop::
  HydronicLoopEquipment ()
  {
    return this->HydronicLoopEquipment_;
  }

  inline
  void HydronicLoop::
  HydronicLoopEquipment (const HydronicLoopEquipment_sequence& s)
  {
    this->HydronicLoopEquipment_ = s;
  }

  inline
  const HydronicLoop::FlowControl_sequence& HydronicLoop::
  FlowControl () const
  {
    return this->FlowControl_;
  }

  inline
  HydronicLoop::FlowControl_sequence& HydronicLoop::
  FlowControl ()
  {
    return this->FlowControl_;
  }

  inline
  void HydronicLoop::
  FlowControl (const FlowControl_sequence& s)
  {
    this->FlowControl_ = s;
  }

  inline
  const HydronicLoop::TemperatureControl_sequence& HydronicLoop::
  TemperatureControl () const
  {
    return this->TemperatureControl_;
  }

  inline
  HydronicLoop::TemperatureControl_sequence& HydronicLoop::
  TemperatureControl ()
  {
    return this->TemperatureControl_;
  }

  inline
  void HydronicLoop::
  TemperatureControl (const TemperatureControl_sequence& s)
  {
    this->TemperatureControl_ = s;
  }

  inline
  const HydronicLoop::loopType_type& HydronicLoop::
  loopType () const
  {
    return this->loopType_.get ();
  }

  inline
  HydronicLoop::loopType_type& HydronicLoop::
  loopType ()
  {
    return this->loopType_.get ();
  }

  inline
  void HydronicLoop::
  loopType (const loopType_type& x)
  {
    this->loopType_.set (x);
  }

  inline
  void HydronicLoop::
  loopType (::std::auto_ptr< loopType_type > x)
  {
    this->loopType_.set (x);
  }

  inline
  const HydronicLoop::controlZoneIdRef_optional& HydronicLoop::
  controlZoneIdRef () const
  {
    return this->controlZoneIdRef_;
  }

  inline
  HydronicLoop::controlZoneIdRef_optional& HydronicLoop::
  controlZoneIdRef ()
  {
    return this->controlZoneIdRef_;
  }

  inline
  void HydronicLoop::
  controlZoneIdRef (const controlZoneIdRef_type& x)
  {
    this->controlZoneIdRef_.set (x);
  }

  inline
  void HydronicLoop::
  controlZoneIdRef (const controlZoneIdRef_optional& x)
  {
    this->controlZoneIdRef_ = x;
  }

  inline
  void HydronicLoop::
  controlZoneIdRef (::std::auto_ptr< controlZoneIdRef_type > x)
  {
    this->controlZoneIdRef_.set (x);
  }

  inline
  const HydronicLoop::primaryLoopId_optional& HydronicLoop::
  primaryLoopId () const
  {
    return this->primaryLoopId_;
  }

  inline
  HydronicLoop::primaryLoopId_optional& HydronicLoop::
  primaryLoopId ()
  {
    return this->primaryLoopId_;
  }

  inline
  void HydronicLoop::
  primaryLoopId (const primaryLoopId_type& x)
  {
    this->primaryLoopId_.set (x);
  }

  inline
  void HydronicLoop::
  primaryLoopId (const primaryLoopId_optional& x)
  {
    this->primaryLoopId_ = x;
  }

  inline
  void HydronicLoop::
  primaryLoopId (::std::auto_ptr< primaryLoopId_type > x)
  {
    this->primaryLoopId_.set (x);
  }

  inline
  const HydronicLoop::fluidType_type& HydronicLoop::
  fluidType () const
  {
    return this->fluidType_.get ();
  }

  inline
  HydronicLoop::fluidType_type& HydronicLoop::
  fluidType ()
  {
    return this->fluidType_.get ();
  }

  inline
  void HydronicLoop::
  fluidType (const fluidType_type& x)
  {
    this->fluidType_.set (x);
  }

  inline
  void HydronicLoop::
  fluidType (::std::auto_ptr< fluidType_type > x)
  {
    this->fluidType_.set (x);
  }

  inline
  const HydronicLoop::id_type& HydronicLoop::
  id () const
  {
    return this->id_.get ();
  }

  inline
  HydronicLoop::id_type& HydronicLoop::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void HydronicLoop::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void HydronicLoop::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const HydronicLoop::programId_optional& HydronicLoop::
  programId () const
  {
    return this->programId_;
  }

  inline
  HydronicLoop::programId_optional& HydronicLoop::
  programId ()
  {
    return this->programId_;
  }

  inline
  void HydronicLoop::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void HydronicLoop::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void HydronicLoop::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // HydronicLoopEquipment
  // 

  inline
  const HydronicLoopEquipment::Name_sequence& HydronicLoopEquipment::
  Name () const
  {
    return this->Name_;
  }

  inline
  HydronicLoopEquipment::Name_sequence& HydronicLoopEquipment::
  Name ()
  {
    return this->Name_;
  }

  inline
  void HydronicLoopEquipment::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const HydronicLoopEquipment::Description_sequence& HydronicLoopEquipment::
  Description () const
  {
    return this->Description_;
  }

  inline
  HydronicLoopEquipment::Description_sequence& HydronicLoopEquipment::
  Description ()
  {
    return this->Description_;
  }

  inline
  void HydronicLoopEquipment::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const HydronicLoopEquipment::Manufacturer_sequence& HydronicLoopEquipment::
  Manufacturer () const
  {
    return this->Manufacturer_;
  }

  inline
  HydronicLoopEquipment::Manufacturer_sequence& HydronicLoopEquipment::
  Manufacturer ()
  {
    return this->Manufacturer_;
  }

  inline
  void HydronicLoopEquipment::
  Manufacturer (const Manufacturer_sequence& s)
  {
    this->Manufacturer_ = s;
  }

  inline
  const HydronicLoopEquipment::Model_sequence& HydronicLoopEquipment::
  Model () const
  {
    return this->Model_;
  }

  inline
  HydronicLoopEquipment::Model_sequence& HydronicLoopEquipment::
  Model ()
  {
    return this->Model_;
  }

  inline
  void HydronicLoopEquipment::
  Model (const Model_sequence& s)
  {
    this->Model_ = s;
  }

  inline
  const HydronicLoopEquipment::OperationSchedule_sequence& HydronicLoopEquipment::
  OperationSchedule () const
  {
    return this->OperationSchedule_;
  }

  inline
  HydronicLoopEquipment::OperationSchedule_sequence& HydronicLoopEquipment::
  OperationSchedule ()
  {
    return this->OperationSchedule_;
  }

  inline
  void HydronicLoopEquipment::
  OperationSchedule (const OperationSchedule_sequence& s)
  {
    this->OperationSchedule_ = s;
  }

  inline
  const HydronicLoopEquipment::Temp_sequence& HydronicLoopEquipment::
  Temp () const
  {
    return this->Temp_;
  }

  inline
  HydronicLoopEquipment::Temp_sequence& HydronicLoopEquipment::
  Temp ()
  {
    return this->Temp_;
  }

  inline
  void HydronicLoopEquipment::
  Temp (const Temp_sequence& s)
  {
    this->Temp_ = s;
  }

  inline
  const HydronicLoopEquipment::ResetTemperature_sequence& HydronicLoopEquipment::
  ResetTemperature () const
  {
    return this->ResetTemperature_;
  }

  inline
  HydronicLoopEquipment::ResetTemperature_sequence& HydronicLoopEquipment::
  ResetTemperature ()
  {
    return this->ResetTemperature_;
  }

  inline
  void HydronicLoopEquipment::
  ResetTemperature (const ResetTemperature_sequence& s)
  {
    this->ResetTemperature_ = s;
  }

  inline
  const HydronicLoopEquipment::HydronicLoopId_sequence& HydronicLoopEquipment::
  HydronicLoopId () const
  {
    return this->HydronicLoopId_;
  }

  inline
  HydronicLoopEquipment::HydronicLoopId_sequence& HydronicLoopEquipment::
  HydronicLoopId ()
  {
    return this->HydronicLoopId_;
  }

  inline
  void HydronicLoopEquipment::
  HydronicLoopId (const HydronicLoopId_sequence& s)
  {
    this->HydronicLoopId_ = s;
  }

  inline
  const HydronicLoopEquipment::RatedFlow_sequence& HydronicLoopEquipment::
  RatedFlow () const
  {
    return this->RatedFlow_;
  }

  inline
  HydronicLoopEquipment::RatedFlow_sequence& HydronicLoopEquipment::
  RatedFlow ()
  {
    return this->RatedFlow_;
  }

  inline
  void HydronicLoopEquipment::
  RatedFlow (const RatedFlow_sequence& s)
  {
    this->RatedFlow_ = s;
  }

  inline
  const HydronicLoopEquipment::MinFlow_sequence& HydronicLoopEquipment::
  MinFlow () const
  {
    return this->MinFlow_;
  }

  inline
  HydronicLoopEquipment::MinFlow_sequence& HydronicLoopEquipment::
  MinFlow ()
  {
    return this->MinFlow_;
  }

  inline
  void HydronicLoopEquipment::
  MinFlow (const MinFlow_sequence& s)
  {
    this->MinFlow_ = s;
  }

  inline
  const HydronicLoopEquipment::DeltaT_sequence& HydronicLoopEquipment::
  DeltaT () const
  {
    return this->DeltaT_;
  }

  inline
  HydronicLoopEquipment::DeltaT_sequence& HydronicLoopEquipment::
  DeltaT ()
  {
    return this->DeltaT_;
  }

  inline
  void HydronicLoopEquipment::
  DeltaT (const DeltaT_sequence& s)
  {
    this->DeltaT_ = s;
  }

  inline
  const HydronicLoopEquipment::DeltaP_sequence& HydronicLoopEquipment::
  DeltaP () const
  {
    return this->DeltaP_;
  }

  inline
  HydronicLoopEquipment::DeltaP_sequence& HydronicLoopEquipment::
  DeltaP ()
  {
    return this->DeltaP_;
  }

  inline
  void HydronicLoopEquipment::
  DeltaP (const DeltaP_sequence& s)
  {
    this->DeltaP_ = s;
  }

  inline
  const HydronicLoopEquipment::Power_sequence& HydronicLoopEquipment::
  Power () const
  {
    return this->Power_;
  }

  inline
  HydronicLoopEquipment::Power_sequence& HydronicLoopEquipment::
  Power ()
  {
    return this->Power_;
  }

  inline
  void HydronicLoopEquipment::
  Power (const Power_sequence& s)
  {
    this->Power_ = s;
  }

  inline
  const HydronicLoopEquipment::Capacity_sequence& HydronicLoopEquipment::
  Capacity () const
  {
    return this->Capacity_;
  }

  inline
  HydronicLoopEquipment::Capacity_sequence& HydronicLoopEquipment::
  Capacity ()
  {
    return this->Capacity_;
  }

  inline
  void HydronicLoopEquipment::
  Capacity (const Capacity_sequence& s)
  {
    this->Capacity_ = s;
  }

  inline
  const HydronicLoopEquipment::Efficiency_sequence& HydronicLoopEquipment::
  Efficiency () const
  {
    return this->Efficiency_;
  }

  inline
  HydronicLoopEquipment::Efficiency_sequence& HydronicLoopEquipment::
  Efficiency ()
  {
    return this->Efficiency_;
  }

  inline
  void HydronicLoopEquipment::
  Efficiency (const Efficiency_sequence& s)
  {
    this->Efficiency_ = s;
  }

  inline
  const HydronicLoopEquipment::Control_sequence& HydronicLoopEquipment::
  Control () const
  {
    return this->Control_;
  }

  inline
  HydronicLoopEquipment::Control_sequence& HydronicLoopEquipment::
  Control ()
  {
    return this->Control_;
  }

  inline
  void HydronicLoopEquipment::
  Control (const Control_sequence& s)
  {
    this->Control_ = s;
  }

  inline
  const HydronicLoopEquipment::Performance_sequence& HydronicLoopEquipment::
  Performance () const
  {
    return this->Performance_;
  }

  inline
  HydronicLoopEquipment::Performance_sequence& HydronicLoopEquipment::
  Performance ()
  {
    return this->Performance_;
  }

  inline
  void HydronicLoopEquipment::
  Performance (const Performance_sequence& s)
  {
    this->Performance_ = s;
  }

  inline
  const HydronicLoopEquipment::Cost_sequence& HydronicLoopEquipment::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  HydronicLoopEquipment::Cost_sequence& HydronicLoopEquipment::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void HydronicLoopEquipment::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const HydronicLoopEquipment::Weight_sequence& HydronicLoopEquipment::
  Weight () const
  {
    return this->Weight_;
  }

  inline
  HydronicLoopEquipment::Weight_sequence& HydronicLoopEquipment::
  Weight ()
  {
    return this->Weight_;
  }

  inline
  void HydronicLoopEquipment::
  Weight (const Weight_sequence& s)
  {
    this->Weight_ = s;
  }

  inline
  const HydronicLoopEquipment::Life_sequence& HydronicLoopEquipment::
  Life () const
  {
    return this->Life_;
  }

  inline
  HydronicLoopEquipment::Life_sequence& HydronicLoopEquipment::
  Life ()
  {
    return this->Life_;
  }

  inline
  void HydronicLoopEquipment::
  Life (const Life_sequence& s)
  {
    this->Life_ = s;
  }

  inline
  const HydronicLoopEquipment::RefrigerantType_sequence& HydronicLoopEquipment::
  RefrigerantType () const
  {
    return this->RefrigerantType_;
  }

  inline
  HydronicLoopEquipment::RefrigerantType_sequence& HydronicLoopEquipment::
  RefrigerantType ()
  {
    return this->RefrigerantType_;
  }

  inline
  void HydronicLoopEquipment::
  RefrigerantType (const RefrigerantType_sequence& s)
  {
    this->RefrigerantType_ = s;
  }

  inline
  const HydronicLoopEquipment::Energy_sequence& HydronicLoopEquipment::
  Energy () const
  {
    return this->Energy_;
  }

  inline
  HydronicLoopEquipment::Energy_sequence& HydronicLoopEquipment::
  Energy ()
  {
    return this->Energy_;
  }

  inline
  void HydronicLoopEquipment::
  Energy (const Energy_sequence& s)
  {
    this->Energy_ = s;
  }

  inline
  const HydronicLoopEquipment::Age_sequence& HydronicLoopEquipment::
  Age () const
  {
    return this->Age_;
  }

  inline
  HydronicLoopEquipment::Age_sequence& HydronicLoopEquipment::
  Age ()
  {
    return this->Age_;
  }

  inline
  void HydronicLoopEquipment::
  Age (const Age_sequence& s)
  {
    this->Age_ = s;
  }

  inline
  const HydronicLoopEquipment::Reference_sequence& HydronicLoopEquipment::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  HydronicLoopEquipment::Reference_sequence& HydronicLoopEquipment::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void HydronicLoopEquipment::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const HydronicLoopEquipment::CADObjectId_sequence& HydronicLoopEquipment::
  CADObjectId () const
  {
    return this->CADObjectId_;
  }

  inline
  HydronicLoopEquipment::CADObjectId_sequence& HydronicLoopEquipment::
  CADObjectId ()
  {
    return this->CADObjectId_;
  }

  inline
  void HydronicLoopEquipment::
  CADObjectId (const CADObjectId_sequence& s)
  {
    this->CADObjectId_ = s;
  }

  inline
  const HydronicLoopEquipment::GeneralGeometry_sequence& HydronicLoopEquipment::
  GeneralGeometry () const
  {
    return this->GeneralGeometry_;
  }

  inline
  HydronicLoopEquipment::GeneralGeometry_sequence& HydronicLoopEquipment::
  GeneralGeometry ()
  {
    return this->GeneralGeometry_;
  }

  inline
  void HydronicLoopEquipment::
  GeneralGeometry (const GeneralGeometry_sequence& s)
  {
    this->GeneralGeometry_ = s;
  }

  inline
  const HydronicLoopEquipment::ShellGeometry_sequence& HydronicLoopEquipment::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  HydronicLoopEquipment::ShellGeometry_sequence& HydronicLoopEquipment::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void HydronicLoopEquipment::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const HydronicLoopEquipment::id_type& HydronicLoopEquipment::
  id () const
  {
    return this->id_.get ();
  }

  inline
  HydronicLoopEquipment::id_type& HydronicLoopEquipment::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void HydronicLoopEquipment::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void HydronicLoopEquipment::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const HydronicLoopEquipment::equipmentType_type& HydronicLoopEquipment::
  equipmentType () const
  {
    return this->equipmentType_.get ();
  }

  inline
  HydronicLoopEquipment::equipmentType_type& HydronicLoopEquipment::
  equipmentType ()
  {
    return this->equipmentType_.get ();
  }

  inline
  void HydronicLoopEquipment::
  equipmentType (const equipmentType_type& x)
  {
    this->equipmentType_.set (x);
  }

  inline
  void HydronicLoopEquipment::
  equipmentType (::std::auto_ptr< equipmentType_type > x)
  {
    this->equipmentType_.set (x);
  }

  inline
  const HydronicLoopEquipment::waterMeterIdRef_optional& HydronicLoopEquipment::
  waterMeterIdRef () const
  {
    return this->waterMeterIdRef_;
  }

  inline
  HydronicLoopEquipment::waterMeterIdRef_optional& HydronicLoopEquipment::
  waterMeterIdRef ()
  {
    return this->waterMeterIdRef_;
  }

  inline
  void HydronicLoopEquipment::
  waterMeterIdRef (const waterMeterIdRef_type& x)
  {
    this->waterMeterIdRef_.set (x);
  }

  inline
  void HydronicLoopEquipment::
  waterMeterIdRef (const waterMeterIdRef_optional& x)
  {
    this->waterMeterIdRef_ = x;
  }

  inline
  void HydronicLoopEquipment::
  waterMeterIdRef (::std::auto_ptr< waterMeterIdRef_type > x)
  {
    this->waterMeterIdRef_.set (x);
  }

  inline
  const HydronicLoopEquipment::waterScheduleIdRef_optional& HydronicLoopEquipment::
  waterScheduleIdRef () const
  {
    return this->waterScheduleIdRef_;
  }

  inline
  HydronicLoopEquipment::waterScheduleIdRef_optional& HydronicLoopEquipment::
  waterScheduleIdRef ()
  {
    return this->waterScheduleIdRef_;
  }

  inline
  void HydronicLoopEquipment::
  waterScheduleIdRef (const waterScheduleIdRef_type& x)
  {
    this->waterScheduleIdRef_.set (x);
  }

  inline
  void HydronicLoopEquipment::
  waterScheduleIdRef (const waterScheduleIdRef_optional& x)
  {
    this->waterScheduleIdRef_ = x;
  }

  inline
  void HydronicLoopEquipment::
  waterScheduleIdRef (::std::auto_ptr< waterScheduleIdRef_type > x)
  {
    this->waterScheduleIdRef_.set (x);
  }

  inline
  const HydronicLoopEquipment::primaryLoopId_optional& HydronicLoopEquipment::
  primaryLoopId () const
  {
    return this->primaryLoopId_;
  }

  inline
  HydronicLoopEquipment::primaryLoopId_optional& HydronicLoopEquipment::
  primaryLoopId ()
  {
    return this->primaryLoopId_;
  }

  inline
  void HydronicLoopEquipment::
  primaryLoopId (const primaryLoopId_type& x)
  {
    this->primaryLoopId_.set (x);
  }

  inline
  void HydronicLoopEquipment::
  primaryLoopId (const primaryLoopId_optional& x)
  {
    this->primaryLoopId_ = x;
  }

  inline
  void HydronicLoopEquipment::
  primaryLoopId (::std::auto_ptr< primaryLoopId_type > x)
  {
    this->primaryLoopId_.set (x);
  }

  inline
  const HydronicLoopEquipment::programId_optional& HydronicLoopEquipment::
  programId () const
  {
    return this->programId_;
  }

  inline
  HydronicLoopEquipment::programId_optional& HydronicLoopEquipment::
  programId ()
  {
    return this->programId_;
  }

  inline
  void HydronicLoopEquipment::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void HydronicLoopEquipment::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void HydronicLoopEquipment::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // HydronicLoopEquipmentId
  // 

  inline
  const HydronicLoopEquipmentId::hydronicLoopEquipIdRef_type& HydronicLoopEquipmentId::
  hydronicLoopEquipIdRef () const
  {
    return this->hydronicLoopEquipIdRef_.get ();
  }

  inline
  HydronicLoopEquipmentId::hydronicLoopEquipIdRef_type& HydronicLoopEquipmentId::
  hydronicLoopEquipIdRef ()
  {
    return this->hydronicLoopEquipIdRef_.get ();
  }

  inline
  void HydronicLoopEquipmentId::
  hydronicLoopEquipIdRef (const hydronicLoopEquipIdRef_type& x)
  {
    this->hydronicLoopEquipIdRef_.set (x);
  }

  inline
  void HydronicLoopEquipmentId::
  hydronicLoopEquipIdRef (::std::auto_ptr< hydronicLoopEquipIdRef_type > x)
  {
    this->hydronicLoopEquipIdRef_.set (x);
  }


  // HydronicLoopId
  // 

  inline
  const HydronicLoopId::hydronicLoopIdRef_type& HydronicLoopId::
  hydronicLoopIdRef () const
  {
    return this->hydronicLoopIdRef_.get ();
  }

  inline
  HydronicLoopId::hydronicLoopIdRef_type& HydronicLoopId::
  hydronicLoopIdRef ()
  {
    return this->hydronicLoopIdRef_.get ();
  }

  inline
  void HydronicLoopId::
  hydronicLoopIdRef (const hydronicLoopIdRef_type& x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  void HydronicLoopId::
  hydronicLoopIdRef (::std::auto_ptr< hydronicLoopIdRef_type > x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  const HydronicLoopId::hydronicLoopType_type& HydronicLoopId::
  hydronicLoopType () const
  {
    return this->hydronicLoopType_.get ();
  }

  inline
  HydronicLoopId::hydronicLoopType_type& HydronicLoopId::
  hydronicLoopType ()
  {
    return this->hydronicLoopType_.get ();
  }

  inline
  void HydronicLoopId::
  hydronicLoopType (const hydronicLoopType_type& x)
  {
    this->hydronicLoopType_.set (x);
  }

  inline
  void HydronicLoopId::
  hydronicLoopType (::std::auto_ptr< hydronicLoopType_type > x)
  {
    this->hydronicLoopType_.set (x);
  }


  // Illuminance
  // 

  inline
  const Illuminance::unit_type& Illuminance::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Illuminance::unit_type& Illuminance::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Illuminance::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Illuminance::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // ImageTexture
  // 

  inline
  const ImageTexture::url_type& ImageTexture::
  url () const
  {
    return this->url_.get ();
  }

  inline
  ImageTexture::url_type& ImageTexture::
  url ()
  {
    return this->url_.get ();
  }

  inline
  void ImageTexture::
  url (const url_type& x)
  {
    this->url_.set (x);
  }

  inline
  void ImageTexture::
  url (::std::auto_ptr< url_type > x)
  {
    this->url_.set (x);
  }

  inline
  const ImageTexture::repeatS_type& ImageTexture::
  repeatS () const
  {
    return this->repeatS_.get ();
  }

  inline
  ImageTexture::repeatS_type& ImageTexture::
  repeatS ()
  {
    return this->repeatS_.get ();
  }

  inline
  void ImageTexture::
  repeatS (const repeatS_type& x)
  {
    this->repeatS_.set (x);
  }

  inline
  const ImageTexture::repeatT_type& ImageTexture::
  repeatT () const
  {
    return this->repeatT_.get ();
  }

  inline
  ImageTexture::repeatT_type& ImageTexture::
  repeatT ()
  {
    return this->repeatT_.get ();
  }

  inline
  void ImageTexture::
  repeatT (const repeatT_type& x)
  {
    this->repeatT_.set (x);
  }


  // IndependentVariable
  // 

  inline
  const IndependentVariable::Name_sequence& IndependentVariable::
  Name () const
  {
    return this->Name_;
  }

  inline
  IndependentVariable::Name_sequence& IndependentVariable::
  Name ()
  {
    return this->Name_;
  }

  inline
  void IndependentVariable::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const IndependentVariable::Description_sequence& IndependentVariable::
  Description () const
  {
    return this->Description_;
  }

  inline
  IndependentVariable::Description_sequence& IndependentVariable::
  Description ()
  {
    return this->Description_;
  }

  inline
  void IndependentVariable::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const IndependentVariable::unit_type& IndependentVariable::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  IndependentVariable::unit_type& IndependentVariable::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void IndependentVariable::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void IndependentVariable::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const IndependentVariable::dataType_type& IndependentVariable::
  dataType () const
  {
    return this->dataType_.get ();
  }

  inline
  IndependentVariable::dataType_type& IndependentVariable::
  dataType ()
  {
    return this->dataType_.get ();
  }

  inline
  void IndependentVariable::
  dataType (const dataType_type& x)
  {
    this->dataType_.set (x);
  }

  inline
  void IndependentVariable::
  dataType (::std::auto_ptr< dataType_type > x)
  {
    this->dataType_.set (x);
  }


  // IndoorAirQuality
  // 

  inline
  const IndoorAirQuality::EmissionRate_sequence& IndoorAirQuality::
  EmissionRate () const
  {
    return this->EmissionRate_;
  }

  inline
  IndoorAirQuality::EmissionRate_sequence& IndoorAirQuality::
  EmissionRate ()
  {
    return this->EmissionRate_;
  }

  inline
  void IndoorAirQuality::
  EmissionRate (const EmissionRate_sequence& s)
  {
    this->EmissionRate_ = s;
  }

  inline
  const IndoorAirQuality::SinkRate_sequence& IndoorAirQuality::
  SinkRate () const
  {
    return this->SinkRate_;
  }

  inline
  IndoorAirQuality::SinkRate_sequence& IndoorAirQuality::
  SinkRate ()
  {
    return this->SinkRate_;
  }

  inline
  void IndoorAirQuality::
  SinkRate (const SinkRate_sequence& s)
  {
    this->SinkRate_ = s;
  }

  inline
  const IndoorAirQuality::HighLimit_sequence& IndoorAirQuality::
  HighLimit () const
  {
    return this->HighLimit_;
  }

  inline
  IndoorAirQuality::HighLimit_sequence& IndoorAirQuality::
  HighLimit ()
  {
    return this->HighLimit_;
  }

  inline
  void IndoorAirQuality::
  HighLimit (const HighLimit_sequence& s)
  {
    this->HighLimit_ = s;
  }

  inline
  const IndoorAirQuality::id_type& IndoorAirQuality::
  id () const
  {
    return this->id_.get ();
  }

  inline
  IndoorAirQuality::id_type& IndoorAirQuality::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void IndoorAirQuality::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void IndoorAirQuality::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const IndoorAirQuality::scheduleIdRef_optional& IndoorAirQuality::
  scheduleIdRef () const
  {
    return this->scheduleIdRef_;
  }

  inline
  IndoorAirQuality::scheduleIdRef_optional& IndoorAirQuality::
  scheduleIdRef ()
  {
    return this->scheduleIdRef_;
  }

  inline
  void IndoorAirQuality::
  scheduleIdRef (const scheduleIdRef_type& x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  void IndoorAirQuality::
  scheduleIdRef (const scheduleIdRef_optional& x)
  {
    this->scheduleIdRef_ = x;
  }

  inline
  void IndoorAirQuality::
  scheduleIdRef (::std::auto_ptr< scheduleIdRef_type > x)
  {
    this->scheduleIdRef_.set (x);
  }


  // InfiltrationFlow
  // 

  inline
  const InfiltrationFlow::BlowerDoorValue_sequence& InfiltrationFlow::
  BlowerDoorValue () const
  {
    return this->BlowerDoorValue_;
  }

  inline
  InfiltrationFlow::BlowerDoorValue_sequence& InfiltrationFlow::
  BlowerDoorValue ()
  {
    return this->BlowerDoorValue_;
  }

  inline
  void InfiltrationFlow::
  BlowerDoorValue (const BlowerDoorValue_sequence& s)
  {
    this->BlowerDoorValue_ = s;
  }

  inline
  const InfiltrationFlow::Reference_sequence& InfiltrationFlow::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  InfiltrationFlow::Reference_sequence& InfiltrationFlow::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void InfiltrationFlow::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const InfiltrationFlow::type_optional& InfiltrationFlow::
  type () const
  {
    return this->type_;
  }

  inline
  InfiltrationFlow::type_optional& InfiltrationFlow::
  type ()
  {
    return this->type_;
  }

  inline
  void InfiltrationFlow::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void InfiltrationFlow::
  type (const type_optional& x)
  {
    this->type_ = x;
  }

  inline
  void InfiltrationFlow::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }

  inline
  const InfiltrationFlow::programId_optional& InfiltrationFlow::
  programId () const
  {
    return this->programId_;
  }

  inline
  InfiltrationFlow::programId_optional& InfiltrationFlow::
  programId ()
  {
    return this->programId_;
  }

  inline
  void InfiltrationFlow::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void InfiltrationFlow::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void InfiltrationFlow::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // InputWatts
  // 

  inline
  const InputWatts::unit_type& InputWatts::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  InputWatts::unit_type& InputWatts::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void InputWatts::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void InputWatts::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // InsideAirFilmResistance
  // 

  inline
  const InsideAirFilmResistance::unit_type& InsideAirFilmResistance::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  InsideAirFilmResistance::unit_type& InsideAirFilmResistance::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void InsideAirFilmResistance::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void InsideAirFilmResistance::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // IntEquip
  // 

  inline
  const IntEquip::Name_sequence& IntEquip::
  Name () const
  {
    return this->Name_;
  }

  inline
  IntEquip::Name_sequence& IntEquip::
  Name ()
  {
    return this->Name_;
  }

  inline
  void IntEquip::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const IntEquip::Description_sequence& IntEquip::
  Description () const
  {
    return this->Description_;
  }

  inline
  IntEquip::Description_sequence& IntEquip::
  Description ()
  {
    return this->Description_;
  }

  inline
  void IntEquip::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const IntEquip::Manufacturer_sequence& IntEquip::
  Manufacturer () const
  {
    return this->Manufacturer_;
  }

  inline
  IntEquip::Manufacturer_sequence& IntEquip::
  Manufacturer ()
  {
    return this->Manufacturer_;
  }

  inline
  void IntEquip::
  Manufacturer (const Manufacturer_sequence& s)
  {
    this->Manufacturer_ = s;
  }

  inline
  const IntEquip::Model_sequence& IntEquip::
  Model () const
  {
    return this->Model_;
  }

  inline
  IntEquip::Model_sequence& IntEquip::
  Model ()
  {
    return this->Model_;
  }

  inline
  void IntEquip::
  Model (const Model_sequence& s)
  {
    this->Model_ = s;
  }

  inline
  const IntEquip::ElecLoad_sequence& IntEquip::
  ElecLoad () const
  {
    return this->ElecLoad_;
  }

  inline
  IntEquip::ElecLoad_sequence& IntEquip::
  ElecLoad ()
  {
    return this->ElecLoad_;
  }

  inline
  void IntEquip::
  ElecLoad (const ElecLoad_sequence& s)
  {
    this->ElecLoad_ = s;
  }

  inline
  const IntEquip::FuelLoad_sequence& IntEquip::
  FuelLoad () const
  {
    return this->FuelLoad_;
  }

  inline
  IntEquip::FuelLoad_sequence& IntEquip::
  FuelLoad ()
  {
    return this->FuelLoad_;
  }

  inline
  void IntEquip::
  FuelLoad (const FuelLoad_sequence& s)
  {
    this->FuelLoad_ = s;
  }

  inline
  const IntEquip::LatentLoad_sequence& IntEquip::
  LatentLoad () const
  {
    return this->LatentLoad_;
  }

  inline
  IntEquip::LatentLoad_sequence& IntEquip::
  LatentLoad ()
  {
    return this->LatentLoad_;
  }

  inline
  void IntEquip::
  LatentLoad (const LatentLoad_sequence& s)
  {
    this->LatentLoad_ = s;
  }

  inline
  const IntEquip::Efficiency_sequence& IntEquip::
  Efficiency () const
  {
    return this->Efficiency_;
  }

  inline
  IntEquip::Efficiency_sequence& IntEquip::
  Efficiency ()
  {
    return this->Efficiency_;
  }

  inline
  void IntEquip::
  Efficiency (const Efficiency_sequence& s)
  {
    this->Efficiency_ = s;
  }

  inline
  const IntEquip::Performance_sequence& IntEquip::
  Performance () const
  {
    return this->Performance_;
  }

  inline
  IntEquip::Performance_sequence& IntEquip::
  Performance ()
  {
    return this->Performance_;
  }

  inline
  void IntEquip::
  Performance (const Performance_sequence& s)
  {
    this->Performance_ = s;
  }

  inline
  const IntEquip::Cost_sequence& IntEquip::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  IntEquip::Cost_sequence& IntEquip::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void IntEquip::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const IntEquip::Weight_sequence& IntEquip::
  Weight () const
  {
    return this->Weight_;
  }

  inline
  IntEquip::Weight_sequence& IntEquip::
  Weight ()
  {
    return this->Weight_;
  }

  inline
  void IntEquip::
  Weight (const Weight_sequence& s)
  {
    this->Weight_ = s;
  }

  inline
  const IntEquip::WasteWaterHREff_sequence& IntEquip::
  WasteWaterHREff () const
  {
    return this->WasteWaterHREff_;
  }

  inline
  IntEquip::WasteWaterHREff_sequence& IntEquip::
  WasteWaterHREff ()
  {
    return this->WasteWaterHREff_;
  }

  inline
  void IntEquip::
  WasteWaterHREff (const WasteWaterHREff_sequence& s)
  {
    this->WasteWaterHREff_ = s;
  }

  inline
  const IntEquip::WaterUsePerCycle_sequence& IntEquip::
  WaterUsePerCycle () const
  {
    return this->WaterUsePerCycle_;
  }

  inline
  IntEquip::WaterUsePerCycle_sequence& IntEquip::
  WaterUsePerCycle ()
  {
    return this->WaterUsePerCycle_;
  }

  inline
  void IntEquip::
  WaterUsePerCycle (const WaterUsePerCycle_sequence& s)
  {
    this->WaterUsePerCycle_ = s;
  }

  inline
  const IntEquip::RatedFlow_sequence& IntEquip::
  RatedFlow () const
  {
    return this->RatedFlow_;
  }

  inline
  IntEquip::RatedFlow_sequence& IntEquip::
  RatedFlow ()
  {
    return this->RatedFlow_;
  }

  inline
  void IntEquip::
  RatedFlow (const RatedFlow_sequence& s)
  {
    this->RatedFlow_ = s;
  }

  inline
  const IntEquip::HeatRejectedtoSpace_sequence& IntEquip::
  HeatRejectedtoSpace () const
  {
    return this->HeatRejectedtoSpace_;
  }

  inline
  IntEquip::HeatRejectedtoSpace_sequence& IntEquip::
  HeatRejectedtoSpace ()
  {
    return this->HeatRejectedtoSpace_;
  }

  inline
  void IntEquip::
  HeatRejectedtoSpace (const HeatRejectedtoSpace_sequence& s)
  {
    this->HeatRejectedtoSpace_ = s;
  }

  inline
  const IntEquip::Power_sequence& IntEquip::
  Power () const
  {
    return this->Power_;
  }

  inline
  IntEquip::Power_sequence& IntEquip::
  Power ()
  {
    return this->Power_;
  }

  inline
  void IntEquip::
  Power (const Power_sequence& s)
  {
    this->Power_ = s;
  }

  inline
  const IntEquip::CyclesPerWeek_sequence& IntEquip::
  CyclesPerWeek () const
  {
    return this->CyclesPerWeek_;
  }

  inline
  IntEquip::CyclesPerWeek_sequence& IntEquip::
  CyclesPerWeek ()
  {
    return this->CyclesPerWeek_;
  }

  inline
  void IntEquip::
  CyclesPerWeek (const CyclesPerWeek_sequence& s)
  {
    this->CyclesPerWeek_ = s;
  }

  inline
  const IntEquip::Energy_sequence& IntEquip::
  Energy () const
  {
    return this->Energy_;
  }

  inline
  IntEquip::Energy_sequence& IntEquip::
  Energy ()
  {
    return this->Energy_;
  }

  inline
  void IntEquip::
  Energy (const Energy_sequence& s)
  {
    this->Energy_ = s;
  }

  inline
  const IntEquip::GeneralGeometry_sequence& IntEquip::
  GeneralGeometry () const
  {
    return this->GeneralGeometry_;
  }

  inline
  IntEquip::GeneralGeometry_sequence& IntEquip::
  GeneralGeometry ()
  {
    return this->GeneralGeometry_;
  }

  inline
  void IntEquip::
  GeneralGeometry (const GeneralGeometry_sequence& s)
  {
    this->GeneralGeometry_ = s;
  }

  inline
  const IntEquip::ShellGeometry_sequence& IntEquip::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  IntEquip::ShellGeometry_sequence& IntEquip::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void IntEquip::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const IntEquip::IndoorAirQuality_sequence& IntEquip::
  IndoorAirQuality () const
  {
    return this->IndoorAirQuality_;
  }

  inline
  IntEquip::IndoorAirQuality_sequence& IntEquip::
  IndoorAirQuality ()
  {
    return this->IndoorAirQuality_;
  }

  inline
  void IntEquip::
  IndoorAirQuality (const IndoorAirQuality_sequence& s)
  {
    this->IndoorAirQuality_ = s;
  }

  inline
  const IntEquip::Age_sequence& IntEquip::
  Age () const
  {
    return this->Age_;
  }

  inline
  IntEquip::Age_sequence& IntEquip::
  Age ()
  {
    return this->Age_;
  }

  inline
  void IntEquip::
  Age (const Age_sequence& s)
  {
    this->Age_ = s;
  }

  inline
  const IntEquip::Reference_sequence& IntEquip::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  IntEquip::Reference_sequence& IntEquip::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void IntEquip::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const IntEquip::CADObjectId_sequence& IntEquip::
  CADObjectId () const
  {
    return this->CADObjectId_;
  }

  inline
  IntEquip::CADObjectId_sequence& IntEquip::
  CADObjectId ()
  {
    return this->CADObjectId_;
  }

  inline
  void IntEquip::
  CADObjectId (const CADObjectId_sequence& s)
  {
    this->CADObjectId_ = s;
  }

  inline
  const IntEquip::id_type& IntEquip::
  id () const
  {
    return this->id_.get ();
  }

  inline
  IntEquip::id_type& IntEquip::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void IntEquip::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void IntEquip::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const IntEquip::scheduleIdRef_optional& IntEquip::
  scheduleIdRef () const
  {
    return this->scheduleIdRef_;
  }

  inline
  IntEquip::scheduleIdRef_optional& IntEquip::
  scheduleIdRef ()
  {
    return this->scheduleIdRef_;
  }

  inline
  void IntEquip::
  scheduleIdRef (const scheduleIdRef_type& x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  void IntEquip::
  scheduleIdRef (const scheduleIdRef_optional& x)
  {
    this->scheduleIdRef_ = x;
  }

  inline
  void IntEquip::
  scheduleIdRef (::std::auto_ptr< scheduleIdRef_type > x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  const IntEquip::waterTempScheduleIdRef_optional& IntEquip::
  waterTempScheduleIdRef () const
  {
    return this->waterTempScheduleIdRef_;
  }

  inline
  IntEquip::waterTempScheduleIdRef_optional& IntEquip::
  waterTempScheduleIdRef ()
  {
    return this->waterTempScheduleIdRef_;
  }

  inline
  void IntEquip::
  waterTempScheduleIdRef (const waterTempScheduleIdRef_type& x)
  {
    this->waterTempScheduleIdRef_.set (x);
  }

  inline
  void IntEquip::
  waterTempScheduleIdRef (const waterTempScheduleIdRef_optional& x)
  {
    this->waterTempScheduleIdRef_ = x;
  }

  inline
  void IntEquip::
  waterTempScheduleIdRef (::std::auto_ptr< waterTempScheduleIdRef_type > x)
  {
    this->waterTempScheduleIdRef_.set (x);
  }

  inline
  const IntEquip::hydronicLoopIdRef_optional& IntEquip::
  hydronicLoopIdRef () const
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  IntEquip::hydronicLoopIdRef_optional& IntEquip::
  hydronicLoopIdRef ()
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  void IntEquip::
  hydronicLoopIdRef (const hydronicLoopIdRef_type& x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  void IntEquip::
  hydronicLoopIdRef (const hydronicLoopIdRef_optional& x)
  {
    this->hydronicLoopIdRef_ = x;
  }

  inline
  void IntEquip::
  hydronicLoopIdRef (::std::auto_ptr< hydronicLoopIdRef_type > x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  const IntEquip::waterScheduleIdRef_optional& IntEquip::
  waterScheduleIdRef () const
  {
    return this->waterScheduleIdRef_;
  }

  inline
  IntEquip::waterScheduleIdRef_optional& IntEquip::
  waterScheduleIdRef ()
  {
    return this->waterScheduleIdRef_;
  }

  inline
  void IntEquip::
  waterScheduleIdRef (const waterScheduleIdRef_type& x)
  {
    this->waterScheduleIdRef_.set (x);
  }

  inline
  void IntEquip::
  waterScheduleIdRef (const waterScheduleIdRef_optional& x)
  {
    this->waterScheduleIdRef_ = x;
  }

  inline
  void IntEquip::
  waterScheduleIdRef (::std::auto_ptr< waterScheduleIdRef_type > x)
  {
    this->waterScheduleIdRef_.set (x);
  }

  inline
  const IntEquip::waterMeterIdRef_optional& IntEquip::
  waterMeterIdRef () const
  {
    return this->waterMeterIdRef_;
  }

  inline
  IntEquip::waterMeterIdRef_optional& IntEquip::
  waterMeterIdRef ()
  {
    return this->waterMeterIdRef_;
  }

  inline
  void IntEquip::
  waterMeterIdRef (const waterMeterIdRef_type& x)
  {
    this->waterMeterIdRef_.set (x);
  }

  inline
  void IntEquip::
  waterMeterIdRef (const waterMeterIdRef_optional& x)
  {
    this->waterMeterIdRef_ = x;
  }

  inline
  void IntEquip::
  waterMeterIdRef (::std::auto_ptr< waterMeterIdRef_type > x)
  {
    this->waterMeterIdRef_.set (x);
  }

  inline
  const IntEquip::type_type& IntEquip::
  type () const
  {
    return this->type_.get ();
  }

  inline
  IntEquip::type_type& IntEquip::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void IntEquip::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void IntEquip::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }

  inline
  const IntEquip::airLoopIdRef_optional& IntEquip::
  airLoopIdRef () const
  {
    return this->airLoopIdRef_;
  }

  inline
  IntEquip::airLoopIdRef_optional& IntEquip::
  airLoopIdRef ()
  {
    return this->airLoopIdRef_;
  }

  inline
  void IntEquip::
  airLoopIdRef (const airLoopIdRef_type& x)
  {
    this->airLoopIdRef_.set (x);
  }

  inline
  void IntEquip::
  airLoopIdRef (const airLoopIdRef_optional& x)
  {
    this->airLoopIdRef_ = x;
  }

  inline
  void IntEquip::
  airLoopIdRef (::std::auto_ptr< airLoopIdRef_type > x)
  {
    this->airLoopIdRef_.set (x);
  }

  inline
  const IntEquip::programId_optional& IntEquip::
  programId () const
  {
    return this->programId_;
  }

  inline
  IntEquip::programId_optional& IntEquip::
  programId ()
  {
    return this->programId_;
  }

  inline
  void IntEquip::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void IntEquip::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void IntEquip::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // IntEquipId
  // 

  inline
  const IntEquipId::intEquipIdRef_type& IntEquipId::
  intEquipIdRef () const
  {
    return this->intEquipIdRef_.get ();
  }

  inline
  IntEquipId::intEquipIdRef_type& IntEquipId::
  intEquipIdRef ()
  {
    return this->intEquipIdRef_.get ();
  }

  inline
  void IntEquipId::
  intEquipIdRef (const intEquipIdRef_type& x)
  {
    this->intEquipIdRef_.set (x);
  }

  inline
  void IntEquipId::
  intEquipIdRef (::std::auto_ptr< intEquipIdRef_type > x)
  {
    this->intEquipIdRef_.set (x);
  }


  // LatentLoad
  // 

  inline
  const LatentLoad::unit_type& LatentLoad::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  LatentLoad::unit_type& LatentLoad::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void LatentLoad::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void LatentLoad::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Layer
  // 

  inline
  const Layer::Name_sequence& Layer::
  Name () const
  {
    return this->Name_;
  }

  inline
  Layer::Name_sequence& Layer::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Layer::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Layer::Description_sequence& Layer::
  Description () const
  {
    return this->Description_;
  }

  inline
  Layer::Description_sequence& Layer::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Layer::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Layer::Cost_sequence& Layer::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  Layer::Cost_sequence& Layer::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void Layer::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const Layer::InsideAirFilmResistance_sequence& Layer::
  InsideAirFilmResistance () const
  {
    return this->InsideAirFilmResistance_;
  }

  inline
  Layer::InsideAirFilmResistance_sequence& Layer::
  InsideAirFilmResistance ()
  {
    return this->InsideAirFilmResistance_;
  }

  inline
  void Layer::
  InsideAirFilmResistance (const InsideAirFilmResistance_sequence& s)
  {
    this->InsideAirFilmResistance_ = s;
  }

  inline
  const Layer::MaterialId_sequence& Layer::
  MaterialId () const
  {
    return this->MaterialId_;
  }

  inline
  Layer::MaterialId_sequence& Layer::
  MaterialId ()
  {
    return this->MaterialId_;
  }

  inline
  void Layer::
  MaterialId (const MaterialId_sequence& s)
  {
    this->MaterialId_ = s;
  }

  inline
  const Layer::id_type& Layer::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Layer::id_type& Layer::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Layer::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Layer::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Layer::DOELibIdRef_optional& Layer::
  DOELibIdRef () const
  {
    return this->DOELibIdRef_;
  }

  inline
  Layer::DOELibIdRef_optional& Layer::
  DOELibIdRef ()
  {
    return this->DOELibIdRef_;
  }

  inline
  void Layer::
  DOELibIdRef (const DOELibIdRef_type& x)
  {
    this->DOELibIdRef_.set (x);
  }

  inline
  void Layer::
  DOELibIdRef (const DOELibIdRef_optional& x)
  {
    this->DOELibIdRef_ = x;
  }

  inline
  void Layer::
  DOELibIdRef (::std::auto_ptr< DOELibIdRef_type > x)
  {
    this->DOELibIdRef_.set (x);
  }


  // LayerId
  // 

  inline
  const LayerId::layerIdRef_type& LayerId::
  layerIdRef () const
  {
    return this->layerIdRef_.get ();
  }

  inline
  LayerId::layerIdRef_type& LayerId::
  layerIdRef ()
  {
    return this->layerIdRef_.get ();
  }

  inline
  void LayerId::
  layerIdRef (const layerIdRef_type& x)
  {
    this->layerIdRef_.set (x);
  }

  inline
  void LayerId::
  layerIdRef (::std::auto_ptr< layerIdRef_type > x)
  {
    this->layerIdRef_.set (x);
  }


  // Length
  // 

  inline
  const Length::unit_optional& Length::
  unit () const
  {
    return this->unit_;
  }

  inline
  Length::unit_optional& Length::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Length::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Length::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Length::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Level
  // 

  inline
  const Level::unit_optional& Level::
  unit () const
  {
    return this->unit_;
  }

  inline
  Level::unit_optional& Level::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Level::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Level::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Level::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Life
  // 

  inline
  const Life::unit_type& Life::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Life::unit_type& Life::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Life::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Life::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // LightControlId
  // 

  inline
  const LightControlId::scheduleIdRef_optional& LightControlId::
  scheduleIdRef () const
  {
    return this->scheduleIdRef_;
  }

  inline
  LightControlId::scheduleIdRef_optional& LightControlId::
  scheduleIdRef ()
  {
    return this->scheduleIdRef_;
  }

  inline
  void LightControlId::
  scheduleIdRef (const scheduleIdRef_type& x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  void LightControlId::
  scheduleIdRef (const scheduleIdRef_optional& x)
  {
    this->scheduleIdRef_ = x;
  }

  inline
  void LightControlId::
  scheduleIdRef (::std::auto_ptr< scheduleIdRef_type > x)
  {
    this->scheduleIdRef_.set (x);
  }


  // LightId
  // 

  inline
  const LightId::lightIdRef_type& LightId::
  lightIdRef () const
  {
    return this->lightIdRef_.get ();
  }

  inline
  LightId::lightIdRef_type& LightId::
  lightIdRef ()
  {
    return this->lightIdRef_.get ();
  }

  inline
  void LightId::
  lightIdRef (const lightIdRef_type& x)
  {
    this->lightIdRef_.set (x);
  }

  inline
  void LightId::
  lightIdRef (::std::auto_ptr< lightIdRef_type > x)
  {
    this->lightIdRef_.set (x);
  }


  // Lighting
  // 

  inline
  const Lighting::GeneralGeometry_sequence& Lighting::
  GeneralGeometry () const
  {
    return this->GeneralGeometry_;
  }

  inline
  Lighting::GeneralGeometry_sequence& Lighting::
  GeneralGeometry ()
  {
    return this->GeneralGeometry_;
  }

  inline
  void Lighting::
  GeneralGeometry (const GeneralGeometry_sequence& s)
  {
    this->GeneralGeometry_ = s;
  }

  inline
  const Lighting::ShellGeometry_sequence& Lighting::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  Lighting::ShellGeometry_sequence& Lighting::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void Lighting::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const Lighting::CoefficientOfUtilization_sequence& Lighting::
  CoefficientOfUtilization () const
  {
    return this->CoefficientOfUtilization_;
  }

  inline
  Lighting::CoefficientOfUtilization_sequence& Lighting::
  CoefficientOfUtilization ()
  {
    return this->CoefficientOfUtilization_;
  }

  inline
  void Lighting::
  CoefficientOfUtilization (const CoefficientOfUtilization_sequence& s)
  {
    this->CoefficientOfUtilization_ = s;
  }

  inline
  const Lighting::PhotometryOrientation_sequence& Lighting::
  PhotometryOrientation () const
  {
    return this->PhotometryOrientation_;
  }

  inline
  Lighting::PhotometryOrientation_sequence& Lighting::
  PhotometryOrientation ()
  {
    return this->PhotometryOrientation_;
  }

  inline
  void Lighting::
  PhotometryOrientation (const PhotometryOrientation_sequence& s)
  {
    this->PhotometryOrientation_ = s;
  }

  inline
  const Lighting::id_type& Lighting::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Lighting::id_type& Lighting::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Lighting::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Lighting::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Lighting::lightingSystemIdRef_optional& Lighting::
  lightingSystemIdRef () const
  {
    return this->lightingSystemIdRef_;
  }

  inline
  Lighting::lightingSystemIdRef_optional& Lighting::
  lightingSystemIdRef ()
  {
    return this->lightingSystemIdRef_;
  }

  inline
  void Lighting::
  lightingSystemIdRef (const lightingSystemIdRef_type& x)
  {
    this->lightingSystemIdRef_.set (x);
  }

  inline
  void Lighting::
  lightingSystemIdRef (const lightingSystemIdRef_optional& x)
  {
    this->lightingSystemIdRef_ = x;
  }

  inline
  void Lighting::
  lightingSystemIdRef (::std::auto_ptr< lightingSystemIdRef_type > x)
  {
    this->lightingSystemIdRef_.set (x);
  }

  inline
  const Lighting::lightingControlIdRef_optional& Lighting::
  lightingControlIdRef () const
  {
    return this->lightingControlIdRef_;
  }

  inline
  Lighting::lightingControlIdRef_optional& Lighting::
  lightingControlIdRef ()
  {
    return this->lightingControlIdRef_;
  }

  inline
  void Lighting::
  lightingControlIdRef (const lightingControlIdRef_type& x)
  {
    this->lightingControlIdRef_.set (x);
  }

  inline
  void Lighting::
  lightingControlIdRef (const lightingControlIdRef_optional& x)
  {
    this->lightingControlIdRef_ = x;
  }

  inline
  void Lighting::
  lightingControlIdRef (::std::auto_ptr< lightingControlIdRef_type > x)
  {
    this->lightingControlIdRef_.set (x);
  }

  inline
  const Lighting::meterIdRef_optional& Lighting::
  meterIdRef () const
  {
    return this->meterIdRef_;
  }

  inline
  Lighting::meterIdRef_optional& Lighting::
  meterIdRef ()
  {
    return this->meterIdRef_;
  }

  inline
  void Lighting::
  meterIdRef (const meterIdRef_type& x)
  {
    this->meterIdRef_.set (x);
  }

  inline
  void Lighting::
  meterIdRef (const meterIdRef_optional& x)
  {
    this->meterIdRef_ = x;
  }

  inline
  void Lighting::
  meterIdRef (::std::auto_ptr< meterIdRef_type > x)
  {
    this->meterIdRef_.set (x);
  }

  inline
  const Lighting::programId_optional& Lighting::
  programId () const
  {
    return this->programId_;
  }

  inline
  Lighting::programId_optional& Lighting::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Lighting::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Lighting::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Lighting::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // LightingControl
  // 

  inline
  const LightingControl::GeneralGeometry_sequence& LightingControl::
  GeneralGeometry () const
  {
    return this->GeneralGeometry_;
  }

  inline
  LightingControl::GeneralGeometry_sequence& LightingControl::
  GeneralGeometry ()
  {
    return this->GeneralGeometry_;
  }

  inline
  void LightingControl::
  GeneralGeometry (const GeneralGeometry_sequence& s)
  {
    this->GeneralGeometry_ = s;
  }

  inline
  const LightingControl::ShellGeometry_sequence& LightingControl::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  LightingControl::ShellGeometry_sequence& LightingControl::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void LightingControl::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const LightingControl::Illuminance_sequence& LightingControl::
  Illuminance () const
  {
    return this->Illuminance_;
  }

  inline
  LightingControl::Illuminance_sequence& LightingControl::
  Illuminance ()
  {
    return this->Illuminance_;
  }

  inline
  void LightingControl::
  Illuminance (const Illuminance_sequence& s)
  {
    this->Illuminance_ = s;
  }

  inline
  const LightingControl::CartesianPoint_sequence& LightingControl::
  CartesianPoint () const
  {
    return this->CartesianPoint_;
  }

  inline
  LightingControl::CartesianPoint_sequence& LightingControl::
  CartesianPoint ()
  {
    return this->CartesianPoint_;
  }

  inline
  void LightingControl::
  CartesianPoint (const CartesianPoint_sequence& s)
  {
    this->CartesianPoint_ = s;
  }

  inline
  const LightingControl::MinPowerFrac_sequence& LightingControl::
  MinPowerFrac () const
  {
    return this->MinPowerFrac_;
  }

  inline
  LightingControl::MinPowerFrac_sequence& LightingControl::
  MinPowerFrac ()
  {
    return this->MinPowerFrac_;
  }

  inline
  void LightingControl::
  MinPowerFrac (const MinPowerFrac_sequence& s)
  {
    this->MinPowerFrac_ = s;
  }

  inline
  const LightingControl::MinLightFrac_sequence& LightingControl::
  MinLightFrac () const
  {
    return this->MinLightFrac_;
  }

  inline
  LightingControl::MinLightFrac_sequence& LightingControl::
  MinLightFrac ()
  {
    return this->MinLightFrac_;
  }

  inline
  void LightingControl::
  MinLightFrac (const MinLightFrac_sequence& s)
  {
    this->MinLightFrac_ = s;
  }

  inline
  const LightingControl::PercentAreaDaylitControlled_sequence& LightingControl::
  PercentAreaDaylitControlled () const
  {
    return this->PercentAreaDaylitControlled_;
  }

  inline
  LightingControl::PercentAreaDaylitControlled_sequence& LightingControl::
  PercentAreaDaylitControlled ()
  {
    return this->PercentAreaDaylitControlled_;
  }

  inline
  void LightingControl::
  PercentAreaDaylitControlled (const PercentAreaDaylitControlled_sequence& s)
  {
    this->PercentAreaDaylitControlled_ = s;
  }

  inline
  const LightingControl::type_type& LightingControl::
  type () const
  {
    return this->type_.get ();
  }

  inline
  LightingControl::type_type& LightingControl::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void LightingControl::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void LightingControl::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }

  inline
  const LightingControl::id_type& LightingControl::
  id () const
  {
    return this->id_.get ();
  }

  inline
  LightingControl::id_type& LightingControl::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void LightingControl::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void LightingControl::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const LightingControl::lightingSystemIdRef_optional& LightingControl::
  lightingSystemIdRef () const
  {
    return this->lightingSystemIdRef_;
  }

  inline
  LightingControl::lightingSystemIdRef_optional& LightingControl::
  lightingSystemIdRef ()
  {
    return this->lightingSystemIdRef_;
  }

  inline
  void LightingControl::
  lightingSystemIdRef (const lightingSystemIdRef_type& x)
  {
    this->lightingSystemIdRef_.set (x);
  }

  inline
  void LightingControl::
  lightingSystemIdRef (const lightingSystemIdRef_optional& x)
  {
    this->lightingSystemIdRef_ = x;
  }

  inline
  void LightingControl::
  lightingSystemIdRef (::std::auto_ptr< lightingSystemIdRef_type > x)
  {
    this->lightingSystemIdRef_.set (x);
  }

  inline
  const LightingControl::programId_optional& LightingControl::
  programId () const
  {
    return this->programId_;
  }

  inline
  LightingControl::programId_optional& LightingControl::
  programId ()
  {
    return this->programId_;
  }

  inline
  void LightingControl::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void LightingControl::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void LightingControl::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // LightingSystem
  // 

  inline
  const LightingSystem::Manufacturer_sequence& LightingSystem::
  Manufacturer () const
  {
    return this->Manufacturer_;
  }

  inline
  LightingSystem::Manufacturer_sequence& LightingSystem::
  Manufacturer ()
  {
    return this->Manufacturer_;
  }

  inline
  void LightingSystem::
  Manufacturer (const Manufacturer_sequence& s)
  {
    this->Manufacturer_ = s;
  }

  inline
  const LightingSystem::NumberOfLamps_sequence& LightingSystem::
  NumberOfLamps () const
  {
    return this->NumberOfLamps_;
  }

  inline
  LightingSystem::NumberOfLamps_sequence& LightingSystem::
  NumberOfLamps ()
  {
    return this->NumberOfLamps_;
  }

  inline
  void LightingSystem::
  NumberOfLamps (const NumberOfLamps_sequence& s)
  {
    this->NumberOfLamps_ = s;
  }

  inline
  const LightingSystem::LumensPerLamp_sequence& LightingSystem::
  LumensPerLamp () const
  {
    return this->LumensPerLamp_;
  }

  inline
  LightingSystem::LumensPerLamp_sequence& LightingSystem::
  LumensPerLamp ()
  {
    return this->LumensPerLamp_;
  }

  inline
  void LightingSystem::
  LumensPerLamp (const LumensPerLamp_sequence& s)
  {
    this->LumensPerLamp_ = s;
  }

  inline
  const LightingSystem::Dimensions_sequence& LightingSystem::
  Dimensions () const
  {
    return this->Dimensions_;
  }

  inline
  LightingSystem::Dimensions_sequence& LightingSystem::
  Dimensions ()
  {
    return this->Dimensions_;
  }

  inline
  void LightingSystem::
  Dimensions (const Dimensions_sequence& s)
  {
    this->Dimensions_ = s;
  }

  inline
  const LightingSystem::InputWatts_sequence& LightingSystem::
  InputWatts () const
  {
    return this->InputWatts_;
  }

  inline
  LightingSystem::InputWatts_sequence& LightingSystem::
  InputWatts ()
  {
    return this->InputWatts_;
  }

  inline
  void LightingSystem::
  InputWatts (const InputWatts_sequence& s)
  {
    this->InputWatts_ = s;
  }

  inline
  const LightingSystem::Ballast_sequence& LightingSystem::
  Ballast () const
  {
    return this->Ballast_;
  }

  inline
  LightingSystem::Ballast_sequence& LightingSystem::
  Ballast ()
  {
    return this->Ballast_;
  }

  inline
  void LightingSystem::
  Ballast (const Ballast_sequence& s)
  {
    this->Ballast_ = s;
  }

  inline
  const LightingSystem::Lamp_sequence& LightingSystem::
  Lamp () const
  {
    return this->Lamp_;
  }

  inline
  LightingSystem::Lamp_sequence& LightingSystem::
  Lamp ()
  {
    return this->Lamp_;
  }

  inline
  void LightingSystem::
  Lamp (const Lamp_sequence& s)
  {
    this->Lamp_ = s;
  }

  inline
  const LightingSystem::Luminaire_sequence& LightingSystem::
  Luminaire () const
  {
    return this->Luminaire_;
  }

  inline
  LightingSystem::Luminaire_sequence& LightingSystem::
  Luminaire ()
  {
    return this->Luminaire_;
  }

  inline
  void LightingSystem::
  Luminaire (const Luminaire_sequence& s)
  {
    this->Luminaire_ = s;
  }

  inline
  const LightingSystem::Photometry_sequence& LightingSystem::
  Photometry () const
  {
    return this->Photometry_;
  }

  inline
  LightingSystem::Photometry_sequence& LightingSystem::
  Photometry ()
  {
    return this->Photometry_;
  }

  inline
  void LightingSystem::
  Photometry (const Photometry_sequence& s)
  {
    this->Photometry_ = s;
  }

  inline
  const LightingSystem::CoefficientOfUtilization_sequence& LightingSystem::
  CoefficientOfUtilization () const
  {
    return this->CoefficientOfUtilization_;
  }

  inline
  LightingSystem::CoefficientOfUtilization_sequence& LightingSystem::
  CoefficientOfUtilization ()
  {
    return this->CoefficientOfUtilization_;
  }

  inline
  void LightingSystem::
  CoefficientOfUtilization (const CoefficientOfUtilization_sequence& s)
  {
    this->CoefficientOfUtilization_ = s;
  }

  inline
  const LightingSystem::Cost_sequence& LightingSystem::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  LightingSystem::Cost_sequence& LightingSystem::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void LightingSystem::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const LightingSystem::GeneralGeometry_sequence& LightingSystem::
  GeneralGeometry () const
  {
    return this->GeneralGeometry_;
  }

  inline
  LightingSystem::GeneralGeometry_sequence& LightingSystem::
  GeneralGeometry ()
  {
    return this->GeneralGeometry_;
  }

  inline
  void LightingSystem::
  GeneralGeometry (const GeneralGeometry_sequence& s)
  {
    this->GeneralGeometry_ = s;
  }

  inline
  const LightingSystem::ShellGeometry_sequence& LightingSystem::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  LightingSystem::ShellGeometry_sequence& LightingSystem::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void LightingSystem::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const LightingSystem::Reference_sequence& LightingSystem::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  LightingSystem::Reference_sequence& LightingSystem::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void LightingSystem::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const LightingSystem::id_type& LightingSystem::
  id () const
  {
    return this->id_.get ();
  }

  inline
  LightingSystem::id_type& LightingSystem::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void LightingSystem::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void LightingSystem::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const LightingSystem::programId_optional& LightingSystem::
  programId () const
  {
    return this->programId_;
  }

  inline
  LightingSystem::programId_optional& LightingSystem::
  programId ()
  {
    return this->programId_;
  }

  inline
  void LightingSystem::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void LightingSystem::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void LightingSystem::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // LightPowerPerArea
  // 

  inline
  const LightPowerPerArea::unit_type& LightPowerPerArea::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  LightPowerPerArea::unit_type& LightPowerPerArea::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void LightPowerPerArea::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void LightPowerPerArea::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const LightPowerPerArea::programId_optional& LightPowerPerArea::
  programId () const
  {
    return this->programId_;
  }

  inline
  LightPowerPerArea::programId_optional& LightPowerPerArea::
  programId ()
  {
    return this->programId_;
  }

  inline
  void LightPowerPerArea::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void LightPowerPerArea::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void LightPowerPerArea::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // LoadCalcInputParameters
  // 

  inline
  const LoadCalcInputParameters::RTSParameters_sequence& LoadCalcInputParameters::
  RTSParameters () const
  {
    return this->RTSParameters_;
  }

  inline
  LoadCalcInputParameters::RTSParameters_sequence& LoadCalcInputParameters::
  RTSParameters ()
  {
    return this->RTSParameters_;
  }

  inline
  void LoadCalcInputParameters::
  RTSParameters (const RTSParameters_sequence& s)
  {
    this->RTSParameters_ = s;
  }

  inline
  const LoadCalcInputParameters::CLTDParameters_sequence& LoadCalcInputParameters::
  CLTDParameters () const
  {
    return this->CLTDParameters_;
  }

  inline
  LoadCalcInputParameters::CLTDParameters_sequence& LoadCalcInputParameters::
  CLTDParameters ()
  {
    return this->CLTDParameters_;
  }

  inline
  void LoadCalcInputParameters::
  CLTDParameters (const CLTDParameters_sequence& s)
  {
    this->CLTDParameters_ = s;
  }

  inline
  const LoadCalcInputParameters::ManualJ8Parameters_sequence& LoadCalcInputParameters::
  ManualJ8Parameters () const
  {
    return this->ManualJ8Parameters_;
  }

  inline
  LoadCalcInputParameters::ManualJ8Parameters_sequence& LoadCalcInputParameters::
  ManualJ8Parameters ()
  {
    return this->ManualJ8Parameters_;
  }

  inline
  void LoadCalcInputParameters::
  ManualJ8Parameters (const ManualJ8Parameters_sequence& s)
  {
    this->ManualJ8Parameters_ = s;
  }

  inline
  const LoadCalcInputParameters::FloorSlabHeatLossCoefficient_sequence& LoadCalcInputParameters::
  FloorSlabHeatLossCoefficient () const
  {
    return this->FloorSlabHeatLossCoefficient_;
  }

  inline
  LoadCalcInputParameters::FloorSlabHeatLossCoefficient_sequence& LoadCalcInputParameters::
  FloorSlabHeatLossCoefficient ()
  {
    return this->FloorSlabHeatLossCoefficient_;
  }

  inline
  void LoadCalcInputParameters::
  FloorSlabHeatLossCoefficient (const FloorSlabHeatLossCoefficient_sequence& s)
  {
    this->FloorSlabHeatLossCoefficient_ = s;
  }


  // Location
  // 

  inline
  const Location::StationId_sequence& Location::
  StationId () const
  {
    return this->StationId_;
  }

  inline
  Location::StationId_sequence& Location::
  StationId ()
  {
    return this->StationId_;
  }

  inline
  void Location::
  StationId (const StationId_sequence& s)
  {
    this->StationId_ = s;
  }

  inline
  const Location::Name_sequence& Location::
  Name () const
  {
    return this->Name_;
  }

  inline
  Location::Name_sequence& Location::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Location::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Location::Description_sequence& Location::
  Description () const
  {
    return this->Description_;
  }

  inline
  Location::Description_sequence& Location::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Location::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Location::ZipcodeOrPostalCode_sequence& Location::
  ZipcodeOrPostalCode () const
  {
    return this->ZipcodeOrPostalCode_;
  }

  inline
  Location::ZipcodeOrPostalCode_sequence& Location::
  ZipcodeOrPostalCode ()
  {
    return this->ZipcodeOrPostalCode_;
  }

  inline
  void Location::
  ZipcodeOrPostalCode (const ZipcodeOrPostalCode_sequence& s)
  {
    this->ZipcodeOrPostalCode_ = s;
  }

  inline
  const Location::Longitude_sequence& Location::
  Longitude () const
  {
    return this->Longitude_;
  }

  inline
  Location::Longitude_sequence& Location::
  Longitude ()
  {
    return this->Longitude_;
  }

  inline
  void Location::
  Longitude (const Longitude_sequence& s)
  {
    this->Longitude_ = s;
  }

  inline
  const Location::Latitude_sequence& Location::
  Latitude () const
  {
    return this->Latitude_;
  }

  inline
  Location::Latitude_sequence& Location::
  Latitude ()
  {
    return this->Latitude_;
  }

  inline
  void Location::
  Latitude (const Latitude_sequence& s)
  {
    this->Latitude_ = s;
  }

  inline
  const Location::Elevation_sequence& Location::
  Elevation () const
  {
    return this->Elevation_;
  }

  inline
  Location::Elevation_sequence& Location::
  Elevation ()
  {
    return this->Elevation_;
  }

  inline
  void Location::
  Elevation (const Elevation_sequence& s)
  {
    this->Elevation_ = s;
  }

  inline
  const Location::CADModelAzimuth_sequence& Location::
  CADModelAzimuth () const
  {
    return this->CADModelAzimuth_;
  }

  inline
  Location::CADModelAzimuth_sequence& Location::
  CADModelAzimuth ()
  {
    return this->CADModelAzimuth_;
  }

  inline
  void Location::
  CADModelAzimuth (const CADModelAzimuth_sequence& s)
  {
    this->CADModelAzimuth_ = s;
  }


  // LowValue
  // 

  inline
  const LowValue::unit_type& LowValue::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  LowValue::unit_type& LowValue::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void LowValue::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void LowValue::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // ManualJ8Parameters
  // 

  inline
  const ManualJ8Parameters::wallGroupManualJ_optional& ManualJ8Parameters::
  wallGroupManualJ () const
  {
    return this->wallGroupManualJ_;
  }

  inline
  ManualJ8Parameters::wallGroupManualJ_optional& ManualJ8Parameters::
  wallGroupManualJ ()
  {
    return this->wallGroupManualJ_;
  }

  inline
  void ManualJ8Parameters::
  wallGroupManualJ (const wallGroupManualJ_type& x)
  {
    this->wallGroupManualJ_.set (x);
  }

  inline
  void ManualJ8Parameters::
  wallGroupManualJ (const wallGroupManualJ_optional& x)
  {
    this->wallGroupManualJ_ = x;
  }

  inline
  void ManualJ8Parameters::
  wallGroupManualJ (::std::auto_ptr< wallGroupManualJ_type > x)
  {
    this->wallGroupManualJ_.set (x);
  }

  inline
  const ManualJ8Parameters::roofCLTDIndex_optional& ManualJ8Parameters::
  roofCLTDIndex () const
  {
    return this->roofCLTDIndex_;
  }

  inline
  ManualJ8Parameters::roofCLTDIndex_optional& ManualJ8Parameters::
  roofCLTDIndex ()
  {
    return this->roofCLTDIndex_;
  }

  inline
  void ManualJ8Parameters::
  roofCLTDIndex (const roofCLTDIndex_type& x)
  {
    this->roofCLTDIndex_.set (x);
  }

  inline
  void ManualJ8Parameters::
  roofCLTDIndex (const roofCLTDIndex_optional& x)
  {
    this->roofCLTDIndex_ = x;
  }

  inline
  void ManualJ8Parameters::
  roofCLTDIndex (::std::auto_ptr< roofCLTDIndex_type > x)
  {
    this->roofCLTDIndex_.set (x);
  }

  inline
  const ManualJ8Parameters::floorIsRadiant_optional& ManualJ8Parameters::
  floorIsRadiant () const
  {
    return this->floorIsRadiant_;
  }

  inline
  ManualJ8Parameters::floorIsRadiant_optional& ManualJ8Parameters::
  floorIsRadiant ()
  {
    return this->floorIsRadiant_;
  }

  inline
  void ManualJ8Parameters::
  floorIsRadiant (const floorIsRadiant_type& x)
  {
    this->floorIsRadiant_.set (x);
  }

  inline
  void ManualJ8Parameters::
  floorIsRadiant (const floorIsRadiant_optional& x)
  {
    this->floorIsRadiant_ = x;
  }

  inline
  const ManualJ8Parameters::floorCrawlSpaceWallUValue_optional& ManualJ8Parameters::
  floorCrawlSpaceWallUValue () const
  {
    return this->floorCrawlSpaceWallUValue_;
  }

  inline
  ManualJ8Parameters::floorCrawlSpaceWallUValue_optional& ManualJ8Parameters::
  floorCrawlSpaceWallUValue ()
  {
    return this->floorCrawlSpaceWallUValue_;
  }

  inline
  void ManualJ8Parameters::
  floorCrawlSpaceWallUValue (const floorCrawlSpaceWallUValue_type& x)
  {
    this->floorCrawlSpaceWallUValue_.set (x);
  }

  inline
  void ManualJ8Parameters::
  floorCrawlSpaceWallUValue (const floorCrawlSpaceWallUValue_optional& x)
  {
    this->floorCrawlSpaceWallUValue_ = x;
  }

  inline
  const ManualJ8Parameters::floorCrawlSpaceIsSealed_optional& ManualJ8Parameters::
  floorCrawlSpaceIsSealed () const
  {
    return this->floorCrawlSpaceIsSealed_;
  }

  inline
  ManualJ8Parameters::floorCrawlSpaceIsSealed_optional& ManualJ8Parameters::
  floorCrawlSpaceIsSealed ()
  {
    return this->floorCrawlSpaceIsSealed_;
  }

  inline
  void ManualJ8Parameters::
  floorCrawlSpaceIsSealed (const floorCrawlSpaceIsSealed_type& x)
  {
    this->floorCrawlSpaceIsSealed_.set (x);
  }

  inline
  void ManualJ8Parameters::
  floorCrawlSpaceIsSealed (const floorCrawlSpaceIsSealed_optional& x)
  {
    this->floorCrawlSpaceIsSealed_ = x;
  }

  inline
  const ManualJ8Parameters::floorCategory_optional& ManualJ8Parameters::
  floorCategory () const
  {
    return this->floorCategory_;
  }

  inline
  ManualJ8Parameters::floorCategory_optional& ManualJ8Parameters::
  floorCategory ()
  {
    return this->floorCategory_;
  }

  inline
  void ManualJ8Parameters::
  floorCategory (const floorCategory_type& x)
  {
    this->floorCategory_.set (x);
  }

  inline
  void ManualJ8Parameters::
  floorCategory (const floorCategory_optional& x)
  {
    this->floorCategory_ = x;
  }

  inline
  void ManualJ8Parameters::
  floorCategory (::std::auto_ptr< floorCategory_type > x)
  {
    this->floorCategory_.set (x);
  }


  // Material
  // 

  inline
  const Material::Name_sequence& Material::
  Name () const
  {
    return this->Name_;
  }

  inline
  Material::Name_sequence& Material::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Material::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Material::Description_sequence& Material::
  Description () const
  {
    return this->Description_;
  }

  inline
  Material::Description_sequence& Material::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Material::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Material::ImageTexture_sequence& Material::
  ImageTexture () const
  {
    return this->ImageTexture_;
  }

  inline
  Material::ImageTexture_sequence& Material::
  ImageTexture ()
  {
    return this->ImageTexture_;
  }

  inline
  void Material::
  ImageTexture (const ImageTexture_sequence& s)
  {
    this->ImageTexture_ = s;
  }

  inline
  const Material::R_value_sequence& Material::
  R_value () const
  {
    return this->R_value_;
  }

  inline
  Material::R_value_sequence& Material::
  R_value ()
  {
    return this->R_value_;
  }

  inline
  void Material::
  R_value (const R_value_sequence& s)
  {
    this->R_value_ = s;
  }

  inline
  const Material::Thickness_sequence& Material::
  Thickness () const
  {
    return this->Thickness_;
  }

  inline
  Material::Thickness_sequence& Material::
  Thickness ()
  {
    return this->Thickness_;
  }

  inline
  void Material::
  Thickness (const Thickness_sequence& s)
  {
    this->Thickness_ = s;
  }

  inline
  const Material::Conductivity_sequence& Material::
  Conductivity () const
  {
    return this->Conductivity_;
  }

  inline
  Material::Conductivity_sequence& Material::
  Conductivity ()
  {
    return this->Conductivity_;
  }

  inline
  void Material::
  Conductivity (const Conductivity_sequence& s)
  {
    this->Conductivity_ = s;
  }

  inline
  const Material::Density_sequence& Material::
  Density () const
  {
    return this->Density_;
  }

  inline
  Material::Density_sequence& Material::
  Density ()
  {
    return this->Density_;
  }

  inline
  void Material::
  Density (const Density_sequence& s)
  {
    this->Density_ = s;
  }

  inline
  const Material::SpecificHeat_sequence& Material::
  SpecificHeat () const
  {
    return this->SpecificHeat_;
  }

  inline
  Material::SpecificHeat_sequence& Material::
  SpecificHeat ()
  {
    return this->SpecificHeat_;
  }

  inline
  void Material::
  SpecificHeat (const SpecificHeat_sequence& s)
  {
    this->SpecificHeat_ = s;
  }

  inline
  const Material::Permeance_sequence& Material::
  Permeance () const
  {
    return this->Permeance_;
  }

  inline
  Material::Permeance_sequence& Material::
  Permeance ()
  {
    return this->Permeance_;
  }

  inline
  void Material::
  Permeance (const Permeance_sequence& s)
  {
    this->Permeance_ = s;
  }

  inline
  const Material::Porosity_sequence& Material::
  Porosity () const
  {
    return this->Porosity_;
  }

  inline
  Material::Porosity_sequence& Material::
  Porosity ()
  {
    return this->Porosity_;
  }

  inline
  void Material::
  Porosity (const Porosity_sequence& s)
  {
    this->Porosity_ = s;
  }

  inline
  const Material::RecycledContent_sequence& Material::
  RecycledContent () const
  {
    return this->RecycledContent_;
  }

  inline
  Material::RecycledContent_sequence& Material::
  RecycledContent ()
  {
    return this->RecycledContent_;
  }

  inline
  void Material::
  RecycledContent (const RecycledContent_sequence& s)
  {
    this->RecycledContent_ = s;
  }

  inline
  const Material::Fire_sequence& Material::
  Fire () const
  {
    return this->Fire_;
  }

  inline
  Material::Fire_sequence& Material::
  Fire ()
  {
    return this->Fire_;
  }

  inline
  void Material::
  Fire (const Fire_sequence& s)
  {
    this->Fire_ = s;
  }

  inline
  const Material::Cost_sequence& Material::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  Material::Cost_sequence& Material::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void Material::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const Material::IndoorAirQuality_sequence& Material::
  IndoorAirQuality () const
  {
    return this->IndoorAirQuality_;
  }

  inline
  Material::IndoorAirQuality_sequence& Material::
  IndoorAirQuality ()
  {
    return this->IndoorAirQuality_;
  }

  inline
  void Material::
  IndoorAirQuality (const IndoorAirQuality_sequence& s)
  {
    this->IndoorAirQuality_ = s;
  }

  inline
  const Material::CADMaterialId_sequence& Material::
  CADMaterialId () const
  {
    return this->CADMaterialId_;
  }

  inline
  Material::CADMaterialId_sequence& Material::
  CADMaterialId ()
  {
    return this->CADMaterialId_;
  }

  inline
  void Material::
  CADMaterialId (const CADMaterialId_sequence& s)
  {
    this->CADMaterialId_ = s;
  }

  inline
  const Material::Reference_sequence& Material::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  Material::Reference_sequence& Material::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void Material::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const Material::id_type& Material::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Material::id_type& Material::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Material::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Material::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Material::DOELibIdRef_optional& Material::
  DOELibIdRef () const
  {
    return this->DOELibIdRef_;
  }

  inline
  Material::DOELibIdRef_optional& Material::
  DOELibIdRef ()
  {
    return this->DOELibIdRef_;
  }

  inline
  void Material::
  DOELibIdRef (const DOELibIdRef_type& x)
  {
    this->DOELibIdRef_.set (x);
  }

  inline
  void Material::
  DOELibIdRef (const DOELibIdRef_optional& x)
  {
    this->DOELibIdRef_ = x;
  }

  inline
  void Material::
  DOELibIdRef (::std::auto_ptr< DOELibIdRef_type > x)
  {
    this->DOELibIdRef_.set (x);
  }


  // MaterialId
  // 

  inline
  const MaterialId::materialIdRef_type& MaterialId::
  materialIdRef () const
  {
    return this->materialIdRef_.get ();
  }

  inline
  MaterialId::materialIdRef_type& MaterialId::
  materialIdRef ()
  {
    return this->materialIdRef_.get ();
  }

  inline
  void MaterialId::
  materialIdRef (const materialIdRef_type& x)
  {
    this->materialIdRef_.set (x);
  }

  inline
  void MaterialId::
  materialIdRef (::std::auto_ptr< materialIdRef_type > x)
  {
    this->materialIdRef_.set (x);
  }

  inline
  const MaterialId::percentOfLayer_optional& MaterialId::
  percentOfLayer () const
  {
    return this->percentOfLayer_;
  }

  inline
  MaterialId::percentOfLayer_optional& MaterialId::
  percentOfLayer ()
  {
    return this->percentOfLayer_;
  }

  inline
  void MaterialId::
  percentOfLayer (const percentOfLayer_type& x)
  {
    this->percentOfLayer_.set (x);
  }

  inline
  void MaterialId::
  percentOfLayer (const percentOfLayer_optional& x)
  {
    this->percentOfLayer_ = x;
  }


  // MaxPressure
  // 

  inline
  const MaxPressure::unit_optional& MaxPressure::
  unit () const
  {
    return this->unit_;
  }

  inline
  MaxPressure::unit_optional& MaxPressure::
  unit ()
  {
    return this->unit_;
  }

  inline
  void MaxPressure::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void MaxPressure::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void MaxPressure::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // MaxRelativeHumidity
  // 

  inline
  const MaxRelativeHumidity::unit_type& MaxRelativeHumidity::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  MaxRelativeHumidity::unit_type& MaxRelativeHumidity::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void MaxRelativeHumidity::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void MaxRelativeHumidity::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // MaxTemp
  // 

  inline
  const MaxTemp::unit_optional& MaxTemp::
  unit () const
  {
    return this->unit_;
  }

  inline
  MaxTemp::unit_optional& MaxTemp::
  unit ()
  {
    return this->unit_;
  }

  inline
  void MaxTemp::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void MaxTemp::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void MaxTemp::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // MaximumFlow
  // 

  inline
  const MaximumFlow::unit_optional& MaximumFlow::
  unit () const
  {
    return this->unit_;
  }

  inline
  MaximumFlow::unit_optional& MaximumFlow::
  unit ()
  {
    return this->unit_;
  }

  inline
  void MaximumFlow::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void MaximumFlow::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void MaximumFlow::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Meter
  // 

  inline
  const Meter::Name_sequence& Meter::
  Name () const
  {
    return this->Name_;
  }

  inline
  Meter::Name_sequence& Meter::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Meter::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Meter::Description_sequence& Meter::
  Description () const
  {
    return this->Description_;
  }

  inline
  Meter::Description_sequence& Meter::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Meter::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Meter::UtilityRate_sequence& Meter::
  UtilityRate () const
  {
    return this->UtilityRate_;
  }

  inline
  Meter::UtilityRate_sequence& Meter::
  UtilityRate ()
  {
    return this->UtilityRate_;
  }

  inline
  void Meter::
  UtilityRate (const UtilityRate_sequence& s)
  {
    this->UtilityRate_ = s;
  }

  inline
  const Meter::id_type& Meter::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Meter::id_type& Meter::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Meter::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Meter::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Meter::resourceType_type& Meter::
  resourceType () const
  {
    return this->resourceType_.get ();
  }

  inline
  Meter::resourceType_type& Meter::
  resourceType ()
  {
    return this->resourceType_.get ();
  }

  inline
  void Meter::
  resourceType (const resourceType_type& x)
  {
    this->resourceType_.set (x);
  }

  inline
  void Meter::
  resourceType (::std::auto_ptr< resourceType_type > x)
  {
    this->resourceType_.set (x);
  }

  inline
  const Meter::programId_optional& Meter::
  programId () const
  {
    return this->programId_;
  }

  inline
  Meter::programId_optional& Meter::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Meter::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Meter::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Meter::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // MeterId
  // 

  inline
  const MeterId::meterIdRef_optional& MeterId::
  meterIdRef () const
  {
    return this->meterIdRef_;
  }

  inline
  MeterId::meterIdRef_optional& MeterId::
  meterIdRef ()
  {
    return this->meterIdRef_;
  }

  inline
  void MeterId::
  meterIdRef (const meterIdRef_type& x)
  {
    this->meterIdRef_.set (x);
  }

  inline
  void MeterId::
  meterIdRef (const meterIdRef_optional& x)
  {
    this->meterIdRef_ = x;
  }

  inline
  void MeterId::
  meterIdRef (::std::auto_ptr< meterIdRef_type > x)
  {
    this->meterIdRef_.set (x);
  }


  // MinFlow
  // 

  inline
  const MinFlow::unit_type& MinFlow::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  MinFlow::unit_type& MinFlow::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void MinFlow::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void MinFlow::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const MinFlow::hydronicLoopIdRef_optional& MinFlow::
  hydronicLoopIdRef () const
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  MinFlow::hydronicLoopIdRef_optional& MinFlow::
  hydronicLoopIdRef ()
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  void MinFlow::
  hydronicLoopIdRef (const hydronicLoopIdRef_type& x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  void MinFlow::
  hydronicLoopIdRef (const hydronicLoopIdRef_optional& x)
  {
    this->hydronicLoopIdRef_ = x;
  }

  inline
  void MinFlow::
  hydronicLoopIdRef (::std::auto_ptr< hydronicLoopIdRef_type > x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  const MinFlow::hydronicLoopType_optional& MinFlow::
  hydronicLoopType () const
  {
    return this->hydronicLoopType_;
  }

  inline
  MinFlow::hydronicLoopType_optional& MinFlow::
  hydronicLoopType ()
  {
    return this->hydronicLoopType_;
  }

  inline
  void MinFlow::
  hydronicLoopType (const hydronicLoopType_type& x)
  {
    this->hydronicLoopType_.set (x);
  }

  inline
  void MinFlow::
  hydronicLoopType (const hydronicLoopType_optional& x)
  {
    this->hydronicLoopType_ = x;
  }

  inline
  void MinFlow::
  hydronicLoopType (::std::auto_ptr< hydronicLoopType_type > x)
  {
    this->hydronicLoopType_.set (x);
  }


  // MinimumFlow
  // 

  inline
  const MinimumFlow::unit_optional& MinimumFlow::
  unit () const
  {
    return this->unit_;
  }

  inline
  MinimumFlow::unit_optional& MinimumFlow::
  unit ()
  {
    return this->unit_;
  }

  inline
  void MinimumFlow::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void MinimumFlow::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void MinimumFlow::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // MinRelativeHumidity
  // 

  inline
  const MinRelativeHumidity::unit_type& MinRelativeHumidity::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  MinRelativeHumidity::unit_type& MinRelativeHumidity::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void MinRelativeHumidity::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void MinRelativeHumidity::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // MinPressure
  // 

  inline
  const MinPressure::unit_optional& MinPressure::
  unit () const
  {
    return this->unit_;
  }

  inline
  MinPressure::unit_optional& MinPressure::
  unit ()
  {
    return this->unit_;
  }

  inline
  void MinPressure::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void MinPressure::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void MinPressure::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // MinTemp
  // 

  inline
  const MinTemp::unit_optional& MinTemp::
  unit () const
  {
    return this->unit_;
  }

  inline
  MinTemp::unit_optional& MinTemp::
  unit ()
  {
    return this->unit_;
  }

  inline
  void MinTemp::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void MinTemp::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void MinTemp::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // ModifiedBy
  // 

  inline
  const ModifiedBy::personId_type& ModifiedBy::
  personId () const
  {
    return this->personId_.get ();
  }

  inline
  ModifiedBy::personId_type& ModifiedBy::
  personId ()
  {
    return this->personId_.get ();
  }

  inline
  void ModifiedBy::
  personId (const personId_type& x)
  {
    this->personId_.set (x);
  }

  inline
  void ModifiedBy::
  personId (::std::auto_ptr< personId_type > x)
  {
    this->personId_.set (x);
  }

  inline
  const ModifiedBy::programId_type& ModifiedBy::
  programId () const
  {
    return this->programId_.get ();
  }

  inline
  ModifiedBy::programId_type& ModifiedBy::
  programId ()
  {
    return this->programId_.get ();
  }

  inline
  void ModifiedBy::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void ModifiedBy::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }

  inline
  const ModifiedBy::date_type& ModifiedBy::
  date () const
  {
    return this->date_.get ();
  }

  inline
  ModifiedBy::date_type& ModifiedBy::
  date ()
  {
    return this->date_.get ();
  }

  inline
  void ModifiedBy::
  date (const date_type& x)
  {
    this->date_.set (x);
  }

  inline
  void ModifiedBy::
  date (::std::auto_ptr< date_type > x)
  {
    this->date_.set (x);
  }


  // NaturalVentHiTemp
  // 

  inline
  const NaturalVentHiTemp::unit_optional& NaturalVentHiTemp::
  unit () const
  {
    return this->unit_;
  }

  inline
  NaturalVentHiTemp::unit_optional& NaturalVentHiTemp::
  unit ()
  {
    return this->unit_;
  }

  inline
  void NaturalVentHiTemp::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void NaturalVentHiTemp::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void NaturalVentHiTemp::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // NaturalVentLoTemp
  // 

  inline
  const NaturalVentLoTemp::unit_optional& NaturalVentLoTemp::
  unit () const
  {
    return this->unit_;
  }

  inline
  NaturalVentLoTemp::unit_optional& NaturalVentLoTemp::
  unit ()
  {
    return this->unit_;
  }

  inline
  void NaturalVentLoTemp::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void NaturalVentLoTemp::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void NaturalVentLoTemp::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // OAFlowPerArea
  // 

  inline
  const OAFlowPerArea::unit_type& OAFlowPerArea::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  OAFlowPerArea::unit_type& OAFlowPerArea::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void OAFlowPerArea::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void OAFlowPerArea::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const OAFlowPerArea::programId_optional& OAFlowPerArea::
  programId () const
  {
    return this->programId_;
  }

  inline
  OAFlowPerArea::programId_optional& OAFlowPerArea::
  programId ()
  {
    return this->programId_;
  }

  inline
  void OAFlowPerArea::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void OAFlowPerArea::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void OAFlowPerArea::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // OAFlowPerPerson
  // 

  inline
  const OAFlowPerPerson::unit_type& OAFlowPerPerson::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  OAFlowPerPerson::unit_type& OAFlowPerPerson::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void OAFlowPerPerson::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void OAFlowPerPerson::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const OAFlowPerPerson::programId_optional& OAFlowPerPerson::
  programId () const
  {
    return this->programId_;
  }

  inline
  OAFlowPerPerson::programId_optional& OAFlowPerPerson::
  programId ()
  {
    return this->programId_;
  }

  inline
  void OAFlowPerPerson::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void OAFlowPerPerson::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void OAFlowPerPerson::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // Opening
  // 

  inline
  const Opening::Name_sequence& Opening::
  Name () const
  {
    return this->Name_;
  }

  inline
  Opening::Name_sequence& Opening::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Opening::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Opening::Description_sequence& Opening::
  Description () const
  {
    return this->Description_;
  }

  inline
  Opening::Description_sequence& Opening::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Opening::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Opening::ShadeControl_sequence& Opening::
  ShadeControl () const
  {
    return this->ShadeControl_;
  }

  inline
  Opening::ShadeControl_sequence& Opening::
  ShadeControl ()
  {
    return this->ShadeControl_;
  }

  inline
  void Opening::
  ShadeControl (const ShadeControl_sequence& s)
  {
    this->ShadeControl_ = s;
  }

  inline
  const Opening::U_value_sequence& Opening::
  U_value () const
  {
    return this->U_value_;
  }

  inline
  Opening::U_value_sequence& Opening::
  U_value ()
  {
    return this->U_value_;
  }

  inline
  void Opening::
  U_value (const U_value_sequence& s)
  {
    this->U_value_ = s;
  }

  inline
  const Opening::ShadingCoeff_sequence& Opening::
  ShadingCoeff () const
  {
    return this->ShadingCoeff_;
  }

  inline
  Opening::ShadingCoeff_sequence& Opening::
  ShadingCoeff ()
  {
    return this->ShadingCoeff_;
  }

  inline
  void Opening::
  ShadingCoeff (const ShadingCoeff_sequence& s)
  {
    this->ShadingCoeff_ = s;
  }

  inline
  const Opening::SolarHeatGainCoeff_sequence& Opening::
  SolarHeatGainCoeff () const
  {
    return this->SolarHeatGainCoeff_;
  }

  inline
  Opening::SolarHeatGainCoeff_sequence& Opening::
  SolarHeatGainCoeff ()
  {
    return this->SolarHeatGainCoeff_;
  }

  inline
  void Opening::
  SolarHeatGainCoeff (const SolarHeatGainCoeff_sequence& s)
  {
    this->SolarHeatGainCoeff_ = s;
  }

  inline
  const Opening::Transmittance_sequence& Opening::
  Transmittance () const
  {
    return this->Transmittance_;
  }

  inline
  Opening::Transmittance_sequence& Opening::
  Transmittance ()
  {
    return this->Transmittance_;
  }

  inline
  void Opening::
  Transmittance (const Transmittance_sequence& s)
  {
    this->Transmittance_ = s;
  }

  inline
  const Opening::Reflectance_sequence& Opening::
  Reflectance () const
  {
    return this->Reflectance_;
  }

  inline
  Opening::Reflectance_sequence& Opening::
  Reflectance ()
  {
    return this->Reflectance_;
  }

  inline
  void Opening::
  Reflectance (const Reflectance_sequence& s)
  {
    this->Reflectance_ = s;
  }

  inline
  const Opening::GlazeConductivity_sequence& Opening::
  GlazeConductivity () const
  {
    return this->GlazeConductivity_;
  }

  inline
  Opening::GlazeConductivity_sequence& Opening::
  GlazeConductivity ()
  {
    return this->GlazeConductivity_;
  }

  inline
  void Opening::
  GlazeConductivity (const GlazeConductivity_sequence& s)
  {
    this->GlazeConductivity_ = s;
  }

  inline
  const Opening::Emittance_sequence& Opening::
  Emittance () const
  {
    return this->Emittance_;
  }

  inline
  Opening::Emittance_sequence& Opening::
  Emittance ()
  {
    return this->Emittance_;
  }

  inline
  void Opening::
  Emittance (const Emittance_sequence& s)
  {
    this->Emittance_ = s;
  }

  inline
  const Opening::Setback_sequence& Opening::
  Setback () const
  {
    return this->Setback_;
  }

  inline
  Opening::Setback_sequence& Opening::
  Setback ()
  {
    return this->Setback_;
  }

  inline
  void Opening::
  Setback (const Setback_sequence& s)
  {
    this->Setback_ = s;
  }

  inline
  const Opening::NaturalVentHiTemp_sequence& Opening::
  NaturalVentHiTemp () const
  {
    return this->NaturalVentHiTemp_;
  }

  inline
  Opening::NaturalVentHiTemp_sequence& Opening::
  NaturalVentHiTemp ()
  {
    return this->NaturalVentHiTemp_;
  }

  inline
  void Opening::
  NaturalVentHiTemp (const NaturalVentHiTemp_sequence& s)
  {
    this->NaturalVentHiTemp_ = s;
  }

  inline
  const Opening::NaturalVentLoTemp_sequence& Opening::
  NaturalVentLoTemp () const
  {
    return this->NaturalVentLoTemp_;
  }

  inline
  Opening::NaturalVentLoTemp_sequence& Opening::
  NaturalVentLoTemp ()
  {
    return this->NaturalVentLoTemp_;
  }

  inline
  void Opening::
  NaturalVentLoTemp (const NaturalVentLoTemp_sequence& s)
  {
    this->NaturalVentLoTemp_ = s;
  }

  inline
  const Opening::NaturalVentOccDep_sequence& Opening::
  NaturalVentOccDep () const
  {
    return this->NaturalVentOccDep_;
  }

  inline
  Opening::NaturalVentOccDep_sequence& Opening::
  NaturalVentOccDep ()
  {
    return this->NaturalVentOccDep_;
  }

  inline
  void Opening::
  NaturalVentOccDep (const NaturalVentOccDep_sequence& s)
  {
    this->NaturalVentOccDep_ = s;
  }

  inline
  const Opening::RectangularGeometry_sequence& Opening::
  RectangularGeometry () const
  {
    return this->RectangularGeometry_;
  }

  inline
  Opening::RectangularGeometry_sequence& Opening::
  RectangularGeometry ()
  {
    return this->RectangularGeometry_;
  }

  inline
  void Opening::
  RectangularGeometry (const RectangularGeometry_sequence& s)
  {
    this->RectangularGeometry_ = s;
  }

  inline
  const Opening::PlanarGeometry_sequence& Opening::
  PlanarGeometry () const
  {
    return this->PlanarGeometry_;
  }

  inline
  Opening::PlanarGeometry_sequence& Opening::
  PlanarGeometry ()
  {
    return this->PlanarGeometry_;
  }

  inline
  void Opening::
  PlanarGeometry (const PlanarGeometry_sequence& s)
  {
    this->PlanarGeometry_ = s;
  }

  inline
  const Opening::CADObjectId_sequence& Opening::
  CADObjectId () const
  {
    return this->CADObjectId_;
  }

  inline
  Opening::CADObjectId_sequence& Opening::
  CADObjectId ()
  {
    return this->CADObjectId_;
  }

  inline
  void Opening::
  CADObjectId (const CADObjectId_sequence& s)
  {
    this->CADObjectId_ = s;
  }

  inline
  const Opening::id_type& Opening::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Opening::id_type& Opening::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Opening::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Opening::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Opening::interiorShadeType_optional& Opening::
  interiorShadeType () const
  {
    return this->interiorShadeType_;
  }

  inline
  Opening::interiorShadeType_optional& Opening::
  interiorShadeType ()
  {
    return this->interiorShadeType_;
  }

  inline
  void Opening::
  interiorShadeType (const interiorShadeType_type& x)
  {
    this->interiorShadeType_.set (x);
  }

  inline
  void Opening::
  interiorShadeType (const interiorShadeType_optional& x)
  {
    this->interiorShadeType_ = x;
  }

  inline
  void Opening::
  interiorShadeType (::std::auto_ptr< interiorShadeType_type > x)
  {
    this->interiorShadeType_.set (x);
  }

  inline
  const Opening::exteriorShadeType_optional& Opening::
  exteriorShadeType () const
  {
    return this->exteriorShadeType_;
  }

  inline
  Opening::exteriorShadeType_optional& Opening::
  exteriorShadeType ()
  {
    return this->exteriorShadeType_;
  }

  inline
  void Opening::
  exteriorShadeType (const exteriorShadeType_type& x)
  {
    this->exteriorShadeType_.set (x);
  }

  inline
  void Opening::
  exteriorShadeType (const exteriorShadeType_optional& x)
  {
    this->exteriorShadeType_ = x;
  }

  inline
  void Opening::
  exteriorShadeType (::std::auto_ptr< exteriorShadeType_type > x)
  {
    this->exteriorShadeType_.set (x);
  }

  inline
  const Opening::windowTypeIdRef_optional& Opening::
  windowTypeIdRef () const
  {
    return this->windowTypeIdRef_;
  }

  inline
  Opening::windowTypeIdRef_optional& Opening::
  windowTypeIdRef ()
  {
    return this->windowTypeIdRef_;
  }

  inline
  void Opening::
  windowTypeIdRef (const windowTypeIdRef_type& x)
  {
    this->windowTypeIdRef_.set (x);
  }

  inline
  void Opening::
  windowTypeIdRef (const windowTypeIdRef_optional& x)
  {
    this->windowTypeIdRef_ = x;
  }

  inline
  void Opening::
  windowTypeIdRef (::std::auto_ptr< windowTypeIdRef_type > x)
  {
    this->windowTypeIdRef_.set (x);
  }

  inline
  const Opening::constructionIdRef_optional& Opening::
  constructionIdRef () const
  {
    return this->constructionIdRef_;
  }

  inline
  Opening::constructionIdRef_optional& Opening::
  constructionIdRef ()
  {
    return this->constructionIdRef_;
  }

  inline
  void Opening::
  constructionIdRef (const constructionIdRef_type& x)
  {
    this->constructionIdRef_.set (x);
  }

  inline
  void Opening::
  constructionIdRef (const constructionIdRef_optional& x)
  {
    this->constructionIdRef_ = x;
  }

  inline
  void Opening::
  constructionIdRef (::std::auto_ptr< constructionIdRef_type > x)
  {
    this->constructionIdRef_.set (x);
  }

  inline
  const Opening::openingType_type& Opening::
  openingType () const
  {
    return this->openingType_.get ();
  }

  inline
  Opening::openingType_type& Opening::
  openingType ()
  {
    return this->openingType_.get ();
  }

  inline
  void Opening::
  openingType (const openingType_type& x)
  {
    this->openingType_.set (x);
  }

  inline
  void Opening::
  openingType (::std::auto_ptr< openingType_type > x)
  {
    this->openingType_.set (x);
  }

  inline
  const Opening::ifcGUID_optional& Opening::
  ifcGUID () const
  {
    return this->ifcGUID_;
  }

  inline
  Opening::ifcGUID_optional& Opening::
  ifcGUID ()
  {
    return this->ifcGUID_;
  }

  inline
  void Opening::
  ifcGUID (const ifcGUID_type& x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  void Opening::
  ifcGUID (const ifcGUID_optional& x)
  {
    this->ifcGUID_ = x;
  }

  inline
  void Opening::
  ifcGUID (::std::auto_ptr< ifcGUID_type > x)
  {
    this->ifcGUID_.set (x);
  }


  // OperationRange
  // 

  inline
  const OperationRange::LowValue_sequence& OperationRange::
  LowValue () const
  {
    return this->LowValue_;
  }

  inline
  OperationRange::LowValue_sequence& OperationRange::
  LowValue ()
  {
    return this->LowValue_;
  }

  inline
  void OperationRange::
  LowValue (const LowValue_sequence& s)
  {
    this->LowValue_ = s;
  }

  inline
  const OperationRange::HighValue_sequence& OperationRange::
  HighValue () const
  {
    return this->HighValue_;
  }

  inline
  OperationRange::HighValue_sequence& OperationRange::
  HighValue ()
  {
    return this->HighValue_;
  }

  inline
  void OperationRange::
  HighValue (const HighValue_sequence& s)
  {
    this->HighValue_ = s;
  }


  // OperationSchedule
  // 

  inline
  const OperationSchedule::OperationRange_sequence& OperationSchedule::
  OperationRange () const
  {
    return this->OperationRange_;
  }

  inline
  OperationSchedule::OperationRange_sequence& OperationSchedule::
  OperationRange ()
  {
    return this->OperationRange_;
  }

  inline
  void OperationSchedule::
  OperationRange (const OperationRange_sequence& s)
  {
    this->OperationRange_ = s;
  }

  inline
  const OperationSchedule::scheduleIdRef_optional& OperationSchedule::
  scheduleIdRef () const
  {
    return this->scheduleIdRef_;
  }

  inline
  OperationSchedule::scheduleIdRef_optional& OperationSchedule::
  scheduleIdRef ()
  {
    return this->scheduleIdRef_;
  }

  inline
  void OperationSchedule::
  scheduleIdRef (const scheduleIdRef_type& x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  void OperationSchedule::
  scheduleIdRef (const scheduleIdRef_optional& x)
  {
    this->scheduleIdRef_ = x;
  }

  inline
  void OperationSchedule::
  scheduleIdRef (::std::auto_ptr< scheduleIdRef_type > x)
  {
    this->scheduleIdRef_.set (x);
  }


  // PeakDomesticHotWaterFlow
  // 

  inline
  const PeakDomesticHotWaterFlow::unit_type& PeakDomesticHotWaterFlow::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  PeakDomesticHotWaterFlow::unit_type& PeakDomesticHotWaterFlow::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void PeakDomesticHotWaterFlow::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void PeakDomesticHotWaterFlow::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const PeakDomesticHotWaterFlow::hydronicLoopIdRef_type& PeakDomesticHotWaterFlow::
  hydronicLoopIdRef () const
  {
    return this->hydronicLoopIdRef_.get ();
  }

  inline
  PeakDomesticHotWaterFlow::hydronicLoopIdRef_type& PeakDomesticHotWaterFlow::
  hydronicLoopIdRef ()
  {
    return this->hydronicLoopIdRef_.get ();
  }

  inline
  void PeakDomesticHotWaterFlow::
  hydronicLoopIdRef (const hydronicLoopIdRef_type& x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  void PeakDomesticHotWaterFlow::
  hydronicLoopIdRef (::std::auto_ptr< hydronicLoopIdRef_type > x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  const PeakDomesticHotWaterFlow::waterUseScheduleIdRef_type& PeakDomesticHotWaterFlow::
  waterUseScheduleIdRef () const
  {
    return this->waterUseScheduleIdRef_.get ();
  }

  inline
  PeakDomesticHotWaterFlow::waterUseScheduleIdRef_type& PeakDomesticHotWaterFlow::
  waterUseScheduleIdRef ()
  {
    return this->waterUseScheduleIdRef_.get ();
  }

  inline
  void PeakDomesticHotWaterFlow::
  waterUseScheduleIdRef (const waterUseScheduleIdRef_type& x)
  {
    this->waterUseScheduleIdRef_.set (x);
  }

  inline
  void PeakDomesticHotWaterFlow::
  waterUseScheduleIdRef (::std::auto_ptr< waterUseScheduleIdRef_type > x)
  {
    this->waterUseScheduleIdRef_.set (x);
  }

  inline
  const PeakDomesticHotWaterFlow::programId_optional& PeakDomesticHotWaterFlow::
  programId () const
  {
    return this->programId_;
  }

  inline
  PeakDomesticHotWaterFlow::programId_optional& PeakDomesticHotWaterFlow::
  programId ()
  {
    return this->programId_;
  }

  inline
  void PeakDomesticHotWaterFlow::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void PeakDomesticHotWaterFlow::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void PeakDomesticHotWaterFlow::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // PeopleNumber
  // 

  inline
  const PeopleNumber::unit_type& PeopleNumber::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  PeopleNumber::unit_type& PeopleNumber::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void PeopleNumber::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void PeopleNumber::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const PeopleNumber::programId_optional& PeopleNumber::
  programId () const
  {
    return this->programId_;
  }

  inline
  PeopleNumber::programId_optional& PeopleNumber::
  programId ()
  {
    return this->programId_;
  }

  inline
  void PeopleNumber::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void PeopleNumber::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void PeopleNumber::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // PeopleHeatGain
  // 

  inline
  const PeopleHeatGain::unit_type& PeopleHeatGain::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  PeopleHeatGain::unit_type& PeopleHeatGain::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void PeopleHeatGain::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void PeopleHeatGain::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const PeopleHeatGain::heatGainType_type& PeopleHeatGain::
  heatGainType () const
  {
    return this->heatGainType_.get ();
  }

  inline
  PeopleHeatGain::heatGainType_type& PeopleHeatGain::
  heatGainType ()
  {
    return this->heatGainType_.get ();
  }

  inline
  void PeopleHeatGain::
  heatGainType (const heatGainType_type& x)
  {
    this->heatGainType_.set (x);
  }

  inline
  void PeopleHeatGain::
  heatGainType (::std::auto_ptr< heatGainType_type > x)
  {
    this->heatGainType_.set (x);
  }

  inline
  const PeopleHeatGain::programId_optional& PeopleHeatGain::
  programId () const
  {
    return this->programId_;
  }

  inline
  PeopleHeatGain::programId_optional& PeopleHeatGain::
  programId ()
  {
    return this->programId_;
  }

  inline
  void PeopleHeatGain::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void PeopleHeatGain::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void PeopleHeatGain::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // PercentAreaDaylitControlled
  // 

  inline
  const PercentAreaDaylitControlled::unit_type& PercentAreaDaylitControlled::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  PercentAreaDaylitControlled::unit_type& PercentAreaDaylitControlled::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void PercentAreaDaylitControlled::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void PercentAreaDaylitControlled::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // PercentExisting
  // 

  inline
  const PercentExisting::unit_type& PercentExisting::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  PercentExisting::unit_type& PercentExisting::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void PercentExisting::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void PercentExisting::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Performance
  // 

  inline
  const Performance::PointData_sequence& Performance::
  PointData () const
  {
    return this->PointData_;
  }

  inline
  Performance::PointData_sequence& Performance::
  PointData ()
  {
    return this->PointData_;
  }

  inline
  void Performance::
  PointData (const PointData_sequence& s)
  {
    this->PointData_ = s;
  }

  inline
  const Performance::Equation_sequence& Performance::
  Equation () const
  {
    return this->Equation_;
  }

  inline
  Performance::Equation_sequence& Performance::
  Equation ()
  {
    return this->Equation_;
  }

  inline
  void Performance::
  Equation (const Equation_sequence& s)
  {
    this->Equation_ = s;
  }

  inline
  const Performance::id_optional& Performance::
  id () const
  {
    return this->id_;
  }

  inline
  Performance::id_optional& Performance::
  id ()
  {
    return this->id_;
  }

  inline
  void Performance::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Performance::
  id (const id_optional& x)
  {
    this->id_ = x;
  }

  inline
  void Performance::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Performance::performanceType_optional& Performance::
  performanceType () const
  {
    return this->performanceType_;
  }

  inline
  Performance::performanceType_optional& Performance::
  performanceType ()
  {
    return this->performanceType_;
  }

  inline
  void Performance::
  performanceType (const performanceType_type& x)
  {
    this->performanceType_.set (x);
  }

  inline
  void Performance::
  performanceType (const performanceType_optional& x)
  {
    this->performanceType_ = x;
  }

  inline
  void Performance::
  performanceType (::std::auto_ptr< performanceType_type > x)
  {
    this->performanceType_.set (x);
  }


  // Permeance
  // 

  inline
  const Permeance::unit_type& Permeance::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Permeance::unit_type& Permeance::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Permeance::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Permeance::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // PersonInfo
  // 

  inline
  const PersonInfo::FirstName_sequence& PersonInfo::
  FirstName () const
  {
    return this->FirstName_;
  }

  inline
  PersonInfo::FirstName_sequence& PersonInfo::
  FirstName ()
  {
    return this->FirstName_;
  }

  inline
  void PersonInfo::
  FirstName (const FirstName_sequence& s)
  {
    this->FirstName_ = s;
  }

  inline
  const PersonInfo::LastName_sequence& PersonInfo::
  LastName () const
  {
    return this->LastName_;
  }

  inline
  PersonInfo::LastName_sequence& PersonInfo::
  LastName ()
  {
    return this->LastName_;
  }

  inline
  void PersonInfo::
  LastName (const LastName_sequence& s)
  {
    this->LastName_ = s;
  }

  inline
  const PersonInfo::MiddleName_sequence& PersonInfo::
  MiddleName () const
  {
    return this->MiddleName_;
  }

  inline
  PersonInfo::MiddleName_sequence& PersonInfo::
  MiddleName ()
  {
    return this->MiddleName_;
  }

  inline
  void PersonInfo::
  MiddleName (const MiddleName_sequence& s)
  {
    this->MiddleName_ = s;
  }

  inline
  const PersonInfo::Address1_sequence& PersonInfo::
  Address1 () const
  {
    return this->Address1_;
  }

  inline
  PersonInfo::Address1_sequence& PersonInfo::
  Address1 ()
  {
    return this->Address1_;
  }

  inline
  void PersonInfo::
  Address1 (const Address1_sequence& s)
  {
    this->Address1_ = s;
  }

  inline
  const PersonInfo::Address2_sequence& PersonInfo::
  Address2 () const
  {
    return this->Address2_;
  }

  inline
  PersonInfo::Address2_sequence& PersonInfo::
  Address2 ()
  {
    return this->Address2_;
  }

  inline
  void PersonInfo::
  Address2 (const Address2_sequence& s)
  {
    this->Address2_ = s;
  }

  inline
  const PersonInfo::City_sequence& PersonInfo::
  City () const
  {
    return this->City_;
  }

  inline
  PersonInfo::City_sequence& PersonInfo::
  City ()
  {
    return this->City_;
  }

  inline
  void PersonInfo::
  City (const City_sequence& s)
  {
    this->City_ = s;
  }

  inline
  const PersonInfo::State_sequence& PersonInfo::
  State () const
  {
    return this->State_;
  }

  inline
  PersonInfo::State_sequence& PersonInfo::
  State ()
  {
    return this->State_;
  }

  inline
  void PersonInfo::
  State (const State_sequence& s)
  {
    this->State_ = s;
  }

  inline
  const PersonInfo::ZipCode_sequence& PersonInfo::
  ZipCode () const
  {
    return this->ZipCode_;
  }

  inline
  PersonInfo::ZipCode_sequence& PersonInfo::
  ZipCode ()
  {
    return this->ZipCode_;
  }

  inline
  void PersonInfo::
  ZipCode (const ZipCode_sequence& s)
  {
    this->ZipCode_ = s;
  }

  inline
  const PersonInfo::Country_sequence& PersonInfo::
  Country () const
  {
    return this->Country_;
  }

  inline
  PersonInfo::Country_sequence& PersonInfo::
  Country ()
  {
    return this->Country_;
  }

  inline
  void PersonInfo::
  Country (const Country_sequence& s)
  {
    this->Country_ = s;
  }

  inline
  const PersonInfo::PhoneNumber_sequence& PersonInfo::
  PhoneNumber () const
  {
    return this->PhoneNumber_;
  }

  inline
  PersonInfo::PhoneNumber_sequence& PersonInfo::
  PhoneNumber ()
  {
    return this->PhoneNumber_;
  }

  inline
  void PersonInfo::
  PhoneNumber (const PhoneNumber_sequence& s)
  {
    this->PhoneNumber_ = s;
  }

  inline
  const PersonInfo::Email1Address_sequence& PersonInfo::
  Email1Address () const
  {
    return this->Email1Address_;
  }

  inline
  PersonInfo::Email1Address_sequence& PersonInfo::
  Email1Address ()
  {
    return this->Email1Address_;
  }

  inline
  void PersonInfo::
  Email1Address (const Email1Address_sequence& s)
  {
    this->Email1Address_ = s;
  }

  inline
  const PersonInfo::WebPage_sequence& PersonInfo::
  WebPage () const
  {
    return this->WebPage_;
  }

  inline
  PersonInfo::WebPage_sequence& PersonInfo::
  WebPage ()
  {
    return this->WebPage_;
  }

  inline
  void PersonInfo::
  WebPage (const WebPage_sequence& s)
  {
    this->WebPage_ = s;
  }

  inline
  const PersonInfo::CompanyName_sequence& PersonInfo::
  CompanyName () const
  {
    return this->CompanyName_;
  }

  inline
  PersonInfo::CompanyName_sequence& PersonInfo::
  CompanyName ()
  {
    return this->CompanyName_;
  }

  inline
  void PersonInfo::
  CompanyName (const CompanyName_sequence& s)
  {
    this->CompanyName_ = s;
  }

  inline
  const PersonInfo::id_type& PersonInfo::
  id () const
  {
    return this->id_.get ();
  }

  inline
  PersonInfo::id_type& PersonInfo::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void PersonInfo::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void PersonInfo::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }


  // PhotometryOrientation
  // 

  inline
  const PhotometryOrientation::CartesianPoint_sequence& PhotometryOrientation::
  CartesianPoint () const
  {
    return this->CartesianPoint_;
  }

  inline
  PhotometryOrientation::CartesianPoint_sequence& PhotometryOrientation::
  CartesianPoint ()
  {
    return this->CartesianPoint_;
  }

  inline
  void PhotometryOrientation::
  CartesianPoint (const CartesianPoint_sequence& s)
  {
    this->CartesianPoint_ = s;
  }


  // PlanarGeometry
  // 

  inline
  const PlanarGeometry::PolyLoop_sequence& PlanarGeometry::
  PolyLoop () const
  {
    return this->PolyLoop_;
  }

  inline
  PlanarGeometry::PolyLoop_sequence& PlanarGeometry::
  PolyLoop ()
  {
    return this->PolyLoop_;
  }

  inline
  void PlanarGeometry::
  PolyLoop (const PolyLoop_sequence& s)
  {
    this->PolyLoop_ = s;
  }

  inline
  const PlanarGeometry::id_optional& PlanarGeometry::
  id () const
  {
    return this->id_;
  }

  inline
  PlanarGeometry::id_optional& PlanarGeometry::
  id ()
  {
    return this->id_;
  }

  inline
  void PlanarGeometry::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void PlanarGeometry::
  id (const id_optional& x)
  {
    this->id_ = x;
  }

  inline
  void PlanarGeometry::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const PlanarGeometry::unit_optional& PlanarGeometry::
  unit () const
  {
    return this->unit_;
  }

  inline
  PlanarGeometry::unit_optional& PlanarGeometry::
  unit ()
  {
    return this->unit_;
  }

  inline
  void PlanarGeometry::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void PlanarGeometry::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void PlanarGeometry::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // PointData
  // 

  inline
  const PointData::IndependentVariable_sequence& PointData::
  IndependentVariable () const
  {
    return this->IndependentVariable_;
  }

  inline
  PointData::IndependentVariable_sequence& PointData::
  IndependentVariable ()
  {
    return this->IndependentVariable_;
  }

  inline
  void PointData::
  IndependentVariable (const IndependentVariable_sequence& s)
  {
    this->IndependentVariable_ = s;
  }

  inline
  const PointData::DependentVariable_sequence& PointData::
  DependentVariable () const
  {
    return this->DependentVariable_;
  }

  inline
  PointData::DependentVariable_sequence& PointData::
  DependentVariable ()
  {
    return this->DependentVariable_;
  }

  inline
  void PointData::
  DependentVariable (const DependentVariable_sequence& s)
  {
    this->DependentVariable_ = s;
  }

  inline
  const PointData::Data_sequence& PointData::
  Data () const
  {
    return this->Data_;
  }

  inline
  PointData::Data_sequence& PointData::
  Data ()
  {
    return this->Data_;
  }

  inline
  void PointData::
  Data (const Data_sequence& s)
  {
    this->Data_ = s;
  }


  // PolyLoop
  // 

  inline
  const PolyLoop::CartesianPoint_sequence& PolyLoop::
  CartesianPoint () const
  {
    return this->CartesianPoint_;
  }

  inline
  PolyLoop::CartesianPoint_sequence& PolyLoop::
  CartesianPoint ()
  {
    return this->CartesianPoint_;
  }

  inline
  void PolyLoop::
  CartesianPoint (const CartesianPoint_sequence& s)
  {
    this->CartesianPoint_ = s;
  }


  // Porosity
  // 

  inline
  const Porosity::unit_type& Porosity::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Porosity::unit_type& Porosity::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Porosity::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Porosity::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Power
  // 

  inline
  const Power::unit_type& Power::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Power::unit_type& Power::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Power::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Power::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Power::powerType_type& Power::
  powerType () const
  {
    return this->powerType_.get ();
  }

  inline
  Power::powerType_type& Power::
  powerType ()
  {
    return this->powerType_.get ();
  }

  inline
  void Power::
  powerType (const powerType_type& x)
  {
    this->powerType_.set (x);
  }

  inline
  void Power::
  powerType (::std::auto_ptr< powerType_type > x)
  {
    this->powerType_.set (x);
  }

  inline
  const Power::useType_type& Power::
  useType () const
  {
    return this->useType_.get ();
  }

  inline
  Power::useType_type& Power::
  useType ()
  {
    return this->useType_.get ();
  }

  inline
  void Power::
  useType (const useType_type& x)
  {
    this->useType_.set (x);
  }

  inline
  void Power::
  useType (::std::auto_ptr< useType_type > x)
  {
    this->useType_.set (x);
  }

  inline
  const Power::meterIdRef_optional& Power::
  meterIdRef () const
  {
    return this->meterIdRef_;
  }

  inline
  Power::meterIdRef_optional& Power::
  meterIdRef ()
  {
    return this->meterIdRef_;
  }

  inline
  void Power::
  meterIdRef (const meterIdRef_type& x)
  {
    this->meterIdRef_.set (x);
  }

  inline
  void Power::
  meterIdRef (const meterIdRef_optional& x)
  {
    this->meterIdRef_ = x;
  }

  inline
  void Power::
  meterIdRef (::std::auto_ptr< meterIdRef_type > x)
  {
    this->meterIdRef_.set (x);
  }


  // PrandtlNumberFofT
  // 

  inline
  const PrandtlNumberFofT::unit_type& PrandtlNumberFofT::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  PrandtlNumberFofT::unit_type& PrandtlNumberFofT::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void PrandtlNumberFofT::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void PrandtlNumberFofT::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // PressureControl
  // 

  inline
  const PressureControl::DesignPressure_sequence& PressureControl::
  DesignPressure () const
  {
    return this->DesignPressure_;
  }

  inline
  PressureControl::DesignPressure_sequence& PressureControl::
  DesignPressure ()
  {
    return this->DesignPressure_;
  }

  inline
  void PressureControl::
  DesignPressure (const DesignPressure_sequence& s)
  {
    this->DesignPressure_ = s;
  }

  inline
  const PressureControl::MinPressure_sequence& PressureControl::
  MinPressure () const
  {
    return this->MinPressure_;
  }

  inline
  PressureControl::MinPressure_sequence& PressureControl::
  MinPressure ()
  {
    return this->MinPressure_;
  }

  inline
  void PressureControl::
  MinPressure (const MinPressure_sequence& s)
  {
    this->MinPressure_ = s;
  }

  inline
  const PressureControl::MaxPressure_sequence& PressureControl::
  MaxPressure () const
  {
    return this->MaxPressure_;
  }

  inline
  PressureControl::MaxPressure_sequence& PressureControl::
  MaxPressure ()
  {
    return this->MaxPressure_;
  }

  inline
  void PressureControl::
  MaxPressure (const MaxPressure_sequence& s)
  {
    this->MaxPressure_ = s;
  }


  // ProductName
  // 


  // ProjectEntity
  // 

  inline
  const ProjectEntity::FileName_sequence& ProjectEntity::
  FileName () const
  {
    return this->FileName_;
  }

  inline
  ProjectEntity::FileName_sequence& ProjectEntity::
  FileName ()
  {
    return this->FileName_;
  }

  inline
  void ProjectEntity::
  FileName (const FileName_sequence& s)
  {
    this->FileName_ = s;
  }

  inline
  const ProjectEntity::URI_sequence& ProjectEntity::
  URI () const
  {
    return this->URI_;
  }

  inline
  ProjectEntity::URI_sequence& ProjectEntity::
  URI ()
  {
    return this->URI_;
  }

  inline
  void ProjectEntity::
  URI (const URI_sequence& s)
  {
    this->URI_ = s;
  }

  inline
  const ProjectEntity::GUID_sequence& ProjectEntity::
  GUID () const
  {
    return this->GUID_;
  }

  inline
  ProjectEntity::GUID_sequence& ProjectEntity::
  GUID ()
  {
    return this->GUID_;
  }

  inline
  void ProjectEntity::
  GUID (const GUID_sequence& s)
  {
    this->GUID_ = s;
  }


  // ProgramInfo
  // 

  inline
  const ProgramInfo::CompanyName_sequence& ProgramInfo::
  CompanyName () const
  {
    return this->CompanyName_;
  }

  inline
  ProgramInfo::CompanyName_sequence& ProgramInfo::
  CompanyName ()
  {
    return this->CompanyName_;
  }

  inline
  void ProgramInfo::
  CompanyName (const CompanyName_sequence& s)
  {
    this->CompanyName_ = s;
  }

  inline
  const ProgramInfo::ProductName_sequence& ProgramInfo::
  ProductName () const
  {
    return this->ProductName_;
  }

  inline
  ProgramInfo::ProductName_sequence& ProgramInfo::
  ProductName ()
  {
    return this->ProductName_;
  }

  inline
  void ProgramInfo::
  ProductName (const ProductName_sequence& s)
  {
    this->ProductName_ = s;
  }

  inline
  const ProgramInfo::Version_sequence& ProgramInfo::
  Version () const
  {
    return this->Version_;
  }

  inline
  ProgramInfo::Version_sequence& ProgramInfo::
  Version ()
  {
    return this->Version_;
  }

  inline
  void ProgramInfo::
  Version (const Version_sequence& s)
  {
    this->Version_ = s;
  }

  inline
  const ProgramInfo::Platform_sequence& ProgramInfo::
  Platform () const
  {
    return this->Platform_;
  }

  inline
  ProgramInfo::Platform_sequence& ProgramInfo::
  Platform ()
  {
    return this->Platform_;
  }

  inline
  void ProgramInfo::
  Platform (const Platform_sequence& s)
  {
    this->Platform_ = s;
  }

  inline
  const ProgramInfo::ProjectEntity_sequence& ProgramInfo::
  ProjectEntity () const
  {
    return this->ProjectEntity_;
  }

  inline
  ProgramInfo::ProjectEntity_sequence& ProgramInfo::
  ProjectEntity ()
  {
    return this->ProjectEntity_;
  }

  inline
  void ProgramInfo::
  ProjectEntity (const ProjectEntity_sequence& s)
  {
    this->ProjectEntity_ = s;
  }

  inline
  const ProgramInfo::id_type& ProgramInfo::
  id () const
  {
    return this->id_.get ();
  }

  inline
  ProgramInfo::id_type& ProgramInfo::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void ProgramInfo::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void ProgramInfo::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }


  // RatedFlow
  // 

  inline
  const RatedFlow::unit_type& RatedFlow::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  RatedFlow::unit_type& RatedFlow::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void RatedFlow::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void RatedFlow::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const RatedFlow::hydronicLoopIdRef_optional& RatedFlow::
  hydronicLoopIdRef () const
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  RatedFlow::hydronicLoopIdRef_optional& RatedFlow::
  hydronicLoopIdRef ()
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  void RatedFlow::
  hydronicLoopIdRef (const hydronicLoopIdRef_type& x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  void RatedFlow::
  hydronicLoopIdRef (const hydronicLoopIdRef_optional& x)
  {
    this->hydronicLoopIdRef_ = x;
  }

  inline
  void RatedFlow::
  hydronicLoopIdRef (::std::auto_ptr< hydronicLoopIdRef_type > x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  const RatedFlow::hydronicLoopType_optional& RatedFlow::
  hydronicLoopType () const
  {
    return this->hydronicLoopType_;
  }

  inline
  RatedFlow::hydronicLoopType_optional& RatedFlow::
  hydronicLoopType ()
  {
    return this->hydronicLoopType_;
  }

  inline
  void RatedFlow::
  hydronicLoopType (const hydronicLoopType_type& x)
  {
    this->hydronicLoopType_.set (x);
  }

  inline
  void RatedFlow::
  hydronicLoopType (const hydronicLoopType_optional& x)
  {
    this->hydronicLoopType_ = x;
  }

  inline
  void RatedFlow::
  hydronicLoopType (::std::auto_ptr< hydronicLoopType_type > x)
  {
    this->hydronicLoopType_.set (x);
  }


  // RectangularGeometry
  // 

  inline
  const RectangularGeometry::Azimuth_sequence& RectangularGeometry::
  Azimuth () const
  {
    return this->Azimuth_;
  }

  inline
  RectangularGeometry::Azimuth_sequence& RectangularGeometry::
  Azimuth ()
  {
    return this->Azimuth_;
  }

  inline
  void RectangularGeometry::
  Azimuth (const Azimuth_sequence& s)
  {
    this->Azimuth_ = s;
  }

  inline
  const RectangularGeometry::CartesianPoint_sequence& RectangularGeometry::
  CartesianPoint () const
  {
    return this->CartesianPoint_;
  }

  inline
  RectangularGeometry::CartesianPoint_sequence& RectangularGeometry::
  CartesianPoint ()
  {
    return this->CartesianPoint_;
  }

  inline
  void RectangularGeometry::
  CartesianPoint (const CartesianPoint_sequence& s)
  {
    this->CartesianPoint_ = s;
  }

  inline
  const RectangularGeometry::Tilt_sequence& RectangularGeometry::
  Tilt () const
  {
    return this->Tilt_;
  }

  inline
  RectangularGeometry::Tilt_sequence& RectangularGeometry::
  Tilt ()
  {
    return this->Tilt_;
  }

  inline
  void RectangularGeometry::
  Tilt (const Tilt_sequence& s)
  {
    this->Tilt_ = s;
  }

  inline
  const RectangularGeometry::Height_sequence& RectangularGeometry::
  Height () const
  {
    return this->Height_;
  }

  inline
  RectangularGeometry::Height_sequence& RectangularGeometry::
  Height ()
  {
    return this->Height_;
  }

  inline
  void RectangularGeometry::
  Height (const Height_sequence& s)
  {
    this->Height_ = s;
  }

  inline
  const RectangularGeometry::Width_sequence& RectangularGeometry::
  Width () const
  {
    return this->Width_;
  }

  inline
  RectangularGeometry::Width_sequence& RectangularGeometry::
  Width ()
  {
    return this->Width_;
  }

  inline
  void RectangularGeometry::
  Width (const Width_sequence& s)
  {
    this->Width_ = s;
  }

  inline
  const RectangularGeometry::PolyLoop_sequence& RectangularGeometry::
  PolyLoop () const
  {
    return this->PolyLoop_;
  }

  inline
  RectangularGeometry::PolyLoop_sequence& RectangularGeometry::
  PolyLoop ()
  {
    return this->PolyLoop_;
  }

  inline
  void RectangularGeometry::
  PolyLoop (const PolyLoop_sequence& s)
  {
    this->PolyLoop_ = s;
  }

  inline
  const RectangularGeometry::id_optional& RectangularGeometry::
  id () const
  {
    return this->id_;
  }

  inline
  RectangularGeometry::id_optional& RectangularGeometry::
  id ()
  {
    return this->id_;
  }

  inline
  void RectangularGeometry::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void RectangularGeometry::
  id (const id_optional& x)
  {
    this->id_ = x;
  }

  inline
  void RectangularGeometry::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const RectangularGeometry::unit_optional& RectangularGeometry::
  unit () const
  {
    return this->unit_;
  }

  inline
  RectangularGeometry::unit_optional& RectangularGeometry::
  unit ()
  {
    return this->unit_;
  }

  inline
  void RectangularGeometry::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void RectangularGeometry::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void RectangularGeometry::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // RecycledContent
  // 

  inline
  const RecycledContent::unit_type& RecycledContent::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  RecycledContent::unit_type& RecycledContent::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void RecycledContent::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void RecycledContent::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Reflectance
  // 

  inline
  const Reflectance::unit_type& Reflectance::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Reflectance::unit_type& Reflectance::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Reflectance::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Reflectance::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Reflectance::type_type& Reflectance::
  type () const
  {
    return this->type_.get ();
  }

  inline
  Reflectance::type_type& Reflectance::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void Reflectance::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void Reflectance::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }


  // Results
  // 

  inline
  const Results::Name_sequence& Results::
  Name () const
  {
    return this->Name_;
  }

  inline
  Results::Name_sequence& Results::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Results::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Results::Description_sequence& Results::
  Description () const
  {
    return this->Description_;
  }

  inline
  Results::Description_sequence& Results::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Results::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Results::Value_sequence& Results::
  Value () const
  {
    return this->Value_;
  }

  inline
  Results::Value_sequence& Results::
  Value ()
  {
    return this->Value_;
  }

  inline
  void Results::
  Value (const Value_sequence& s)
  {
    this->Value_ = s;
  }

  inline
  const Results::ObjectId_sequence& Results::
  ObjectId () const
  {
    return this->ObjectId_;
  }

  inline
  Results::ObjectId_sequence& Results::
  ObjectId ()
  {
    return this->ObjectId_;
  }

  inline
  void Results::
  ObjectId (const ObjectId_sequence& s)
  {
    this->ObjectId_ = s;
  }

  inline
  const Results::CADObjectId_sequence& Results::
  CADObjectId () const
  {
    return this->CADObjectId_;
  }

  inline
  Results::CADObjectId_sequence& Results::
  CADObjectId ()
  {
    return this->CADObjectId_;
  }

  inline
  void Results::
  CADObjectId (const CADObjectId_sequence& s)
  {
    this->CADObjectId_ = s;
  }

  inline
  const Results::CartesianPoint_sequence& Results::
  CartesianPoint () const
  {
    return this->CartesianPoint_;
  }

  inline
  Results::CartesianPoint_sequence& Results::
  CartesianPoint ()
  {
    return this->CartesianPoint_;
  }

  inline
  void Results::
  CartesianPoint (const CartesianPoint_sequence& s)
  {
    this->CartesianPoint_ = s;
  }

  inline
  const Results::id_type& Results::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Results::id_type& Results::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Results::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Results::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Results::unit_type& Results::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Results::unit_type& Results::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Results::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Results::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Results::currency_optional& Results::
  currency () const
  {
    return this->currency_;
  }

  inline
  Results::currency_optional& Results::
  currency ()
  {
    return this->currency_;
  }

  inline
  void Results::
  currency (const currency_type& x)
  {
    this->currency_.set (x);
  }

  inline
  void Results::
  currency (const currency_optional& x)
  {
    this->currency_ = x;
  }

  inline
  void Results::
  currency (::std::auto_ptr< currency_type > x)
  {
    this->currency_.set (x);
  }

  inline
  const Results::resultsType_optional& Results::
  resultsType () const
  {
    return this->resultsType_;
  }

  inline
  Results::resultsType_optional& Results::
  resultsType ()
  {
    return this->resultsType_;
  }

  inline
  void Results::
  resultsType (const resultsType_type& x)
  {
    this->resultsType_.set (x);
  }

  inline
  void Results::
  resultsType (const resultsType_optional& x)
  {
    this->resultsType_ = x;
  }

  inline
  void Results::
  resultsType (::std::auto_ptr< resultsType_type > x)
  {
    this->resultsType_.set (x);
  }

  inline
  const Results::resourceType_type& Results::
  resourceType () const
  {
    return this->resourceType_.get ();
  }

  inline
  Results::resourceType_type& Results::
  resourceType ()
  {
    return this->resourceType_.get ();
  }

  inline
  void Results::
  resourceType (const resourceType_type& x)
  {
    this->resourceType_.set (x);
  }

  inline
  void Results::
  resourceType (::std::auto_ptr< resourceType_type > x)
  {
    this->resourceType_.set (x);
  }

  inline
  const Results::programId_optional& Results::
  programId () const
  {
    return this->programId_;
  }

  inline
  Results::programId_optional& Results::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Results::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Results::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Results::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }

  inline
  const Results::valueType_optional& Results::
  valueType () const
  {
    return this->valueType_;
  }

  inline
  Results::valueType_optional& Results::
  valueType ()
  {
    return this->valueType_;
  }

  inline
  void Results::
  valueType (const valueType_type& x)
  {
    this->valueType_.set (x);
  }

  inline
  void Results::
  valueType (const valueType_optional& x)
  {
    this->valueType_ = x;
  }

  inline
  void Results::
  valueType (::std::auto_ptr< valueType_type > x)
  {
    this->valueType_.set (x);
  }

  inline
  const Results::startTime_type& Results::
  startTime () const
  {
    return this->startTime_.get ();
  }

  inline
  Results::startTime_type& Results::
  startTime ()
  {
    return this->startTime_.get ();
  }

  inline
  void Results::
  startTime (const startTime_type& x)
  {
    this->startTime_.set (x);
  }

  inline
  void Results::
  startTime (::std::auto_ptr< startTime_type > x)
  {
    this->startTime_.set (x);
  }

  inline
  const Results::timeIncrement_optional& Results::
  timeIncrement () const
  {
    return this->timeIncrement_;
  }

  inline
  Results::timeIncrement_optional& Results::
  timeIncrement ()
  {
    return this->timeIncrement_;
  }

  inline
  void Results::
  timeIncrement (const timeIncrement_type& x)
  {
    this->timeIncrement_.set (x);
  }

  inline
  void Results::
  timeIncrement (const timeIncrement_optional& x)
  {
    this->timeIncrement_ = x;
  }

  inline
  void Results::
  timeIncrement (::std::auto_ptr< timeIncrement_type > x)
  {
    this->timeIncrement_.set (x);
  }


  // Roughness
  // 

  inline
  const Roughness::value_type& Roughness::
  value () const
  {
    return this->value_.get ();
  }

  inline
  Roughness::value_type& Roughness::
  value ()
  {
    return this->value_.get ();
  }

  inline
  void Roughness::
  value (const value_type& x)
  {
    this->value_.set (x);
  }

  inline
  void Roughness::
  value (::std::auto_ptr< value_type > x)
  {
    this->value_.set (x);
  }


  // RTSParameters
  // 

  inline
  const RTSParameters::HOutside_type& RTSParameters::
  HOutside () const
  {
    return this->HOutside_.get ();
  }

  inline
  RTSParameters::HOutside_type& RTSParameters::
  HOutside ()
  {
    return this->HOutside_.get ();
  }

  inline
  void RTSParameters::
  HOutside (const HOutside_type& x)
  {
    this->HOutside_.set (x);
  }

  inline
  void RTSParameters::
  HOutside (::std::auto_ptr< HOutside_type > x)
  {
    this->HOutside_.set (x);
  }

  inline
  const RTSParameters::roofCTSType_optional& RTSParameters::
  roofCTSType () const
  {
    return this->roofCTSType_;
  }

  inline
  RTSParameters::roofCTSType_optional& RTSParameters::
  roofCTSType ()
  {
    return this->roofCTSType_;
  }

  inline
  void RTSParameters::
  roofCTSType (const roofCTSType_type& x)
  {
    this->roofCTSType_.set (x);
  }

  inline
  void RTSParameters::
  roofCTSType (const roofCTSType_optional& x)
  {
    this->roofCTSType_ = x;
  }

  inline
  void RTSParameters::
  roofCTSType (::std::auto_ptr< roofCTSType_type > x)
  {
    this->roofCTSType_.set (x);
  }

  inline
  const RTSParameters::wallCTSType_optional& RTSParameters::
  wallCTSType () const
  {
    return this->wallCTSType_;
  }

  inline
  RTSParameters::wallCTSType_optional& RTSParameters::
  wallCTSType ()
  {
    return this->wallCTSType_;
  }

  inline
  void RTSParameters::
  wallCTSType (const wallCTSType_type& x)
  {
    this->wallCTSType_.set (x);
  }

  inline
  void RTSParameters::
  wallCTSType (const wallCTSType_optional& x)
  {
    this->wallCTSType_ = x;
  }

  inline
  void RTSParameters::
  wallCTSType (::std::auto_ptr< wallCTSType_type > x)
  {
    this->wallCTSType_.set (x);
  }


  // R_value
  // 

  inline
  const R_value::unit_type& R_value::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  R_value::unit_type& R_value::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void R_value::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void R_value::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // ShadeControl
  // 

  inline
  const ShadeControl::ShadeSchedule_sequence& ShadeControl::
  ShadeSchedule () const
  {
    return this->ShadeSchedule_;
  }

  inline
  ShadeControl::ShadeSchedule_sequence& ShadeControl::
  ShadeSchedule ()
  {
    return this->ShadeSchedule_;
  }

  inline
  void ShadeControl::
  ShadeSchedule (const ShadeSchedule_sequence& s)
  {
    this->ShadeSchedule_ = s;
  }

  inline
  const ShadeControl::SolarOnOpening_sequence& ShadeControl::
  SolarOnOpening () const
  {
    return this->SolarOnOpening_;
  }

  inline
  ShadeControl::SolarOnOpening_sequence& ShadeControl::
  SolarOnOpening ()
  {
    return this->SolarOnOpening_;
  }

  inline
  void ShadeControl::
  SolarOnOpening (const SolarOnOpening_sequence& s)
  {
    this->SolarOnOpening_ = s;
  }

  inline
  const ShadeControl::HorizontalSolar_sequence& ShadeControl::
  HorizontalSolar () const
  {
    return this->HorizontalSolar_;
  }

  inline
  ShadeControl::HorizontalSolar_sequence& ShadeControl::
  HorizontalSolar ()
  {
    return this->HorizontalSolar_;
  }

  inline
  void ShadeControl::
  HorizontalSolar (const HorizontalSolar_sequence& s)
  {
    this->HorizontalSolar_ = s;
  }

  inline
  const ShadeControl::AirTemperature_sequence& ShadeControl::
  AirTemperature () const
  {
    return this->AirTemperature_;
  }

  inline
  ShadeControl::AirTemperature_sequence& ShadeControl::
  AirTemperature ()
  {
    return this->AirTemperature_;
  }

  inline
  void ShadeControl::
  AirTemperature (const AirTemperature_sequence& s)
  {
    this->AirTemperature_ = s;
  }

  inline
  const ShadeControl::ZoneCoolingLoad_sequence& ShadeControl::
  ZoneCoolingLoad () const
  {
    return this->ZoneCoolingLoad_;
  }

  inline
  ShadeControl::ZoneCoolingLoad_sequence& ShadeControl::
  ZoneCoolingLoad ()
  {
    return this->ZoneCoolingLoad_;
  }

  inline
  void ShadeControl::
  ZoneCoolingLoad (const ZoneCoolingLoad_sequence& s)
  {
    this->ZoneCoolingLoad_ = s;
  }

  inline
  const ShadeControl::Glare_sequence& ShadeControl::
  Glare () const
  {
    return this->Glare_;
  }

  inline
  ShadeControl::Glare_sequence& ShadeControl::
  Glare ()
  {
    return this->Glare_;
  }

  inline
  void ShadeControl::
  Glare (const Glare_sequence& s)
  {
    this->Glare_ = s;
  }

  inline
  const ShadeControl::type_type& ShadeControl::
  type () const
  {
    return this->type_.get ();
  }

  inline
  ShadeControl::type_type& ShadeControl::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void ShadeControl::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void ShadeControl::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }

  inline
  const ShadeControl::programId_optional& ShadeControl::
  programId () const
  {
    return this->programId_;
  }

  inline
  ShadeControl::programId_optional& ShadeControl::
  programId ()
  {
    return this->programId_;
  }

  inline
  void ShadeControl::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void ShadeControl::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void ShadeControl::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // ShadeSchedule
  // 

  inline
  const ShadeSchedule::scheduleIdRef_type& ShadeSchedule::
  scheduleIdRef () const
  {
    return this->scheduleIdRef_.get ();
  }

  inline
  ShadeSchedule::scheduleIdRef_type& ShadeSchedule::
  scheduleIdRef ()
  {
    return this->scheduleIdRef_.get ();
  }

  inline
  void ShadeSchedule::
  scheduleIdRef (const scheduleIdRef_type& x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  void ShadeSchedule::
  scheduleIdRef (::std::auto_ptr< scheduleIdRef_type > x)
  {
    this->scheduleIdRef_.set (x);
  }


  // Schedule
  // 

  inline
  const Schedule::Name_sequence& Schedule::
  Name () const
  {
    return this->Name_;
  }

  inline
  Schedule::Name_sequence& Schedule::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Schedule::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Schedule::Description_sequence& Schedule::
  Description () const
  {
    return this->Description_;
  }

  inline
  Schedule::Description_sequence& Schedule::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Schedule::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Schedule::YearSchedule_sequence& Schedule::
  YearSchedule () const
  {
    return this->YearSchedule_;
  }

  inline
  Schedule::YearSchedule_sequence& Schedule::
  YearSchedule ()
  {
    return this->YearSchedule_;
  }

  inline
  void Schedule::
  YearSchedule (const YearSchedule_sequence& s)
  {
    this->YearSchedule_ = s;
  }

  inline
  const Schedule::id_type& Schedule::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Schedule::id_type& Schedule::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Schedule::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Schedule::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Schedule::type_type& Schedule::
  type () const
  {
    return this->type_.get ();
  }

  inline
  Schedule::type_type& Schedule::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void Schedule::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void Schedule::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }

  inline
  const Schedule::programId_optional& Schedule::
  programId () const
  {
    return this->programId_;
  }

  inline
  Schedule::programId_optional& Schedule::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Schedule::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Schedule::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Schedule::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // Setback
  // 

  inline
  const Setback::unit_optional& Setback::
  unit () const
  {
    return this->unit_;
  }

  inline
  Setback::unit_optional& Setback::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Setback::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Setback::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Setback::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // ShadingCoeff
  // 

  inline
  const ShadingCoeff::unit_type& ShadingCoeff::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  ShadingCoeff::unit_type& ShadingCoeff::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void ShadingCoeff::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void ShadingCoeff::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // ShellGeometry
  // 

  inline
  const ShellGeometry::Name_sequence& ShellGeometry::
  Name () const
  {
    return this->Name_;
  }

  inline
  ShellGeometry::Name_sequence& ShellGeometry::
  Name ()
  {
    return this->Name_;
  }

  inline
  void ShellGeometry::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const ShellGeometry::Description_sequence& ShellGeometry::
  Description () const
  {
    return this->Description_;
  }

  inline
  ShellGeometry::Description_sequence& ShellGeometry::
  Description ()
  {
    return this->Description_;
  }

  inline
  void ShellGeometry::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const ShellGeometry::ClosedShell_sequence& ShellGeometry::
  ClosedShell () const
  {
    return this->ClosedShell_;
  }

  inline
  ShellGeometry::ClosedShell_sequence& ShellGeometry::
  ClosedShell ()
  {
    return this->ClosedShell_;
  }

  inline
  void ShellGeometry::
  ClosedShell (const ClosedShell_sequence& s)
  {
    this->ClosedShell_ = s;
  }

  inline
  const ShellGeometry::id_type& ShellGeometry::
  id () const
  {
    return this->id_.get ();
  }

  inline
  ShellGeometry::id_type& ShellGeometry::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void ShellGeometry::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void ShellGeometry::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const ShellGeometry::unit_type& ShellGeometry::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  ShellGeometry::unit_type& ShellGeometry::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void ShellGeometry::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void ShellGeometry::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const ShellGeometry::unit_type& ShellGeometry::
  unit_default_value ()
  {
    return unit_default_value_;
  }


  // SinkRate
  // 

  inline
  const SinkRate::unit_type& SinkRate::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  SinkRate::unit_type& SinkRate::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void SinkRate::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void SinkRate::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // SolarHeatGainCoeff
  // 

  inline
  const SolarHeatGainCoeff::unit_type& SolarHeatGainCoeff::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  SolarHeatGainCoeff::unit_type& SolarHeatGainCoeff::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void SolarHeatGainCoeff::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void SolarHeatGainCoeff::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const SolarHeatGainCoeff::solarIncidentAngle_optional& SolarHeatGainCoeff::
  solarIncidentAngle () const
  {
    return this->solarIncidentAngle_;
  }

  inline
  SolarHeatGainCoeff::solarIncidentAngle_optional& SolarHeatGainCoeff::
  solarIncidentAngle ()
  {
    return this->solarIncidentAngle_;
  }

  inline
  void SolarHeatGainCoeff::
  solarIncidentAngle (const solarIncidentAngle_type& x)
  {
    this->solarIncidentAngle_.set (x);
  }

  inline
  void SolarHeatGainCoeff::
  solarIncidentAngle (const solarIncidentAngle_optional& x)
  {
    this->solarIncidentAngle_ = x;
  }


  // SolarOnOpening
  // 

  inline
  const SolarOnOpening::unit_type& SolarOnOpening::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  SolarOnOpening::unit_type& SolarOnOpening::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void SolarOnOpening::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void SolarOnOpening::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Space
  // 

  inline
  const Space::Name_sequence& Space::
  Name () const
  {
    return this->Name_;
  }

  inline
  Space::Name_sequence& Space::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Space::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Space::Description_sequence& Space::
  Description () const
  {
    return this->Description_;
  }

  inline
  Space::Description_sequence& Space::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Space::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Space::Lighting_sequence& Space::
  Lighting () const
  {
    return this->Lighting_;
  }

  inline
  Space::Lighting_sequence& Space::
  Lighting ()
  {
    return this->Lighting_;
  }

  inline
  void Space::
  Lighting (const Lighting_sequence& s)
  {
    this->Lighting_ = s;
  }

  inline
  const Space::LightingControl_sequence& Space::
  LightingControl () const
  {
    return this->LightingControl_;
  }

  inline
  Space::LightingControl_sequence& Space::
  LightingControl ()
  {
    return this->LightingControl_;
  }

  inline
  void Space::
  LightingControl (const LightingControl_sequence& s)
  {
    this->LightingControl_ = s;
  }

  inline
  const Space::InfiltrationFlow_sequence& Space::
  InfiltrationFlow () const
  {
    return this->InfiltrationFlow_;
  }

  inline
  Space::InfiltrationFlow_sequence& Space::
  InfiltrationFlow ()
  {
    return this->InfiltrationFlow_;
  }

  inline
  void Space::
  InfiltrationFlow (const InfiltrationFlow_sequence& s)
  {
    this->InfiltrationFlow_ = s;
  }

  inline
  const Space::PeopleNumber_sequence& Space::
  PeopleNumber () const
  {
    return this->PeopleNumber_;
  }

  inline
  Space::PeopleNumber_sequence& Space::
  PeopleNumber ()
  {
    return this->PeopleNumber_;
  }

  inline
  void Space::
  PeopleNumber (const PeopleNumber_sequence& s)
  {
    this->PeopleNumber_ = s;
  }

  inline
  const Space::PeopleHeatGain_sequence& Space::
  PeopleHeatGain () const
  {
    return this->PeopleHeatGain_;
  }

  inline
  Space::PeopleHeatGain_sequence& Space::
  PeopleHeatGain ()
  {
    return this->PeopleHeatGain_;
  }

  inline
  void Space::
  PeopleHeatGain (const PeopleHeatGain_sequence& s)
  {
    this->PeopleHeatGain_ = s;
  }

  inline
  const Space::LightPowerPerArea_sequence& Space::
  LightPowerPerArea () const
  {
    return this->LightPowerPerArea_;
  }

  inline
  Space::LightPowerPerArea_sequence& Space::
  LightPowerPerArea ()
  {
    return this->LightPowerPerArea_;
  }

  inline
  void Space::
  LightPowerPerArea (const LightPowerPerArea_sequence& s)
  {
    this->LightPowerPerArea_ = s;
  }

  inline
  const Space::EquipPowerPerArea_sequence& Space::
  EquipPowerPerArea () const
  {
    return this->EquipPowerPerArea_;
  }

  inline
  Space::EquipPowerPerArea_sequence& Space::
  EquipPowerPerArea ()
  {
    return this->EquipPowerPerArea_;
  }

  inline
  void Space::
  EquipPowerPerArea (const EquipPowerPerArea_sequence& s)
  {
    this->EquipPowerPerArea_ = s;
  }

  inline
  const Space::AirChangesPerHour_sequence& Space::
  AirChangesPerHour () const
  {
    return this->AirChangesPerHour_;
  }

  inline
  Space::AirChangesPerHour_sequence& Space::
  AirChangesPerHour ()
  {
    return this->AirChangesPerHour_;
  }

  inline
  void Space::
  AirChangesPerHour (const AirChangesPerHour_sequence& s)
  {
    this->AirChangesPerHour_ = s;
  }

  inline
  const Space::Area_sequence& Space::
  Area () const
  {
    return this->Area_;
  }

  inline
  Space::Area_sequence& Space::
  Area ()
  {
    return this->Area_;
  }

  inline
  void Space::
  Area (const Area_sequence& s)
  {
    this->Area_ = s;
  }

  inline
  const Space::Temperature_sequence& Space::
  Temperature () const
  {
    return this->Temperature_;
  }

  inline
  Space::Temperature_sequence& Space::
  Temperature ()
  {
    return this->Temperature_;
  }

  inline
  void Space::
  Temperature (const Temperature_sequence& s)
  {
    this->Temperature_ = s;
  }

  inline
  const Space::Volume_sequence& Space::
  Volume () const
  {
    return this->Volume_;
  }

  inline
  Space::Volume_sequence& Space::
  Volume ()
  {
    return this->Volume_;
  }

  inline
  void Space::
  Volume (const Volume_sequence& s)
  {
    this->Volume_ = s;
  }

  inline
  const Space::PlanarGeometry_sequence& Space::
  PlanarGeometry () const
  {
    return this->PlanarGeometry_;
  }

  inline
  Space::PlanarGeometry_sequence& Space::
  PlanarGeometry ()
  {
    return this->PlanarGeometry_;
  }

  inline
  void Space::
  PlanarGeometry (const PlanarGeometry_sequence& s)
  {
    this->PlanarGeometry_ = s;
  }

  inline
  const Space::ShellGeometry_sequence& Space::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  Space::ShellGeometry_sequence& Space::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void Space::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const Space::AirLoopId_sequence& Space::
  AirLoopId () const
  {
    return this->AirLoopId_;
  }

  inline
  Space::AirLoopId_sequence& Space::
  AirLoopId ()
  {
    return this->AirLoopId_;
  }

  inline
  void Space::
  AirLoopId (const AirLoopId_sequence& s)
  {
    this->AirLoopId_ = s;
  }

  inline
  const Space::HydronicLoopId_sequence& Space::
  HydronicLoopId () const
  {
    return this->HydronicLoopId_;
  }

  inline
  Space::HydronicLoopId_sequence& Space::
  HydronicLoopId ()
  {
    return this->HydronicLoopId_;
  }

  inline
  void Space::
  HydronicLoopId (const HydronicLoopId_sequence& s)
  {
    this->HydronicLoopId_ = s;
  }

  inline
  const Space::MeterId_sequence& Space::
  MeterId () const
  {
    return this->MeterId_;
  }

  inline
  Space::MeterId_sequence& Space::
  MeterId ()
  {
    return this->MeterId_;
  }

  inline
  void Space::
  MeterId (const MeterId_sequence& s)
  {
    this->MeterId_ = s;
  }

  inline
  const Space::IntEquipId_sequence& Space::
  IntEquipId () const
  {
    return this->IntEquipId_;
  }

  inline
  Space::IntEquipId_sequence& Space::
  IntEquipId ()
  {
    return this->IntEquipId_;
  }

  inline
  void Space::
  IntEquipId (const IntEquipId_sequence& s)
  {
    this->IntEquipId_ = s;
  }

  inline
  const Space::AirLoopEquipmentId_sequence& Space::
  AirLoopEquipmentId () const
  {
    return this->AirLoopEquipmentId_;
  }

  inline
  Space::AirLoopEquipmentId_sequence& Space::
  AirLoopEquipmentId ()
  {
    return this->AirLoopEquipmentId_;
  }

  inline
  void Space::
  AirLoopEquipmentId (const AirLoopEquipmentId_sequence& s)
  {
    this->AirLoopEquipmentId_ = s;
  }

  inline
  const Space::HydronicLoopEquipmentId_sequence& Space::
  HydronicLoopEquipmentId () const
  {
    return this->HydronicLoopEquipmentId_;
  }

  inline
  Space::HydronicLoopEquipmentId_sequence& Space::
  HydronicLoopEquipmentId ()
  {
    return this->HydronicLoopEquipmentId_;
  }

  inline
  void Space::
  HydronicLoopEquipmentId (const HydronicLoopEquipmentId_sequence& s)
  {
    this->HydronicLoopEquipmentId_ = s;
  }

  inline
  const Space::CADObjectId_sequence& Space::
  CADObjectId () const
  {
    return this->CADObjectId_;
  }

  inline
  Space::CADObjectId_sequence& Space::
  CADObjectId ()
  {
    return this->CADObjectId_;
  }

  inline
  void Space::
  CADObjectId (const CADObjectId_sequence& s)
  {
    this->CADObjectId_ = s;
  }

  inline
  const Space::TypeCode_sequence& Space::
  TypeCode () const
  {
    return this->TypeCode_;
  }

  inline
  Space::TypeCode_sequence& Space::
  TypeCode ()
  {
    return this->TypeCode_;
  }

  inline
  void Space::
  TypeCode (const TypeCode_sequence& s)
  {
    this->TypeCode_ = s;
  }

  inline
  const Space::SpaceBoundary_sequence& Space::
  SpaceBoundary () const
  {
    return this->SpaceBoundary_;
  }

  inline
  Space::SpaceBoundary_sequence& Space::
  SpaceBoundary ()
  {
    return this->SpaceBoundary_;
  }

  inline
  void Space::
  SpaceBoundary (const SpaceBoundary_sequence& s)
  {
    this->SpaceBoundary_ = s;
  }

  inline
  const Space::id_type& Space::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Space::id_type& Space::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Space::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Space::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Space::spaceType_optional& Space::
  spaceType () const
  {
    return this->spaceType_;
  }

  inline
  Space::spaceType_optional& Space::
  spaceType ()
  {
    return this->spaceType_;
  }

  inline
  void Space::
  spaceType (const spaceType_type& x)
  {
    this->spaceType_.set (x);
  }

  inline
  void Space::
  spaceType (const spaceType_optional& x)
  {
    this->spaceType_ = x;
  }

  inline
  void Space::
  spaceType (::std::auto_ptr< spaceType_type > x)
  {
    this->spaceType_.set (x);
  }

  inline
  const Space::zoneIdRef_optional& Space::
  zoneIdRef () const
  {
    return this->zoneIdRef_;
  }

  inline
  Space::zoneIdRef_optional& Space::
  zoneIdRef ()
  {
    return this->zoneIdRef_;
  }

  inline
  void Space::
  zoneIdRef (const zoneIdRef_type& x)
  {
    this->zoneIdRef_.set (x);
  }

  inline
  void Space::
  zoneIdRef (const zoneIdRef_optional& x)
  {
    this->zoneIdRef_ = x;
  }

  inline
  void Space::
  zoneIdRef (::std::auto_ptr< zoneIdRef_type > x)
  {
    this->zoneIdRef_.set (x);
  }

  inline
  const Space::scheduleIdRef_optional& Space::
  scheduleIdRef () const
  {
    return this->scheduleIdRef_;
  }

  inline
  Space::scheduleIdRef_optional& Space::
  scheduleIdRef ()
  {
    return this->scheduleIdRef_;
  }

  inline
  void Space::
  scheduleIdRef (const scheduleIdRef_type& x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  void Space::
  scheduleIdRef (const scheduleIdRef_optional& x)
  {
    this->scheduleIdRef_ = x;
  }

  inline
  void Space::
  scheduleIdRef (::std::auto_ptr< scheduleIdRef_type > x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  const Space::lightScheduleIdRef_optional& Space::
  lightScheduleIdRef () const
  {
    return this->lightScheduleIdRef_;
  }

  inline
  Space::lightScheduleIdRef_optional& Space::
  lightScheduleIdRef ()
  {
    return this->lightScheduleIdRef_;
  }

  inline
  void Space::
  lightScheduleIdRef (const lightScheduleIdRef_type& x)
  {
    this->lightScheduleIdRef_.set (x);
  }

  inline
  void Space::
  lightScheduleIdRef (const lightScheduleIdRef_optional& x)
  {
    this->lightScheduleIdRef_ = x;
  }

  inline
  void Space::
  lightScheduleIdRef (::std::auto_ptr< lightScheduleIdRef_type > x)
  {
    this->lightScheduleIdRef_.set (x);
  }

  inline
  const Space::equipmentScheduleIdRef_optional& Space::
  equipmentScheduleIdRef () const
  {
    return this->equipmentScheduleIdRef_;
  }

  inline
  Space::equipmentScheduleIdRef_optional& Space::
  equipmentScheduleIdRef ()
  {
    return this->equipmentScheduleIdRef_;
  }

  inline
  void Space::
  equipmentScheduleIdRef (const equipmentScheduleIdRef_type& x)
  {
    this->equipmentScheduleIdRef_.set (x);
  }

  inline
  void Space::
  equipmentScheduleIdRef (const equipmentScheduleIdRef_optional& x)
  {
    this->equipmentScheduleIdRef_ = x;
  }

  inline
  void Space::
  equipmentScheduleIdRef (::std::auto_ptr< equipmentScheduleIdRef_type > x)
  {
    this->equipmentScheduleIdRef_.set (x);
  }

  inline
  const Space::peopleScheduleIdRef_optional& Space::
  peopleScheduleIdRef () const
  {
    return this->peopleScheduleIdRef_;
  }

  inline
  Space::peopleScheduleIdRef_optional& Space::
  peopleScheduleIdRef ()
  {
    return this->peopleScheduleIdRef_;
  }

  inline
  void Space::
  peopleScheduleIdRef (const peopleScheduleIdRef_type& x)
  {
    this->peopleScheduleIdRef_.set (x);
  }

  inline
  void Space::
  peopleScheduleIdRef (const peopleScheduleIdRef_optional& x)
  {
    this->peopleScheduleIdRef_ = x;
  }

  inline
  void Space::
  peopleScheduleIdRef (::std::auto_ptr< peopleScheduleIdRef_type > x)
  {
    this->peopleScheduleIdRef_.set (x);
  }

  inline
  const Space::conditionType_optional& Space::
  conditionType () const
  {
    return this->conditionType_;
  }

  inline
  Space::conditionType_optional& Space::
  conditionType ()
  {
    return this->conditionType_;
  }

  inline
  void Space::
  conditionType (const conditionType_type& x)
  {
    this->conditionType_.set (x);
  }

  inline
  void Space::
  conditionType (const conditionType_optional& x)
  {
    this->conditionType_ = x;
  }

  inline
  void Space::
  conditionType (::std::auto_ptr< conditionType_type > x)
  {
    this->conditionType_.set (x);
  }

  inline
  const Space::buildingStoreyIdRef_optional& Space::
  buildingStoreyIdRef () const
  {
    return this->buildingStoreyIdRef_;
  }

  inline
  Space::buildingStoreyIdRef_optional& Space::
  buildingStoreyIdRef ()
  {
    return this->buildingStoreyIdRef_;
  }

  inline
  void Space::
  buildingStoreyIdRef (const buildingStoreyIdRef_type& x)
  {
    this->buildingStoreyIdRef_.set (x);
  }

  inline
  void Space::
  buildingStoreyIdRef (const buildingStoreyIdRef_optional& x)
  {
    this->buildingStoreyIdRef_ = x;
  }

  inline
  void Space::
  buildingStoreyIdRef (::std::auto_ptr< buildingStoreyIdRef_type > x)
  {
    this->buildingStoreyIdRef_.set (x);
  }

  inline
  const Space::ifcGUID_optional& Space::
  ifcGUID () const
  {
    return this->ifcGUID_;
  }

  inline
  Space::ifcGUID_optional& Space::
  ifcGUID ()
  {
    return this->ifcGUID_;
  }

  inline
  void Space::
  ifcGUID (const ifcGUID_type& x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  void Space::
  ifcGUID (const ifcGUID_optional& x)
  {
    this->ifcGUID_ = x;
  }

  inline
  void Space::
  ifcGUID (::std::auto_ptr< ifcGUID_type > x)
  {
    this->ifcGUID_.set (x);
  }


  // SpaceBoundary
  // 

  inline
  const SpaceBoundary::PlanarGeometry_type& SpaceBoundary::
  PlanarGeometry () const
  {
    return this->PlanarGeometry_.get ();
  }

  inline
  SpaceBoundary::PlanarGeometry_type& SpaceBoundary::
  PlanarGeometry ()
  {
    return this->PlanarGeometry_.get ();
  }

  inline
  void SpaceBoundary::
  PlanarGeometry (const PlanarGeometry_type& x)
  {
    this->PlanarGeometry_.set (x);
  }

  inline
  void SpaceBoundary::
  PlanarGeometry (::std::auto_ptr< PlanarGeometry_type > x)
  {
    this->PlanarGeometry_.set (x);
  }

  inline
  const SpaceBoundary::ifcGUID_optional& SpaceBoundary::
  ifcGUID () const
  {
    return this->ifcGUID_;
  }

  inline
  SpaceBoundary::ifcGUID_optional& SpaceBoundary::
  ifcGUID ()
  {
    return this->ifcGUID_;
  }

  inline
  void SpaceBoundary::
  ifcGUID (const ifcGUID_type& x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  void SpaceBoundary::
  ifcGUID (const ifcGUID_optional& x)
  {
    this->ifcGUID_ = x;
  }

  inline
  void SpaceBoundary::
  ifcGUID (::std::auto_ptr< ifcGUID_type > x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  const SpaceBoundary::isSecondLevelBoundary_optional& SpaceBoundary::
  isSecondLevelBoundary () const
  {
    return this->isSecondLevelBoundary_;
  }

  inline
  SpaceBoundary::isSecondLevelBoundary_optional& SpaceBoundary::
  isSecondLevelBoundary ()
  {
    return this->isSecondLevelBoundary_;
  }

  inline
  void SpaceBoundary::
  isSecondLevelBoundary (const isSecondLevelBoundary_type& x)
  {
    this->isSecondLevelBoundary_.set (x);
  }

  inline
  void SpaceBoundary::
  isSecondLevelBoundary (const isSecondLevelBoundary_optional& x)
  {
    this->isSecondLevelBoundary_ = x;
  }

  inline
  const SpaceBoundary::surfaceIdRef_optional& SpaceBoundary::
  surfaceIdRef () const
  {
    return this->surfaceIdRef_;
  }

  inline
  SpaceBoundary::surfaceIdRef_optional& SpaceBoundary::
  surfaceIdRef ()
  {
    return this->surfaceIdRef_;
  }

  inline
  void SpaceBoundary::
  surfaceIdRef (const surfaceIdRef_type& x)
  {
    this->surfaceIdRef_.set (x);
  }

  inline
  void SpaceBoundary::
  surfaceIdRef (const surfaceIdRef_optional& x)
  {
    this->surfaceIdRef_ = x;
  }

  inline
  void SpaceBoundary::
  surfaceIdRef (::std::auto_ptr< surfaceIdRef_type > x)
  {
    this->surfaceIdRef_.set (x);
  }

  inline
  const SpaceBoundary::oppositeIdRef_optional& SpaceBoundary::
  oppositeIdRef () const
  {
    return this->oppositeIdRef_;
  }

  inline
  SpaceBoundary::oppositeIdRef_optional& SpaceBoundary::
  oppositeIdRef ()
  {
    return this->oppositeIdRef_;
  }

  inline
  void SpaceBoundary::
  oppositeIdRef (const oppositeIdRef_type& x)
  {
    this->oppositeIdRef_.set (x);
  }

  inline
  void SpaceBoundary::
  oppositeIdRef (const oppositeIdRef_optional& x)
  {
    this->oppositeIdRef_ = x;
  }

  inline
  void SpaceBoundary::
  oppositeIdRef (::std::auto_ptr< oppositeIdRef_type > x)
  {
    this->oppositeIdRef_.set (x);
  }


  // SpecificHeat
  // 

  inline
  const SpecificHeat::unit_type& SpecificHeat::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  SpecificHeat::unit_type& SpecificHeat::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void SpecificHeat::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void SpecificHeat::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // StationId
  // 

  inline
  const StationId::IDType_optional& StationId::
  IDType () const
  {
    return this->IDType_;
  }

  inline
  StationId::IDType_optional& StationId::
  IDType ()
  {
    return this->IDType_;
  }

  inline
  void StationId::
  IDType (const IDType_type& x)
  {
    this->IDType_.set (x);
  }

  inline
  void StationId::
  IDType (const IDType_optional& x)
  {
    this->IDType_ = x;
  }

  inline
  void StationId::
  IDType (::std::auto_ptr< IDType_type > x)
  {
    this->IDType_.set (x);
  }


  // Surface
  // 

  inline
  const Surface::Name_sequence& Surface::
  Name () const
  {
    return this->Name_;
  }

  inline
  Surface::Name_sequence& Surface::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Surface::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Surface::Description_sequence& Surface::
  Description () const
  {
    return this->Description_;
  }

  inline
  Surface::Description_sequence& Surface::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Surface::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Surface::FamilyName_sequence& Surface::
  FamilyName () const
  {
    return this->FamilyName_;
  }

  inline
  Surface::FamilyName_sequence& Surface::
  FamilyName ()
  {
    return this->FamilyName_;
  }

  inline
  void Surface::
  FamilyName (const FamilyName_sequence& s)
  {
    this->FamilyName_ = s;
  }

  inline
  const Surface::AdjacentSpaceId_sequence& Surface::
  AdjacentSpaceId () const
  {
    return this->AdjacentSpaceId_;
  }

  inline
  Surface::AdjacentSpaceId_sequence& Surface::
  AdjacentSpaceId ()
  {
    return this->AdjacentSpaceId_;
  }

  inline
  void Surface::
  AdjacentSpaceId (const AdjacentSpaceId_sequence& s)
  {
    this->AdjacentSpaceId_ = s;
  }

  inline
  const Surface::RectangularGeometry_sequence& Surface::
  RectangularGeometry () const
  {
    return this->RectangularGeometry_;
  }

  inline
  Surface::RectangularGeometry_sequence& Surface::
  RectangularGeometry ()
  {
    return this->RectangularGeometry_;
  }

  inline
  void Surface::
  RectangularGeometry (const RectangularGeometry_sequence& s)
  {
    this->RectangularGeometry_ = s;
  }

  inline
  const Surface::PlanarGeometry_sequence& Surface::
  PlanarGeometry () const
  {
    return this->PlanarGeometry_;
  }

  inline
  Surface::PlanarGeometry_sequence& Surface::
  PlanarGeometry ()
  {
    return this->PlanarGeometry_;
  }

  inline
  void Surface::
  PlanarGeometry (const PlanarGeometry_sequence& s)
  {
    this->PlanarGeometry_ = s;
  }

  inline
  const Surface::Opening_sequence& Surface::
  Opening () const
  {
    return this->Opening_;
  }

  inline
  Surface::Opening_sequence& Surface::
  Opening ()
  {
    return this->Opening_;
  }

  inline
  void Surface::
  Opening (const Opening_sequence& s)
  {
    this->Opening_ = s;
  }

  inline
  const Surface::CADObjectId_sequence& Surface::
  CADObjectId () const
  {
    return this->CADObjectId_;
  }

  inline
  Surface::CADObjectId_sequence& Surface::
  CADObjectId ()
  {
    return this->CADObjectId_;
  }

  inline
  void Surface::
  CADObjectId (const CADObjectId_sequence& s)
  {
    this->CADObjectId_ = s;
  }

  inline
  const Surface::id_type& Surface::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Surface::id_type& Surface::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Surface::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Surface::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Surface::surfaceType_type& Surface::
  surfaceType () const
  {
    return this->surfaceType_.get ();
  }

  inline
  Surface::surfaceType_type& Surface::
  surfaceType ()
  {
    return this->surfaceType_.get ();
  }

  inline
  void Surface::
  surfaceType (const surfaceType_type& x)
  {
    this->surfaceType_.set (x);
  }

  inline
  void Surface::
  surfaceType (::std::auto_ptr< surfaceType_type > x)
  {
    this->surfaceType_.set (x);
  }

  inline
  const Surface::constructionIdRef_optional& Surface::
  constructionIdRef () const
  {
    return this->constructionIdRef_;
  }

  inline
  Surface::constructionIdRef_optional& Surface::
  constructionIdRef ()
  {
    return this->constructionIdRef_;
  }

  inline
  void Surface::
  constructionIdRef (const constructionIdRef_type& x)
  {
    this->constructionIdRef_.set (x);
  }

  inline
  void Surface::
  constructionIdRef (const constructionIdRef_optional& x)
  {
    this->constructionIdRef_ = x;
  }

  inline
  void Surface::
  constructionIdRef (::std::auto_ptr< constructionIdRef_type > x)
  {
    this->constructionIdRef_.set (x);
  }

  inline
  const Surface::scheduleShadeIdRef_optional& Surface::
  scheduleShadeIdRef () const
  {
    return this->scheduleShadeIdRef_;
  }

  inline
  Surface::scheduleShadeIdRef_optional& Surface::
  scheduleShadeIdRef ()
  {
    return this->scheduleShadeIdRef_;
  }

  inline
  void Surface::
  scheduleShadeIdRef (const scheduleShadeIdRef_type& x)
  {
    this->scheduleShadeIdRef_.set (x);
  }

  inline
  void Surface::
  scheduleShadeIdRef (const scheduleShadeIdRef_optional& x)
  {
    this->scheduleShadeIdRef_ = x;
  }

  inline
  void Surface::
  scheduleShadeIdRef (::std::auto_ptr< scheduleShadeIdRef_type > x)
  {
    this->scheduleShadeIdRef_.set (x);
  }

  inline
  const Surface::exposedToSun_type& Surface::
  exposedToSun () const
  {
    return this->exposedToSun_.get ();
  }

  inline
  Surface::exposedToSun_type& Surface::
  exposedToSun ()
  {
    return this->exposedToSun_.get ();
  }

  inline
  void Surface::
  exposedToSun (const exposedToSun_type& x)
  {
    this->exposedToSun_.set (x);
  }

  inline
  Surface::exposedToSun_type Surface::
  exposedToSun_default_value ()
  {
    return exposedToSun_type (true);
  }

  inline
  const Surface::ifcGUID_optional& Surface::
  ifcGUID () const
  {
    return this->ifcGUID_;
  }

  inline
  Surface::ifcGUID_optional& Surface::
  ifcGUID ()
  {
    return this->ifcGUID_;
  }

  inline
  void Surface::
  ifcGUID (const ifcGUID_type& x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  void Surface::
  ifcGUID (const ifcGUID_optional& x)
  {
    this->ifcGUID_ = x;
  }

  inline
  void Surface::
  ifcGUID (::std::auto_ptr< ifcGUID_type > x)
  {
    this->ifcGUID_.set (x);
  }


  // Temp
  // 

  inline
  const Temp::unit_optional& Temp::
  unit () const
  {
    return this->unit_;
  }

  inline
  Temp::unit_optional& Temp::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Temp::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Temp::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Temp::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Temp::tempType_type& Temp::
  tempType () const
  {
    return this->tempType_.get ();
  }

  inline
  Temp::tempType_type& Temp::
  tempType ()
  {
    return this->tempType_.get ();
  }

  inline
  void Temp::
  tempType (const tempType_type& x)
  {
    this->tempType_.set (x);
  }

  inline
  void Temp::
  tempType (::std::auto_ptr< tempType_type > x)
  {
    this->tempType_.set (x);
  }


  // Temperature
  // 

  inline
  const Temperature::unit_optional& Temperature::
  unit () const
  {
    return this->unit_;
  }

  inline
  Temperature::unit_optional& Temperature::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Temperature::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Temperature::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Temperature::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Temperature::programId_optional& Temperature::
  programId () const
  {
    return this->programId_;
  }

  inline
  Temperature::programId_optional& Temperature::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Temperature::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Temperature::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Temperature::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // TemperatureControl
  // 

  inline
  const TemperatureControl::DesignTemp_sequence& TemperatureControl::
  DesignTemp () const
  {
    return this->DesignTemp_;
  }

  inline
  TemperatureControl::DesignTemp_sequence& TemperatureControl::
  DesignTemp ()
  {
    return this->DesignTemp_;
  }

  inline
  void TemperatureControl::
  DesignTemp (const DesignTemp_sequence& s)
  {
    this->DesignTemp_ = s;
  }

  inline
  const TemperatureControl::MinTemp_sequence& TemperatureControl::
  MinTemp () const
  {
    return this->MinTemp_;
  }

  inline
  TemperatureControl::MinTemp_sequence& TemperatureControl::
  MinTemp ()
  {
    return this->MinTemp_;
  }

  inline
  void TemperatureControl::
  MinTemp (const MinTemp_sequence& s)
  {
    this->MinTemp_ = s;
  }

  inline
  const TemperatureControl::MaxTemp_sequence& TemperatureControl::
  MaxTemp () const
  {
    return this->MaxTemp_;
  }

  inline
  TemperatureControl::MaxTemp_sequence& TemperatureControl::
  MaxTemp ()
  {
    return this->MaxTemp_;
  }

  inline
  void TemperatureControl::
  MaxTemp (const MaxTemp_sequence& s)
  {
    this->MaxTemp_ = s;
  }


  // Thickness
  // 

  inline
  const Thickness::unit_optional& Thickness::
  unit () const
  {
    return this->unit_;
  }

  inline
  Thickness::unit_optional& Thickness::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Thickness::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Thickness::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Thickness::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Tilt
  // 


  // TimeIncrement
  // 

  inline
  const TimeIncrement::timeUnit_type& TimeIncrement::
  timeUnit () const
  {
    return this->timeUnit_.get ();
  }

  inline
  TimeIncrement::timeUnit_type& TimeIncrement::
  timeUnit ()
  {
    return this->timeUnit_.get ();
  }

  inline
  void TimeIncrement::
  timeUnit (const timeUnit_type& x)
  {
    this->timeUnit_.set (x);
  }

  inline
  void TimeIncrement::
  timeUnit (::std::auto_ptr< timeUnit_type > x)
  {
    this->timeUnit_.set (x);
  }


  // Transmittance
  // 

  inline
  const Transmittance::unit_type& Transmittance::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Transmittance::unit_type& Transmittance::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Transmittance::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Transmittance::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const Transmittance::type_type& Transmittance::
  type () const
  {
    return this->type_.get ();
  }

  inline
  Transmittance::type_type& Transmittance::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void Transmittance::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void Transmittance::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }


  // Transportation
  // 

  inline
  const Transportation::GeneralGeometry_sequence& Transportation::
  GeneralGeometry () const
  {
    return this->GeneralGeometry_;
  }

  inline
  Transportation::GeneralGeometry_sequence& Transportation::
  GeneralGeometry ()
  {
    return this->GeneralGeometry_;
  }

  inline
  void Transportation::
  GeneralGeometry (const GeneralGeometry_sequence& s)
  {
    this->GeneralGeometry_ = s;
  }

  inline
  const Transportation::ShellGeometry_sequence& Transportation::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  Transportation::ShellGeometry_sequence& Transportation::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void Transportation::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const Transportation::Cost_sequence& Transportation::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  Transportation::Cost_sequence& Transportation::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void Transportation::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const Transportation::id_type& Transportation::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Transportation::id_type& Transportation::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Transportation::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Transportation::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Transportation::transportationType_type& Transportation::
  transportationType () const
  {
    return this->transportationType_.get ();
  }

  inline
  Transportation::transportationType_type& Transportation::
  transportationType ()
  {
    return this->transportationType_.get ();
  }

  inline
  void Transportation::
  transportationType (const transportationType_type& x)
  {
    this->transportationType_.set (x);
  }

  inline
  void Transportation::
  transportationType (::std::auto_ptr< transportationType_type > x)
  {
    this->transportationType_.set (x);
  }

  inline
  const Transportation::scheduleIdRef_optional& Transportation::
  scheduleIdRef () const
  {
    return this->scheduleIdRef_;
  }

  inline
  Transportation::scheduleIdRef_optional& Transportation::
  scheduleIdRef ()
  {
    return this->scheduleIdRef_;
  }

  inline
  void Transportation::
  scheduleIdRef (const scheduleIdRef_type& x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  void Transportation::
  scheduleIdRef (const scheduleIdRef_optional& x)
  {
    this->scheduleIdRef_ = x;
  }

  inline
  void Transportation::
  scheduleIdRef (::std::auto_ptr< scheduleIdRef_type > x)
  {
    this->scheduleIdRef_.set (x);
  }

  inline
  const Transportation::programId_optional& Transportation::
  programId () const
  {
    return this->programId_;
  }

  inline
  Transportation::programId_optional& Transportation::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Transportation::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Transportation::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Transportation::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // UtilityRate
  // 


  // U_value
  // 

  inline
  const U_value::unit_type& U_value::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  U_value::unit_type& U_value::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void U_value::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void U_value::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Vegetation
  // 

  inline
  const Vegetation::GeneralGeometry_sequence& Vegetation::
  GeneralGeometry () const
  {
    return this->GeneralGeometry_;
  }

  inline
  Vegetation::GeneralGeometry_sequence& Vegetation::
  GeneralGeometry ()
  {
    return this->GeneralGeometry_;
  }

  inline
  void Vegetation::
  GeneralGeometry (const GeneralGeometry_sequence& s)
  {
    this->GeneralGeometry_ = s;
  }

  inline
  const Vegetation::ShellGeometry_sequence& Vegetation::
  ShellGeometry () const
  {
    return this->ShellGeometry_;
  }

  inline
  Vegetation::ShellGeometry_sequence& Vegetation::
  ShellGeometry ()
  {
    return this->ShellGeometry_;
  }

  inline
  void Vegetation::
  ShellGeometry (const ShellGeometry_sequence& s)
  {
    this->ShellGeometry_ = s;
  }

  inline
  const Vegetation::WaterRate_sequence& Vegetation::
  WaterRate () const
  {
    return this->WaterRate_;
  }

  inline
  Vegetation::WaterRate_sequence& Vegetation::
  WaterRate ()
  {
    return this->WaterRate_;
  }

  inline
  void Vegetation::
  WaterRate (const WaterRate_sequence& s)
  {
    this->WaterRate_ = s;
  }

  inline
  const Vegetation::BiomassDensity_sequence& Vegetation::
  BiomassDensity () const
  {
    return this->BiomassDensity_;
  }

  inline
  Vegetation::BiomassDensity_sequence& Vegetation::
  BiomassDensity ()
  {
    return this->BiomassDensity_;
  }

  inline
  void Vegetation::
  BiomassDensity (const BiomassDensity_sequence& s)
  {
    this->BiomassDensity_ = s;
  }

  inline
  const Vegetation::Cost_sequence& Vegetation::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  Vegetation::Cost_sequence& Vegetation::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void Vegetation::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const Vegetation::id_type& Vegetation::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Vegetation::id_type& Vegetation::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Vegetation::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Vegetation::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Vegetation::vegetationType_type& Vegetation::
  vegetationType () const
  {
    return this->vegetationType_.get ();
  }

  inline
  Vegetation::vegetationType_type& Vegetation::
  vegetationType ()
  {
    return this->vegetationType_.get ();
  }

  inline
  void Vegetation::
  vegetationType (const vegetationType_type& x)
  {
    this->vegetationType_.set (x);
  }

  inline
  void Vegetation::
  vegetationType (::std::auto_ptr< vegetationType_type > x)
  {
    this->vegetationType_.set (x);
  }

  inline
  const Vegetation::waterScheduleIdRef_optional& Vegetation::
  waterScheduleIdRef () const
  {
    return this->waterScheduleIdRef_;
  }

  inline
  Vegetation::waterScheduleIdRef_optional& Vegetation::
  waterScheduleIdRef ()
  {
    return this->waterScheduleIdRef_;
  }

  inline
  void Vegetation::
  waterScheduleIdRef (const waterScheduleIdRef_type& x)
  {
    this->waterScheduleIdRef_.set (x);
  }

  inline
  void Vegetation::
  waterScheduleIdRef (const waterScheduleIdRef_optional& x)
  {
    this->waterScheduleIdRef_ = x;
  }

  inline
  void Vegetation::
  waterScheduleIdRef (::std::auto_ptr< waterScheduleIdRef_type > x)
  {
    this->waterScheduleIdRef_.set (x);
  }

  inline
  const Vegetation::waterMeterIdRef_optional& Vegetation::
  waterMeterIdRef () const
  {
    return this->waterMeterIdRef_;
  }

  inline
  Vegetation::waterMeterIdRef_optional& Vegetation::
  waterMeterIdRef ()
  {
    return this->waterMeterIdRef_;
  }

  inline
  void Vegetation::
  waterMeterIdRef (const waterMeterIdRef_type& x)
  {
    this->waterMeterIdRef_.set (x);
  }

  inline
  void Vegetation::
  waterMeterIdRef (const waterMeterIdRef_optional& x)
  {
    this->waterMeterIdRef_ = x;
  }

  inline
  void Vegetation::
  waterMeterIdRef (::std::auto_ptr< waterMeterIdRef_type > x)
  {
    this->waterMeterIdRef_.set (x);
  }

  inline
  const Vegetation::shadeScheduleIdRef_optional& Vegetation::
  shadeScheduleIdRef () const
  {
    return this->shadeScheduleIdRef_;
  }

  inline
  Vegetation::shadeScheduleIdRef_optional& Vegetation::
  shadeScheduleIdRef ()
  {
    return this->shadeScheduleIdRef_;
  }

  inline
  void Vegetation::
  shadeScheduleIdRef (const shadeScheduleIdRef_type& x)
  {
    this->shadeScheduleIdRef_.set (x);
  }

  inline
  void Vegetation::
  shadeScheduleIdRef (const shadeScheduleIdRef_optional& x)
  {
    this->shadeScheduleIdRef_ = x;
  }

  inline
  void Vegetation::
  shadeScheduleIdRef (::std::auto_ptr< shadeScheduleIdRef_type > x)
  {
    this->shadeScheduleIdRef_.set (x);
  }

  inline
  const Vegetation::programId_optional& Vegetation::
  programId () const
  {
    return this->programId_;
  }

  inline
  Vegetation::programId_optional& Vegetation::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Vegetation::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Vegetation::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Vegetation::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // Viscosity
  // 

  inline
  const Viscosity::unit_type& Viscosity::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Viscosity::unit_type& Viscosity::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Viscosity::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Viscosity::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // ViscosityFofT
  // 

  inline
  const ViscosityFofT::unit_type& ViscosityFofT::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  ViscosityFofT::unit_type& ViscosityFofT::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void ViscosityFofT::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void ViscosityFofT::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Volume
  // 

  inline
  const Volume::unit_optional& Volume::
  unit () const
  {
    return this->unit_;
  }

  inline
  Volume::unit_optional& Volume::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Volume::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Volume::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Volume::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WasteWaterHREff
  // 

  inline
  const WasteWaterHREff::unit_type& WasteWaterHREff::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WasteWaterHREff::unit_type& WasteWaterHREff::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WasteWaterHREff::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WasteWaterHREff::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const WasteWaterHREff::airLoopIdRef_optional& WasteWaterHREff::
  airLoopIdRef () const
  {
    return this->airLoopIdRef_;
  }

  inline
  WasteWaterHREff::airLoopIdRef_optional& WasteWaterHREff::
  airLoopIdRef ()
  {
    return this->airLoopIdRef_;
  }

  inline
  void WasteWaterHREff::
  airLoopIdRef (const airLoopIdRef_type& x)
  {
    this->airLoopIdRef_.set (x);
  }

  inline
  void WasteWaterHREff::
  airLoopIdRef (const airLoopIdRef_optional& x)
  {
    this->airLoopIdRef_ = x;
  }

  inline
  void WasteWaterHREff::
  airLoopIdRef (::std::auto_ptr< airLoopIdRef_type > x)
  {
    this->airLoopIdRef_.set (x);
  }

  inline
  const WasteWaterHREff::hydronicLoopIdRef_optional& WasteWaterHREff::
  hydronicLoopIdRef () const
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  WasteWaterHREff::hydronicLoopIdRef_optional& WasteWaterHREff::
  hydronicLoopIdRef ()
  {
    return this->hydronicLoopIdRef_;
  }

  inline
  void WasteWaterHREff::
  hydronicLoopIdRef (const hydronicLoopIdRef_type& x)
  {
    this->hydronicLoopIdRef_.set (x);
  }

  inline
  void WasteWaterHREff::
  hydronicLoopIdRef (const hydronicLoopIdRef_optional& x)
  {
    this->hydronicLoopIdRef_ = x;
  }

  inline
  void WasteWaterHREff::
  hydronicLoopIdRef (::std::auto_ptr< hydronicLoopIdRef_type > x)
  {
    this->hydronicLoopIdRef_.set (x);
  }


  // WaterLoss
  // 

  inline
  const WaterLoss::unit_type& WaterLoss::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WaterLoss::unit_type& WaterLoss::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WaterLoss::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WaterLoss::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WaterRate
  // 

  inline
  const WaterRate::unit_type& WaterRate::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WaterRate::unit_type& WaterRate::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WaterRate::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WaterRate::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WaterUsePerCycle
  // 

  inline
  const WaterUsePerCycle::unit_type& WaterUsePerCycle::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WaterUsePerCycle::unit_type& WaterUsePerCycle::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WaterUsePerCycle::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WaterUsePerCycle::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // HeatRejectedtoSpace
  // 

  inline
  const HeatRejectedtoSpace::unit_type& HeatRejectedtoSpace::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  HeatRejectedtoSpace::unit_type& HeatRejectedtoSpace::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void HeatRejectedtoSpace::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void HeatRejectedtoSpace::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // Weather
  // 

  inline
  const Weather::Name_sequence& Weather::
  Name () const
  {
    return this->Name_;
  }

  inline
  Weather::Name_sequence& Weather::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Weather::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Weather::Description_sequence& Weather::
  Description () const
  {
    return this->Description_;
  }

  inline
  Weather::Description_sequence& Weather::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Weather::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Weather::Location_sequence& Weather::
  Location () const
  {
    return this->Location_;
  }

  inline
  Weather::Location_sequence& Weather::
  Location ()
  {
    return this->Location_;
  }

  inline
  void Weather::
  Location (const Location_sequence& s)
  {
    this->Location_ = s;
  }

  inline
  const Weather::City_sequence& Weather::
  City () const
  {
    return this->City_;
  }

  inline
  Weather::City_sequence& Weather::
  City ()
  {
    return this->City_;
  }

  inline
  void Weather::
  City (const City_sequence& s)
  {
    this->City_ = s;
  }

  inline
  const Weather::StateOrProvince_sequence& Weather::
  StateOrProvince () const
  {
    return this->StateOrProvince_;
  }

  inline
  Weather::StateOrProvince_sequence& Weather::
  StateOrProvince ()
  {
    return this->StateOrProvince_;
  }

  inline
  void Weather::
  StateOrProvince (const StateOrProvince_sequence& s)
  {
    this->StateOrProvince_ = s;
  }

  inline
  const Weather::Country_sequence& Weather::
  Country () const
  {
    return this->Country_;
  }

  inline
  Weather::Country_sequence& Weather::
  Country ()
  {
    return this->Country_;
  }

  inline
  void Weather::
  Country (const Country_sequence& s)
  {
    this->Country_ = s;
  }

  inline
  const Weather::HDD_sequence& Weather::
  HDD () const
  {
    return this->HDD_;
  }

  inline
  Weather::HDD_sequence& Weather::
  HDD ()
  {
    return this->HDD_;
  }

  inline
  void Weather::
  HDD (const HDD_sequence& s)
  {
    this->HDD_ = s;
  }

  inline
  const Weather::CDD_sequence& Weather::
  CDD () const
  {
    return this->CDD_;
  }

  inline
  Weather::CDD_sequence& Weather::
  CDD ()
  {
    return this->CDD_;
  }

  inline
  void Weather::
  CDD (const CDD_sequence& s)
  {
    this->CDD_ = s;
  }

  inline
  const Weather::DDDBCool_sequence& Weather::
  DDDBCool () const
  {
    return this->DDDBCool_;
  }

  inline
  Weather::DDDBCool_sequence& Weather::
  DDDBCool ()
  {
    return this->DDDBCool_;
  }

  inline
  void Weather::
  DDDBCool (const DDDBCool_sequence& s)
  {
    this->DDDBCool_ = s;
  }

  inline
  const Weather::DDHiHrCool_sequence& Weather::
  DDHiHrCool () const
  {
    return this->DDHiHrCool_;
  }

  inline
  Weather::DDHiHrCool_sequence& Weather::
  DDHiHrCool ()
  {
    return this->DDHiHrCool_;
  }

  inline
  void Weather::
  DDHiHrCool (const DDHiHrCool_sequence& s)
  {
    this->DDHiHrCool_ = s;
  }

  inline
  const Weather::DDWBCool_sequence& Weather::
  DDWBCool () const
  {
    return this->DDWBCool_;
  }

  inline
  Weather::DDWBCool_sequence& Weather::
  DDWBCool ()
  {
    return this->DDWBCool_;
  }

  inline
  void Weather::
  DDWBCool (const DDWBCool_sequence& s)
  {
    this->DDWBCool_ = s;
  }

  inline
  const Weather::DDDBRangeCool_sequence& Weather::
  DDDBRangeCool () const
  {
    return this->DDDBRangeCool_;
  }

  inline
  Weather::DDDBRangeCool_sequence& Weather::
  DDDBRangeCool ()
  {
    return this->DDDBRangeCool_;
  }

  inline
  void Weather::
  DDDBRangeCool (const DDDBRangeCool_sequence& s)
  {
    this->DDDBRangeCool_ = s;
  }

  inline
  const Weather::DDLoHrCool_sequence& Weather::
  DDLoHrCool () const
  {
    return this->DDLoHrCool_;
  }

  inline
  Weather::DDLoHrCool_sequence& Weather::
  DDLoHrCool ()
  {
    return this->DDLoHrCool_;
  }

  inline
  void Weather::
  DDLoHrCool (const DDLoHrCool_sequence& s)
  {
    this->DDLoHrCool_ = s;
  }

  inline
  const Weather::DDPressureCool_sequence& Weather::
  DDPressureCool () const
  {
    return this->DDPressureCool_;
  }

  inline
  Weather::DDPressureCool_sequence& Weather::
  DDPressureCool ()
  {
    return this->DDPressureCool_;
  }

  inline
  void Weather::
  DDPressureCool (const DDPressureCool_sequence& s)
  {
    this->DDPressureCool_ = s;
  }

  inline
  const Weather::DDWindSpeedCool_sequence& Weather::
  DDWindSpeedCool () const
  {
    return this->DDWindSpeedCool_;
  }

  inline
  Weather::DDWindSpeedCool_sequence& Weather::
  DDWindSpeedCool ()
  {
    return this->DDWindSpeedCool_;
  }

  inline
  void Weather::
  DDWindSpeedCool (const DDWindSpeedCool_sequence& s)
  {
    this->DDWindSpeedCool_ = s;
  }

  inline
  const Weather::DDWindDirCool_sequence& Weather::
  DDWindDirCool () const
  {
    return this->DDWindDirCool_;
  }

  inline
  Weather::DDWindDirCool_sequence& Weather::
  DDWindDirCool ()
  {
    return this->DDWindDirCool_;
  }

  inline
  void Weather::
  DDWindDirCool (const DDWindDirCool_sequence& s)
  {
    this->DDWindDirCool_ = s;
  }

  inline
  const Weather::DDSkyClearnessCool_sequence& Weather::
  DDSkyClearnessCool () const
  {
    return this->DDSkyClearnessCool_;
  }

  inline
  Weather::DDSkyClearnessCool_sequence& Weather::
  DDSkyClearnessCool ()
  {
    return this->DDSkyClearnessCool_;
  }

  inline
  void Weather::
  DDSkyClearnessCool (const DDSkyClearnessCool_sequence& s)
  {
    this->DDSkyClearnessCool_ = s;
  }

  inline
  const Weather::DDRainCool_sequence& Weather::
  DDRainCool () const
  {
    return this->DDRainCool_;
  }

  inline
  Weather::DDRainCool_sequence& Weather::
  DDRainCool ()
  {
    return this->DDRainCool_;
  }

  inline
  void Weather::
  DDRainCool (const DDRainCool_sequence& s)
  {
    this->DDRainCool_ = s;
  }

  inline
  const Weather::DDSnowCool_sequence& Weather::
  DDSnowCool () const
  {
    return this->DDSnowCool_;
  }

  inline
  Weather::DDSnowCool_sequence& Weather::
  DDSnowCool ()
  {
    return this->DDSnowCool_;
  }

  inline
  void Weather::
  DDSnowCool (const DDSnowCool_sequence& s)
  {
    this->DDSnowCool_ = s;
  }

  inline
  const Weather::DDMonthCool_sequence& Weather::
  DDMonthCool () const
  {
    return this->DDMonthCool_;
  }

  inline
  Weather::DDMonthCool_sequence& Weather::
  DDMonthCool ()
  {
    return this->DDMonthCool_;
  }

  inline
  void Weather::
  DDMonthCool (const DDMonthCool_sequence& s)
  {
    this->DDMonthCool_ = s;
  }

  inline
  const Weather::DDDayCool_sequence& Weather::
  DDDayCool () const
  {
    return this->DDDayCool_;
  }

  inline
  Weather::DDDayCool_sequence& Weather::
  DDDayCool ()
  {
    return this->DDDayCool_;
  }

  inline
  void Weather::
  DDDayCool (const DDDayCool_sequence& s)
  {
    this->DDDayCool_ = s;
  }

  inline
  const Weather::DDDaylightCool_sequence& Weather::
  DDDaylightCool () const
  {
    return this->DDDaylightCool_;
  }

  inline
  Weather::DDDaylightCool_sequence& Weather::
  DDDaylightCool ()
  {
    return this->DDDaylightCool_;
  }

  inline
  void Weather::
  DDDaylightCool (const DDDaylightCool_sequence& s)
  {
    this->DDDaylightCool_ = s;
  }

  inline
  const Weather::DDGroundTCool_sequence& Weather::
  DDGroundTCool () const
  {
    return this->DDGroundTCool_;
  }

  inline
  Weather::DDGroundTCool_sequence& Weather::
  DDGroundTCool ()
  {
    return this->DDGroundTCool_;
  }

  inline
  void Weather::
  DDGroundTCool (const DDGroundTCool_sequence& s)
  {
    this->DDGroundTCool_ = s;
  }

  inline
  const Weather::DDDBHeat_sequence& Weather::
  DDDBHeat () const
  {
    return this->DDDBHeat_;
  }

  inline
  Weather::DDDBHeat_sequence& Weather::
  DDDBHeat ()
  {
    return this->DDDBHeat_;
  }

  inline
  void Weather::
  DDDBHeat (const DDDBHeat_sequence& s)
  {
    this->DDDBHeat_ = s;
  }

  inline
  const Weather::DDHiHrHeat_sequence& Weather::
  DDHiHrHeat () const
  {
    return this->DDHiHrHeat_;
  }

  inline
  Weather::DDHiHrHeat_sequence& Weather::
  DDHiHrHeat ()
  {
    return this->DDHiHrHeat_;
  }

  inline
  void Weather::
  DDHiHrHeat (const DDHiHrHeat_sequence& s)
  {
    this->DDHiHrHeat_ = s;
  }

  inline
  const Weather::DDWBHeat_sequence& Weather::
  DDWBHeat () const
  {
    return this->DDWBHeat_;
  }

  inline
  Weather::DDWBHeat_sequence& Weather::
  DDWBHeat ()
  {
    return this->DDWBHeat_;
  }

  inline
  void Weather::
  DDWBHeat (const DDWBHeat_sequence& s)
  {
    this->DDWBHeat_ = s;
  }

  inline
  const Weather::DDDBRangeHeat_sequence& Weather::
  DDDBRangeHeat () const
  {
    return this->DDDBRangeHeat_;
  }

  inline
  Weather::DDDBRangeHeat_sequence& Weather::
  DDDBRangeHeat ()
  {
    return this->DDDBRangeHeat_;
  }

  inline
  void Weather::
  DDDBRangeHeat (const DDDBRangeHeat_sequence& s)
  {
    this->DDDBRangeHeat_ = s;
  }

  inline
  const Weather::DDLoHrHeat_sequence& Weather::
  DDLoHrHeat () const
  {
    return this->DDLoHrHeat_;
  }

  inline
  Weather::DDLoHrHeat_sequence& Weather::
  DDLoHrHeat ()
  {
    return this->DDLoHrHeat_;
  }

  inline
  void Weather::
  DDLoHrHeat (const DDLoHrHeat_sequence& s)
  {
    this->DDLoHrHeat_ = s;
  }

  inline
  const Weather::DDPressureHeat_sequence& Weather::
  DDPressureHeat () const
  {
    return this->DDPressureHeat_;
  }

  inline
  Weather::DDPressureHeat_sequence& Weather::
  DDPressureHeat ()
  {
    return this->DDPressureHeat_;
  }

  inline
  void Weather::
  DDPressureHeat (const DDPressureHeat_sequence& s)
  {
    this->DDPressureHeat_ = s;
  }

  inline
  const Weather::DDWindSpeedHeat_sequence& Weather::
  DDWindSpeedHeat () const
  {
    return this->DDWindSpeedHeat_;
  }

  inline
  Weather::DDWindSpeedHeat_sequence& Weather::
  DDWindSpeedHeat ()
  {
    return this->DDWindSpeedHeat_;
  }

  inline
  void Weather::
  DDWindSpeedHeat (const DDWindSpeedHeat_sequence& s)
  {
    this->DDWindSpeedHeat_ = s;
  }

  inline
  const Weather::DDWindDirHeat_sequence& Weather::
  DDWindDirHeat () const
  {
    return this->DDWindDirHeat_;
  }

  inline
  Weather::DDWindDirHeat_sequence& Weather::
  DDWindDirHeat ()
  {
    return this->DDWindDirHeat_;
  }

  inline
  void Weather::
  DDWindDirHeat (const DDWindDirHeat_sequence& s)
  {
    this->DDWindDirHeat_ = s;
  }

  inline
  const Weather::DDSkyClearnessHeat_sequence& Weather::
  DDSkyClearnessHeat () const
  {
    return this->DDSkyClearnessHeat_;
  }

  inline
  Weather::DDSkyClearnessHeat_sequence& Weather::
  DDSkyClearnessHeat ()
  {
    return this->DDSkyClearnessHeat_;
  }

  inline
  void Weather::
  DDSkyClearnessHeat (const DDSkyClearnessHeat_sequence& s)
  {
    this->DDSkyClearnessHeat_ = s;
  }

  inline
  const Weather::DDRainHeat_sequence& Weather::
  DDRainHeat () const
  {
    return this->DDRainHeat_;
  }

  inline
  Weather::DDRainHeat_sequence& Weather::
  DDRainHeat ()
  {
    return this->DDRainHeat_;
  }

  inline
  void Weather::
  DDRainHeat (const DDRainHeat_sequence& s)
  {
    this->DDRainHeat_ = s;
  }

  inline
  const Weather::DDSnowHeat_sequence& Weather::
  DDSnowHeat () const
  {
    return this->DDSnowHeat_;
  }

  inline
  Weather::DDSnowHeat_sequence& Weather::
  DDSnowHeat ()
  {
    return this->DDSnowHeat_;
  }

  inline
  void Weather::
  DDSnowHeat (const DDSnowHeat_sequence& s)
  {
    this->DDSnowHeat_ = s;
  }

  inline
  const Weather::DDMonthHeat_sequence& Weather::
  DDMonthHeat () const
  {
    return this->DDMonthHeat_;
  }

  inline
  Weather::DDMonthHeat_sequence& Weather::
  DDMonthHeat ()
  {
    return this->DDMonthHeat_;
  }

  inline
  void Weather::
  DDMonthHeat (const DDMonthHeat_sequence& s)
  {
    this->DDMonthHeat_ = s;
  }

  inline
  const Weather::DDDayHeat_sequence& Weather::
  DDDayHeat () const
  {
    return this->DDDayHeat_;
  }

  inline
  Weather::DDDayHeat_sequence& Weather::
  DDDayHeat ()
  {
    return this->DDDayHeat_;
  }

  inline
  void Weather::
  DDDayHeat (const DDDayHeat_sequence& s)
  {
    this->DDDayHeat_ = s;
  }

  inline
  const Weather::DDDaylightHeat_sequence& Weather::
  DDDaylightHeat () const
  {
    return this->DDDaylightHeat_;
  }

  inline
  Weather::DDDaylightHeat_sequence& Weather::
  DDDaylightHeat ()
  {
    return this->DDDaylightHeat_;
  }

  inline
  void Weather::
  DDDaylightHeat (const DDDaylightHeat_sequence& s)
  {
    this->DDDaylightHeat_ = s;
  }

  inline
  const Weather::DDGroundTHeat_sequence& Weather::
  DDGroundTHeat () const
  {
    return this->DDGroundTHeat_;
  }

  inline
  Weather::DDGroundTHeat_sequence& Weather::
  DDGroundTHeat ()
  {
    return this->DDGroundTHeat_;
  }

  inline
  void Weather::
  DDGroundTHeat (const DDGroundTHeat_sequence& s)
  {
    this->DDGroundTHeat_ = s;
  }

  inline
  const Weather::GroundTemp_sequence& Weather::
  GroundTemp () const
  {
    return this->GroundTemp_;
  }

  inline
  Weather::GroundTemp_sequence& Weather::
  GroundTemp ()
  {
    return this->GroundTemp_;
  }

  inline
  void Weather::
  GroundTemp (const GroundTemp_sequence& s)
  {
    this->GroundTemp_ = s;
  }

  inline
  const Weather::WFTDTemp_sequence& Weather::
  WFTDTemp () const
  {
    return this->WFTDTemp_;
  }

  inline
  Weather::WFTDTemp_sequence& Weather::
  WFTDTemp ()
  {
    return this->WFTDTemp_;
  }

  inline
  void Weather::
  WFTDTemp (const WFTDTemp_sequence& s)
  {
    this->WFTDTemp_ = s;
  }

  inline
  const Weather::WFTDRelHumidity_sequence& Weather::
  WFTDRelHumidity () const
  {
    return this->WFTDRelHumidity_;
  }

  inline
  Weather::WFTDRelHumidity_sequence& Weather::
  WFTDRelHumidity ()
  {
    return this->WFTDRelHumidity_;
  }

  inline
  void Weather::
  WFTDRelHumidity (const WFTDRelHumidity_sequence& s)
  {
    this->WFTDRelHumidity_ = s;
  }

  inline
  const Weather::WFTDWindSpeed_sequence& Weather::
  WFTDWindSpeed () const
  {
    return this->WFTDWindSpeed_;
  }

  inline
  Weather::WFTDWindSpeed_sequence& Weather::
  WFTDWindSpeed ()
  {
    return this->WFTDWindSpeed_;
  }

  inline
  void Weather::
  WFTDWindSpeed (const WFTDWindSpeed_sequence& s)
  {
    this->WFTDWindSpeed_ = s;
  }

  inline
  const Weather::WFTDWindDir_sequence& Weather::
  WFTDWindDir () const
  {
    return this->WFTDWindDir_;
  }

  inline
  Weather::WFTDWindDir_sequence& Weather::
  WFTDWindDir ()
  {
    return this->WFTDWindDir_;
  }

  inline
  void Weather::
  WFTDWindDir (const WFTDWindDir_sequence& s)
  {
    this->WFTDWindDir_ = s;
  }

  inline
  const Weather::WFTDPressure_sequence& Weather::
  WFTDPressure () const
  {
    return this->WFTDPressure_;
  }

  inline
  Weather::WFTDPressure_sequence& Weather::
  WFTDPressure ()
  {
    return this->WFTDPressure_;
  }

  inline
  void Weather::
  WFTDPressure (const WFTDPressure_sequence& s)
  {
    this->WFTDPressure_ = s;
  }

  inline
  const Weather::Reference_sequence& Weather::
  Reference () const
  {
    return this->Reference_;
  }

  inline
  Weather::Reference_sequence& Weather::
  Reference ()
  {
    return this->Reference_;
  }

  inline
  void Weather::
  Reference (const Reference_sequence& s)
  {
    this->Reference_ = s;
  }

  inline
  const Weather::id_type& Weather::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Weather::id_type& Weather::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Weather::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Weather::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Weather::programId_optional& Weather::
  programId () const
  {
    return this->programId_;
  }

  inline
  Weather::programId_optional& Weather::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Weather::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Weather::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Weather::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // WeekSchedule
  // 

  inline
  const WeekSchedule::Name_sequence& WeekSchedule::
  Name () const
  {
    return this->Name_;
  }

  inline
  WeekSchedule::Name_sequence& WeekSchedule::
  Name ()
  {
    return this->Name_;
  }

  inline
  void WeekSchedule::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const WeekSchedule::Description_sequence& WeekSchedule::
  Description () const
  {
    return this->Description_;
  }

  inline
  WeekSchedule::Description_sequence& WeekSchedule::
  Description ()
  {
    return this->Description_;
  }

  inline
  void WeekSchedule::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const WeekSchedule::Day_sequence& WeekSchedule::
  Day () const
  {
    return this->Day_;
  }

  inline
  WeekSchedule::Day_sequence& WeekSchedule::
  Day ()
  {
    return this->Day_;
  }

  inline
  void WeekSchedule::
  Day (const Day_sequence& s)
  {
    this->Day_ = s;
  }

  inline
  const WeekSchedule::id_type& WeekSchedule::
  id () const
  {
    return this->id_.get ();
  }

  inline
  WeekSchedule::id_type& WeekSchedule::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void WeekSchedule::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void WeekSchedule::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const WeekSchedule::type_type& WeekSchedule::
  type () const
  {
    return this->type_.get ();
  }

  inline
  WeekSchedule::type_type& WeekSchedule::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void WeekSchedule::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void WeekSchedule::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }


  // WeekScheduleId
  // 

  inline
  const WeekScheduleId::weekScheduleIdRef_type& WeekScheduleId::
  weekScheduleIdRef () const
  {
    return this->weekScheduleIdRef_.get ();
  }

  inline
  WeekScheduleId::weekScheduleIdRef_type& WeekScheduleId::
  weekScheduleIdRef ()
  {
    return this->weekScheduleIdRef_.get ();
  }

  inline
  void WeekScheduleId::
  weekScheduleIdRef (const weekScheduleIdRef_type& x)
  {
    this->weekScheduleIdRef_.set (x);
  }

  inline
  void WeekScheduleId::
  weekScheduleIdRef (::std::auto_ptr< weekScheduleIdRef_type > x)
  {
    this->weekScheduleIdRef_.set (x);
  }


  // Weight
  // 

  inline
  const Weight::unit_type& Weight::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  Weight::unit_type& Weight::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void Weight::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Weight::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WFTDPressure
  // 

  inline
  const WFTDPressure::unit_type& WFTDPressure::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WFTDPressure::unit_type& WFTDPressure::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WFTDPressure::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WFTDPressure::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WFTDRelHumidity
  // 

  inline
  const WFTDRelHumidity::unit_type& WFTDRelHumidity::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WFTDRelHumidity::unit_type& WFTDRelHumidity::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WFTDRelHumidity::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WFTDRelHumidity::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WFTDTemp
  // 

  inline
  const WFTDTemp::unit_type& WFTDTemp::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WFTDTemp::unit_type& WFTDTemp::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WFTDTemp::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WFTDTemp::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WFTDWindDir
  // 

  inline
  const WFTDWindDir::unit_type& WFTDWindDir::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WFTDWindDir::unit_type& WFTDWindDir::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WFTDWindDir::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WFTDWindDir::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WFTDWindSpeed
  // 

  inline
  const WFTDWindSpeed::unit_type& WFTDWindSpeed::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WFTDWindSpeed::unit_type& WFTDWindSpeed::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WFTDWindSpeed::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WFTDWindSpeed::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WindSpeed
  // 

  inline
  const WindSpeed::unit_type& WindSpeed::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  WindSpeed::unit_type& WindSpeed::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void WindSpeed::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void WindSpeed::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const WindSpeed::type_type& WindSpeed::
  type () const
  {
    return this->type_.get ();
  }

  inline
  WindSpeed::type_type& WindSpeed::
  type ()
  {
    return this->type_.get ();
  }

  inline
  void WindSpeed::
  type (const type_type& x)
  {
    this->type_.set (x);
  }

  inline
  void WindSpeed::
  type (::std::auto_ptr< type_type > x)
  {
    this->type_.set (x);
  }


  // Width
  // 

  inline
  const Width::unit_optional& Width::
  unit () const
  {
    return this->unit_;
  }

  inline
  Width::unit_optional& Width::
  unit ()
  {
    return this->unit_;
  }

  inline
  void Width::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void Width::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void Width::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // WindowType
  // 

  inline
  const WindowType::Name_sequence& WindowType::
  Name () const
  {
    return this->Name_;
  }

  inline
  WindowType::Name_sequence& WindowType::
  Name ()
  {
    return this->Name_;
  }

  inline
  void WindowType::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const WindowType::Description_sequence& WindowType::
  Description () const
  {
    return this->Description_;
  }

  inline
  WindowType::Description_sequence& WindowType::
  Description ()
  {
    return this->Description_;
  }

  inline
  void WindowType::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const WindowType::U_value_sequence& WindowType::
  U_value () const
  {
    return this->U_value_;
  }

  inline
  WindowType::U_value_sequence& WindowType::
  U_value ()
  {
    return this->U_value_;
  }

  inline
  void WindowType::
  U_value (const U_value_sequence& s)
  {
    this->U_value_ = s;
  }

  inline
  const WindowType::ShadingCoeff_sequence& WindowType::
  ShadingCoeff () const
  {
    return this->ShadingCoeff_;
  }

  inline
  WindowType::ShadingCoeff_sequence& WindowType::
  ShadingCoeff ()
  {
    return this->ShadingCoeff_;
  }

  inline
  void WindowType::
  ShadingCoeff (const ShadingCoeff_sequence& s)
  {
    this->ShadingCoeff_ = s;
  }

  inline
  const WindowType::SolarHeatGainCoeff_sequence& WindowType::
  SolarHeatGainCoeff () const
  {
    return this->SolarHeatGainCoeff_;
  }

  inline
  WindowType::SolarHeatGainCoeff_sequence& WindowType::
  SolarHeatGainCoeff ()
  {
    return this->SolarHeatGainCoeff_;
  }

  inline
  void WindowType::
  SolarHeatGainCoeff (const SolarHeatGainCoeff_sequence& s)
  {
    this->SolarHeatGainCoeff_ = s;
  }

  inline
  const WindowType::Transmittance_sequence& WindowType::
  Transmittance () const
  {
    return this->Transmittance_;
  }

  inline
  WindowType::Transmittance_sequence& WindowType::
  Transmittance ()
  {
    return this->Transmittance_;
  }

  inline
  void WindowType::
  Transmittance (const Transmittance_sequence& s)
  {
    this->Transmittance_ = s;
  }

  inline
  const WindowType::Reflectance_sequence& WindowType::
  Reflectance () const
  {
    return this->Reflectance_;
  }

  inline
  WindowType::Reflectance_sequence& WindowType::
  Reflectance ()
  {
    return this->Reflectance_;
  }

  inline
  void WindowType::
  Reflectance (const Reflectance_sequence& s)
  {
    this->Reflectance_ = s;
  }

  inline
  const WindowType::Emittance_sequence& WindowType::
  Emittance () const
  {
    return this->Emittance_;
  }

  inline
  WindowType::Emittance_sequence& WindowType::
  Emittance ()
  {
    return this->Emittance_;
  }

  inline
  void WindowType::
  Emittance (const Emittance_sequence& s)
  {
    this->Emittance_ = s;
  }

  inline
  const WindowType::Blind_sequence& WindowType::
  Blind () const
  {
    return this->Blind_;
  }

  inline
  WindowType::Blind_sequence& WindowType::
  Blind ()
  {
    return this->Blind_;
  }

  inline
  void WindowType::
  Blind (const Blind_sequence& s)
  {
    this->Blind_ = s;
  }

  inline
  const WindowType::Frame_sequence& WindowType::
  Frame () const
  {
    return this->Frame_;
  }

  inline
  WindowType::Frame_sequence& WindowType::
  Frame ()
  {
    return this->Frame_;
  }

  inline
  void WindowType::
  Frame (const Frame_sequence& s)
  {
    this->Frame_ = s;
  }

  inline
  const WindowType::Gap_sequence& WindowType::
  Gap () const
  {
    return this->Gap_;
  }

  inline
  WindowType::Gap_sequence& WindowType::
  Gap ()
  {
    return this->Gap_;
  }

  inline
  void WindowType::
  Gap (const Gap_sequence& s)
  {
    this->Gap_ = s;
  }

  inline
  const WindowType::Glaze_sequence& WindowType::
  Glaze () const
  {
    return this->Glaze_;
  }

  inline
  WindowType::Glaze_sequence& WindowType::
  Glaze ()
  {
    return this->Glaze_;
  }

  inline
  void WindowType::
  Glaze (const Glaze_sequence& s)
  {
    this->Glaze_ = s;
  }

  inline
  const WindowType::Cost_sequence& WindowType::
  Cost () const
  {
    return this->Cost_;
  }

  inline
  WindowType::Cost_sequence& WindowType::
  Cost ()
  {
    return this->Cost_;
  }

  inline
  void WindowType::
  Cost (const Cost_sequence& s)
  {
    this->Cost_ = s;
  }

  inline
  const WindowType::ExtEquipId_sequence& WindowType::
  ExtEquipId () const
  {
    return this->ExtEquipId_;
  }

  inline
  WindowType::ExtEquipId_sequence& WindowType::
  ExtEquipId ()
  {
    return this->ExtEquipId_;
  }

  inline
  void WindowType::
  ExtEquipId (const ExtEquipId_sequence& s)
  {
    this->ExtEquipId_ = s;
  }

  inline
  const WindowType::id_type& WindowType::
  id () const
  {
    return this->id_.get ();
  }

  inline
  WindowType::id_type& WindowType::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void WindowType::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void WindowType::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const WindowType::DOELibIdRef_optional& WindowType::
  DOELibIdRef () const
  {
    return this->DOELibIdRef_;
  }

  inline
  WindowType::DOELibIdRef_optional& WindowType::
  DOELibIdRef ()
  {
    return this->DOELibIdRef_;
  }

  inline
  void WindowType::
  DOELibIdRef (const DOELibIdRef_type& x)
  {
    this->DOELibIdRef_.set (x);
  }

  inline
  void WindowType::
  DOELibIdRef (const DOELibIdRef_optional& x)
  {
    this->DOELibIdRef_ = x;
  }

  inline
  void WindowType::
  DOELibIdRef (::std::auto_ptr< DOELibIdRef_type > x)
  {
    this->DOELibIdRef_.set (x);
  }

  inline
  const WindowType::programId_optional& WindowType::
  programId () const
  {
    return this->programId_;
  }

  inline
  WindowType::programId_optional& WindowType::
  programId ()
  {
    return this->programId_;
  }

  inline
  void WindowType::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void WindowType::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void WindowType::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // XAxis
  // 

  inline
  const XAxis::Name_sequence& XAxis::
  Name () const
  {
    return this->Name_;
  }

  inline
  XAxis::Name_sequence& XAxis::
  Name ()
  {
    return this->Name_;
  }

  inline
  void XAxis::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const XAxis::Description_sequence& XAxis::
  Description () const
  {
    return this->Description_;
  }

  inline
  XAxis::Description_sequence& XAxis::
  Description ()
  {
    return this->Description_;
  }

  inline
  void XAxis::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const XAxis::unit_type& XAxis::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  XAxis::unit_type& XAxis::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void XAxis::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void XAxis::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const XAxis::dataType_type& XAxis::
  dataType () const
  {
    return this->dataType_.get ();
  }

  inline
  XAxis::dataType_type& XAxis::
  dataType ()
  {
    return this->dataType_.get ();
  }

  inline
  void XAxis::
  dataType (const dataType_type& x)
  {
    this->dataType_.set (x);
  }

  inline
  void XAxis::
  dataType (::std::auto_ptr< dataType_type > x)
  {
    this->dataType_.set (x);
  }


  // YAxis
  // 

  inline
  const YAxis::Name_sequence& YAxis::
  Name () const
  {
    return this->Name_;
  }

  inline
  YAxis::Name_sequence& YAxis::
  Name ()
  {
    return this->Name_;
  }

  inline
  void YAxis::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const YAxis::Description_sequence& YAxis::
  Description () const
  {
    return this->Description_;
  }

  inline
  YAxis::Description_sequence& YAxis::
  Description ()
  {
    return this->Description_;
  }

  inline
  void YAxis::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const YAxis::unit_type& YAxis::
  unit () const
  {
    return this->unit_.get ();
  }

  inline
  YAxis::unit_type& YAxis::
  unit ()
  {
    return this->unit_.get ();
  }

  inline
  void YAxis::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void YAxis::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }

  inline
  const YAxis::dataType_type& YAxis::
  dataType () const
  {
    return this->dataType_.get ();
  }

  inline
  YAxis::dataType_type& YAxis::
  dataType ()
  {
    return this->dataType_.get ();
  }

  inline
  void YAxis::
  dataType (const dataType_type& x)
  {
    this->dataType_.set (x);
  }

  inline
  void YAxis::
  dataType (::std::auto_ptr< dataType_type > x)
  {
    this->dataType_.set (x);
  }


  // YearModeled
  // 

  inline
  const YearModeled::BeginDate_sequence& YearModeled::
  BeginDate () const
  {
    return this->BeginDate_;
  }

  inline
  YearModeled::BeginDate_sequence& YearModeled::
  BeginDate ()
  {
    return this->BeginDate_;
  }

  inline
  void YearModeled::
  BeginDate (const BeginDate_sequence& s)
  {
    this->BeginDate_ = s;
  }

  inline
  const YearModeled::EndDate_sequence& YearModeled::
  EndDate () const
  {
    return this->EndDate_;
  }

  inline
  YearModeled::EndDate_sequence& YearModeled::
  EndDate ()
  {
    return this->EndDate_;
  }

  inline
  void YearModeled::
  EndDate (const EndDate_sequence& s)
  {
    this->EndDate_ = s;
  }

  inline
  const YearModeled::HolidaysModeled_sequence& YearModeled::
  HolidaysModeled () const
  {
    return this->HolidaysModeled_;
  }

  inline
  YearModeled::HolidaysModeled_sequence& YearModeled::
  HolidaysModeled ()
  {
    return this->HolidaysModeled_;
  }

  inline
  void YearModeled::
  HolidaysModeled (const HolidaysModeled_sequence& s)
  {
    this->HolidaysModeled_ = s;
  }


  // YearSchedule
  // 

  inline
  const YearSchedule::Name_sequence& YearSchedule::
  Name () const
  {
    return this->Name_;
  }

  inline
  YearSchedule::Name_sequence& YearSchedule::
  Name ()
  {
    return this->Name_;
  }

  inline
  void YearSchedule::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const YearSchedule::Description_sequence& YearSchedule::
  Description () const
  {
    return this->Description_;
  }

  inline
  YearSchedule::Description_sequence& YearSchedule::
  Description ()
  {
    return this->Description_;
  }

  inline
  void YearSchedule::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const YearSchedule::BeginDate_sequence& YearSchedule::
  BeginDate () const
  {
    return this->BeginDate_;
  }

  inline
  YearSchedule::BeginDate_sequence& YearSchedule::
  BeginDate ()
  {
    return this->BeginDate_;
  }

  inline
  void YearSchedule::
  BeginDate (const BeginDate_sequence& s)
  {
    this->BeginDate_ = s;
  }

  inline
  const YearSchedule::EndDate_sequence& YearSchedule::
  EndDate () const
  {
    return this->EndDate_;
  }

  inline
  YearSchedule::EndDate_sequence& YearSchedule::
  EndDate ()
  {
    return this->EndDate_;
  }

  inline
  void YearSchedule::
  EndDate (const EndDate_sequence& s)
  {
    this->EndDate_ = s;
  }

  inline
  const YearSchedule::WeekScheduleId_sequence& YearSchedule::
  WeekScheduleId () const
  {
    return this->WeekScheduleId_;
  }

  inline
  YearSchedule::WeekScheduleId_sequence& YearSchedule::
  WeekScheduleId ()
  {
    return this->WeekScheduleId_;
  }

  inline
  void YearSchedule::
  WeekScheduleId (const WeekScheduleId_sequence& s)
  {
    this->WeekScheduleId_ = s;
  }

  inline
  const YearSchedule::id_type& YearSchedule::
  id () const
  {
    return this->id_.get ();
  }

  inline
  YearSchedule::id_type& YearSchedule::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void YearSchedule::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void YearSchedule::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }


  // HolidaysModeled
  // 

  inline
  const HolidaysModeled::Name_sequence& HolidaysModeled::
  Name () const
  {
    return this->Name_;
  }

  inline
  HolidaysModeled::Name_sequence& HolidaysModeled::
  Name ()
  {
    return this->Name_;
  }

  inline
  void HolidaysModeled::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const HolidaysModeled::Description_sequence& HolidaysModeled::
  Description () const
  {
    return this->Description_;
  }

  inline
  HolidaysModeled::Description_sequence& HolidaysModeled::
  Description ()
  {
    return this->Description_;
  }

  inline
  void HolidaysModeled::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const HolidaysModeled::HolidayDate_sequence& HolidaysModeled::
  HolidayDate () const
  {
    return this->HolidayDate_;
  }

  inline
  HolidaysModeled::HolidayDate_sequence& HolidaysModeled::
  HolidayDate ()
  {
    return this->HolidayDate_;
  }

  inline
  void HolidaysModeled::
  HolidayDate (const HolidayDate_sequence& s)
  {
    this->HolidayDate_ = s;
  }

  inline
  const HolidaysModeled::id_type& HolidaysModeled::
  id () const
  {
    return this->id_.get ();
  }

  inline
  HolidaysModeled::id_type& HolidaysModeled::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void HolidaysModeled::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void HolidaysModeled::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }


  // Zone
  // 

  inline
  const Zone::Name_sequence& Zone::
  Name () const
  {
    return this->Name_;
  }

  inline
  Zone::Name_sequence& Zone::
  Name ()
  {
    return this->Name_;
  }

  inline
  void Zone::
  Name (const Name_sequence& s)
  {
    this->Name_ = s;
  }

  inline
  const Zone::Description_sequence& Zone::
  Description () const
  {
    return this->Description_;
  }

  inline
  Zone::Description_sequence& Zone::
  Description ()
  {
    return this->Description_;
  }

  inline
  void Zone::
  Description (const Description_sequence& s)
  {
    this->Description_ = s;
  }

  inline
  const Zone::Flow_sequence& Zone::
  Flow () const
  {
    return this->Flow_;
  }

  inline
  Zone::Flow_sequence& Zone::
  Flow ()
  {
    return this->Flow_;
  }

  inline
  void Zone::
  Flow (const Flow_sequence& s)
  {
    this->Flow_ = s;
  }

  inline
  const Zone::AirChangesPerHour_sequence& Zone::
  AirChangesPerHour () const
  {
    return this->AirChangesPerHour_;
  }

  inline
  Zone::AirChangesPerHour_sequence& Zone::
  AirChangesPerHour ()
  {
    return this->AirChangesPerHour_;
  }

  inline
  void Zone::
  AirChangesPerHour (const AirChangesPerHour_sequence& s)
  {
    this->AirChangesPerHour_ = s;
  }

  inline
  const Zone::FlowPerArea_sequence& Zone::
  FlowPerArea () const
  {
    return this->FlowPerArea_;
  }

  inline
  Zone::FlowPerArea_sequence& Zone::
  FlowPerArea ()
  {
    return this->FlowPerArea_;
  }

  inline
  void Zone::
  FlowPerArea (const FlowPerArea_sequence& s)
  {
    this->FlowPerArea_ = s;
  }

  inline
  const Zone::FlowPerPerson_sequence& Zone::
  FlowPerPerson () const
  {
    return this->FlowPerPerson_;
  }

  inline
  Zone::FlowPerPerson_sequence& Zone::
  FlowPerPerson ()
  {
    return this->FlowPerPerson_;
  }

  inline
  void Zone::
  FlowPerPerson (const FlowPerPerson_sequence& s)
  {
    this->FlowPerPerson_ = s;
  }

  inline
  const Zone::OAFlowPerArea_sequence& Zone::
  OAFlowPerArea () const
  {
    return this->OAFlowPerArea_;
  }

  inline
  Zone::OAFlowPerArea_sequence& Zone::
  OAFlowPerArea ()
  {
    return this->OAFlowPerArea_;
  }

  inline
  void Zone::
  OAFlowPerArea (const OAFlowPerArea_sequence& s)
  {
    this->OAFlowPerArea_ = s;
  }

  inline
  const Zone::OAFlowPerPerson_sequence& Zone::
  OAFlowPerPerson () const
  {
    return this->OAFlowPerPerson_;
  }

  inline
  Zone::OAFlowPerPerson_sequence& Zone::
  OAFlowPerPerson ()
  {
    return this->OAFlowPerPerson_;
  }

  inline
  void Zone::
  OAFlowPerPerson (const OAFlowPerPerson_sequence& s)
  {
    this->OAFlowPerPerson_ = s;
  }

  inline
  const Zone::DesignHeatT_sequence& Zone::
  DesignHeatT () const
  {
    return this->DesignHeatT_;
  }

  inline
  Zone::DesignHeatT_sequence& Zone::
  DesignHeatT ()
  {
    return this->DesignHeatT_;
  }

  inline
  void Zone::
  DesignHeatT (const DesignHeatT_sequence& s)
  {
    this->DesignHeatT_ = s;
  }

  inline
  const Zone::DesignCoolT_sequence& Zone::
  DesignCoolT () const
  {
    return this->DesignCoolT_;
  }

  inline
  Zone::DesignCoolT_sequence& Zone::
  DesignCoolT ()
  {
    return this->DesignCoolT_;
  }

  inline
  void Zone::
  DesignCoolT (const DesignCoolT_sequence& s)
  {
    this->DesignCoolT_ = s;
  }

  inline
  const Zone::IndoorAirQuality_sequence& Zone::
  IndoorAirQuality () const
  {
    return this->IndoorAirQuality_;
  }

  inline
  Zone::IndoorAirQuality_sequence& Zone::
  IndoorAirQuality ()
  {
    return this->IndoorAirQuality_;
  }

  inline
  void Zone::
  IndoorAirQuality (const IndoorAirQuality_sequence& s)
  {
    this->IndoorAirQuality_ = s;
  }

  inline
  const Zone::HydronicLoopId_sequence& Zone::
  HydronicLoopId () const
  {
    return this->HydronicLoopId_;
  }

  inline
  Zone::HydronicLoopId_sequence& Zone::
  HydronicLoopId ()
  {
    return this->HydronicLoopId_;
  }

  inline
  void Zone::
  HydronicLoopId (const HydronicLoopId_sequence& s)
  {
    this->HydronicLoopId_ = s;
  }

  inline
  const Zone::AirLoopId_sequence& Zone::
  AirLoopId () const
  {
    return this->AirLoopId_;
  }

  inline
  Zone::AirLoopId_sequence& Zone::
  AirLoopId ()
  {
    return this->AirLoopId_;
  }

  inline
  void Zone::
  AirLoopId (const AirLoopId_sequence& s)
  {
    this->AirLoopId_ = s;
  }

  inline
  const Zone::CADObjectId_sequence& Zone::
  CADObjectId () const
  {
    return this->CADObjectId_;
  }

  inline
  Zone::CADObjectId_sequence& Zone::
  CADObjectId ()
  {
    return this->CADObjectId_;
  }

  inline
  void Zone::
  CADObjectId (const CADObjectId_sequence& s)
  {
    this->CADObjectId_ = s;
  }

  inline
  const Zone::TypeCode_sequence& Zone::
  TypeCode () const
  {
    return this->TypeCode_;
  }

  inline
  Zone::TypeCode_sequence& Zone::
  TypeCode ()
  {
    return this->TypeCode_;
  }

  inline
  void Zone::
  TypeCode (const TypeCode_sequence& s)
  {
    this->TypeCode_ = s;
  }

  inline
  const Zone::id_type& Zone::
  id () const
  {
    return this->id_.get ();
  }

  inline
  Zone::id_type& Zone::
  id ()
  {
    return this->id_.get ();
  }

  inline
  void Zone::
  id (const id_type& x)
  {
    this->id_.set (x);
  }

  inline
  void Zone::
  id (::std::auto_ptr< id_type > x)
  {
    this->id_.set (x);
  }

  inline
  const Zone::heatSchedIdRef_optional& Zone::
  heatSchedIdRef () const
  {
    return this->heatSchedIdRef_;
  }

  inline
  Zone::heatSchedIdRef_optional& Zone::
  heatSchedIdRef ()
  {
    return this->heatSchedIdRef_;
  }

  inline
  void Zone::
  heatSchedIdRef (const heatSchedIdRef_type& x)
  {
    this->heatSchedIdRef_.set (x);
  }

  inline
  void Zone::
  heatSchedIdRef (const heatSchedIdRef_optional& x)
  {
    this->heatSchedIdRef_ = x;
  }

  inline
  void Zone::
  heatSchedIdRef (::std::auto_ptr< heatSchedIdRef_type > x)
  {
    this->heatSchedIdRef_.set (x);
  }

  inline
  const Zone::coolSchedIdRef_optional& Zone::
  coolSchedIdRef () const
  {
    return this->coolSchedIdRef_;
  }

  inline
  Zone::coolSchedIdRef_optional& Zone::
  coolSchedIdRef ()
  {
    return this->coolSchedIdRef_;
  }

  inline
  void Zone::
  coolSchedIdRef (const coolSchedIdRef_type& x)
  {
    this->coolSchedIdRef_.set (x);
  }

  inline
  void Zone::
  coolSchedIdRef (const coolSchedIdRef_optional& x)
  {
    this->coolSchedIdRef_ = x;
  }

  inline
  void Zone::
  coolSchedIdRef (::std::auto_ptr< coolSchedIdRef_type > x)
  {
    this->coolSchedIdRef_.set (x);
  }

  inline
  const Zone::outAirSchedIdRef_optional& Zone::
  outAirSchedIdRef () const
  {
    return this->outAirSchedIdRef_;
  }

  inline
  Zone::outAirSchedIdRef_optional& Zone::
  outAirSchedIdRef ()
  {
    return this->outAirSchedIdRef_;
  }

  inline
  void Zone::
  outAirSchedIdRef (const outAirSchedIdRef_type& x)
  {
    this->outAirSchedIdRef_.set (x);
  }

  inline
  void Zone::
  outAirSchedIdRef (const outAirSchedIdRef_optional& x)
  {
    this->outAirSchedIdRef_ = x;
  }

  inline
  void Zone::
  outAirSchedIdRef (::std::auto_ptr< outAirSchedIdRef_type > x)
  {
    this->outAirSchedIdRef_.set (x);
  }

  inline
  const Zone::airChangesSchedIdRef_optional& Zone::
  airChangesSchedIdRef () const
  {
    return this->airChangesSchedIdRef_;
  }

  inline
  Zone::airChangesSchedIdRef_optional& Zone::
  airChangesSchedIdRef ()
  {
    return this->airChangesSchedIdRef_;
  }

  inline
  void Zone::
  airChangesSchedIdRef (const airChangesSchedIdRef_type& x)
  {
    this->airChangesSchedIdRef_.set (x);
  }

  inline
  void Zone::
  airChangesSchedIdRef (const airChangesSchedIdRef_optional& x)
  {
    this->airChangesSchedIdRef_ = x;
  }

  inline
  void Zone::
  airChangesSchedIdRef (::std::auto_ptr< airChangesSchedIdRef_type > x)
  {
    this->airChangesSchedIdRef_.set (x);
  }

  inline
  const Zone::fanSchedIdRef_optional& Zone::
  fanSchedIdRef () const
  {
    return this->fanSchedIdRef_;
  }

  inline
  Zone::fanSchedIdRef_optional& Zone::
  fanSchedIdRef ()
  {
    return this->fanSchedIdRef_;
  }

  inline
  void Zone::
  fanSchedIdRef (const fanSchedIdRef_type& x)
  {
    this->fanSchedIdRef_.set (x);
  }

  inline
  void Zone::
  fanSchedIdRef (const fanSchedIdRef_optional& x)
  {
    this->fanSchedIdRef_ = x;
  }

  inline
  void Zone::
  fanSchedIdRef (::std::auto_ptr< fanSchedIdRef_type > x)
  {
    this->fanSchedIdRef_.set (x);
  }

  inline
  const Zone::ifcGUID_optional& Zone::
  ifcGUID () const
  {
    return this->ifcGUID_;
  }

  inline
  Zone::ifcGUID_optional& Zone::
  ifcGUID ()
  {
    return this->ifcGUID_;
  }

  inline
  void Zone::
  ifcGUID (const ifcGUID_type& x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  void Zone::
  ifcGUID (const ifcGUID_optional& x)
  {
    this->ifcGUID_ = x;
  }

  inline
  void Zone::
  ifcGUID (::std::auto_ptr< ifcGUID_type > x)
  {
    this->ifcGUID_.set (x);
  }

  inline
  const Zone::programId_optional& Zone::
  programId () const
  {
    return this->programId_;
  }

  inline
  Zone::programId_optional& Zone::
  programId ()
  {
    return this->programId_;
  }

  inline
  void Zone::
  programId (const programId_type& x)
  {
    this->programId_.set (x);
  }

  inline
  void Zone::
  programId (const programId_optional& x)
  {
    this->programId_ = x;
  }

  inline
  void Zone::
  programId (::std::auto_ptr< programId_type > x)
  {
    this->programId_.set (x);
  }


  // ZoneCoolingLoad
  // 

  inline
  const ZoneCoolingLoad::unit_optional& ZoneCoolingLoad::
  unit () const
  {
    return this->unit_;
  }

  inline
  ZoneCoolingLoad::unit_optional& ZoneCoolingLoad::
  unit ()
  {
    return this->unit_;
  }

  inline
  void ZoneCoolingLoad::
  unit (const unit_type& x)
  {
    this->unit_.set (x);
  }

  inline
  void ZoneCoolingLoad::
  unit (const unit_optional& x)
  {
    this->unit_ = x;
  }

  inline
  void ZoneCoolingLoad::
  unit (::std::auto_ptr< unit_type > x)
  {
    this->unit_.set (x);
  }


  // engine
  // 

  inline
  engine::
  engine ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  engine::
  engine (value v)
  : ::xml_schema::nmtoken (_xsd_engine_literals_[v])
  {
  }

  inline
  engine::
  engine (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  engine::
  engine (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  engine::
  engine (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  engine::
  engine (const engine& v,
          ::xml_schema::flags f,
          ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  engine& engine::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_engine_literals_[v]);

    return *this;
  }


  // unit
  // 

  inline
  unit::
  unit ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  unit::
  unit (value v)
  : ::xml_schema::nmtoken (_xsd_unit_literals_[v])
  {
  }

  inline
  unit::
  unit (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unit::
  unit (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unit::
  unit (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unit::
  unit (const unit& v,
        ::xml_schema::flags f,
        ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  unit& unit::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_unit_literals_[v]);

    return *this;
  }


  // altEnergyType
  // 

  inline
  altEnergyType::
  altEnergyType ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  altEnergyType::
  altEnergyType (value v)
  : ::xml_schema::nmtoken (_xsd_altEnergyType_literals_[v])
  {
  }

  inline
  altEnergyType::
  altEnergyType (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  altEnergyType::
  altEnergyType (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  altEnergyType::
  altEnergyType (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  altEnergyType::
  altEnergyType (const altEnergyType& v,
                 ::xml_schema::flags f,
                 ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  altEnergyType& altEnergyType::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_altEnergyType_literals_[v]);

    return *this;
  }


  // unit1
  // 

  inline
  unit1::
  unit1 ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  unit1::
  unit1 (value v)
  : ::xml_schema::nmtoken (_xsd_unit1_literals_[v])
  {
  }

  inline
  unit1::
  unit1 (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unit1::
  unit1 (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unit1::
  unit1 (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unit1::
  unit1 (const unit1& v,
         ::xml_schema::flags f,
         ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  unit1& unit1::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_unit1_literals_[v]);

    return *this;
  }


  // unit2
  // 

  inline
  unit2::
  unit2 ()
  : ::xml_schema::nmtoken ()
  {
  }

  inline
  unit2::
  unit2 (value v)
  : ::xml_schema::nmtoken (_xsd_unit2_literals_[v])
  {
  }

  inline
  unit2::
  unit2 (const char* v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unit2::
  unit2 (const ::std::string& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unit2::
  unit2 (const ::xml_schema::nmtoken& v)
  : ::xml_schema::nmtoken (v)
  {
  }

  inline
  unit2::
  unit2 (const unit2& v,
         ::xml_schema::flags f,
         ::xml_schema::container* c)
  : ::xml_schema::nmtoken (v, f, c)
  {
  }

  inline
  unit2& unit2::
  operator= (value v)
  {
    static_cast< ::xml_schema::nmtoken& > (*this) = 
    ::xml_schema::nmtoken (_xsd_unit2_literals_[v]);

    return *this;
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // SCHEMA_GB_XSD_IXX
